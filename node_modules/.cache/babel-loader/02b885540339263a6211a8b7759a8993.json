{"ast":null,"code":"/**\n * @license Angular v10.0.14\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵAnimationGroupPlayer, NoopAnimationPlayer, AUTO_STYLE, ɵPRE_STYLE, sequence, style } from '@angular/animations';\nimport { Injectable } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nfunction isBrowser() {\n  return typeof window !== 'undefined' && typeof window.document !== 'undefined';\n}\n\nfunction isNode() {\n  // Checking only for `process` isn't enough to identify whether or not we're in a Node\n  // environment, because Webpack by default will polyfill the `process`. While we can discern\n  // that Webpack polyfilled it by looking at `process.browser`, it's very Webpack-specific and\n  // might not be future-proof. Instead we look at the stringified version of `process` which\n  // is `[object process]` in Node and `[object Object]` when polyfilled.\n  return typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n}\n\nfunction optimizeGroupPlayer(players) {\n  switch (players.length) {\n    case 0:\n      return new NoopAnimationPlayer();\n\n    case 1:\n      return players[0];\n\n    default:\n      return new ɵAnimationGroupPlayer(players);\n  }\n}\n\nfunction normalizeKeyframes(driver, normalizer, element, keyframes, preStyles = {}, postStyles = {}) {\n  const errors = [];\n  const normalizedKeyframes = [];\n  let previousOffset = -1;\n  let previousKeyframe = null;\n  keyframes.forEach(kf => {\n    const offset = kf['offset'];\n    const isSameOffset = offset == previousOffset;\n    const normalizedKeyframe = isSameOffset && previousKeyframe || {};\n    Object.keys(kf).forEach(prop => {\n      let normalizedProp = prop;\n      let normalizedValue = kf[prop];\n\n      if (prop !== 'offset') {\n        normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n\n        switch (normalizedValue) {\n          case ɵPRE_STYLE:\n            normalizedValue = preStyles[prop];\n            break;\n\n          case AUTO_STYLE:\n            normalizedValue = postStyles[prop];\n            break;\n\n          default:\n            normalizedValue = normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n            break;\n        }\n      }\n\n      normalizedKeyframe[normalizedProp] = normalizedValue;\n    });\n\n    if (!isSameOffset) {\n      normalizedKeyframes.push(normalizedKeyframe);\n    }\n\n    previousKeyframe = normalizedKeyframe;\n    previousOffset = offset;\n  });\n\n  if (errors.length) {\n    const LINE_START = '\\n - ';\n    throw new Error(`Unable to animate due to the following errors:${LINE_START}${errors.join(LINE_START)}`);\n  }\n\n  return normalizedKeyframes;\n}\n\nfunction listenOnPlayer(player, eventName, event, callback) {\n  switch (eventName) {\n    case 'start':\n      player.onStart(() => callback(event && copyAnimationEvent(event, 'start', player)));\n      break;\n\n    case 'done':\n      player.onDone(() => callback(event && copyAnimationEvent(event, 'done', player)));\n      break;\n\n    case 'destroy':\n      player.onDestroy(() => callback(event && copyAnimationEvent(event, 'destroy', player)));\n      break;\n  }\n}\n\nfunction copyAnimationEvent(e, phaseName, player) {\n  const totalTime = player.totalTime;\n  const disabled = player.disabled ? true : false;\n  const event = makeAnimationEvent(e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName, totalTime == undefined ? e.totalTime : totalTime, disabled);\n  const data = e['_data'];\n\n  if (data != null) {\n    event['_data'] = data;\n  }\n\n  return event;\n}\n\nfunction makeAnimationEvent(element, triggerName, fromState, toState, phaseName = '', totalTime = 0, disabled) {\n  return {\n    element,\n    triggerName,\n    fromState,\n    toState,\n    phaseName,\n    totalTime,\n    disabled: !!disabled\n  };\n}\n\nfunction getOrSetAsInMap(map, key, defaultValue) {\n  let value;\n\n  if (map instanceof Map) {\n    value = map.get(key);\n\n    if (!value) {\n      map.set(key, value = defaultValue);\n    }\n  } else {\n    value = map[key];\n\n    if (!value) {\n      value = map[key] = defaultValue;\n    }\n  }\n\n  return value;\n}\n\nfunction parseTimelineCommand(command) {\n  const separatorPos = command.indexOf(':');\n  const id = command.substring(1, separatorPos);\n  const action = command.substr(separatorPos + 1);\n  return [id, action];\n}\n\nlet _contains = (elm1, elm2) => false;\n\nconst ɵ0 = _contains;\n\nlet _matches = (element, selector) => false;\n\nconst ɵ1 = _matches;\n\nlet _query = (element, selector, multi) => {\n  return [];\n};\n\nconst ɵ2 = _query; // Define utility methods for browsers and platform-server(domino) where Element\n// and utility methods exist.\n\nconst _isNode = isNode();\n\nif (_isNode || typeof Element !== 'undefined') {\n  // this is well supported in all browsers\n  _contains = (elm1, elm2) => {\n    return elm1.contains(elm2);\n  };\n\n  _matches = (() => {\n    if (_isNode || Element.prototype.matches) {\n      return (element, selector) => element.matches(selector);\n    } else {\n      const proto = Element.prototype;\n      const fn = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector || proto.oMatchesSelector || proto.webkitMatchesSelector;\n\n      if (fn) {\n        return (element, selector) => fn.apply(element, [selector]);\n      } else {\n        return _matches;\n      }\n    }\n  })();\n\n  _query = (element, selector, multi) => {\n    let results = [];\n\n    if (multi) {\n      results.push(...element.querySelectorAll(selector));\n    } else {\n      const elm = element.querySelector(selector);\n\n      if (elm) {\n        results.push(elm);\n      }\n    }\n\n    return results;\n  };\n}\n\nfunction containsVendorPrefix(prop) {\n  // Webkit is the only real popular vendor prefix nowadays\n  // cc: http://shouldiprefix.com/\n  return prop.substring(1, 6) == 'ebkit'; // webkit or Webkit\n}\n\nlet _CACHED_BODY = null;\nlet _IS_WEBKIT = false;\n\nfunction validateStyleProperty(prop) {\n  if (!_CACHED_BODY) {\n    _CACHED_BODY = getBodyNode() || {};\n    _IS_WEBKIT = _CACHED_BODY.style ? 'WebkitAppearance' in _CACHED_BODY.style : false;\n  }\n\n  let result = true;\n\n  if (_CACHED_BODY.style && !containsVendorPrefix(prop)) {\n    result = prop in _CACHED_BODY.style;\n\n    if (!result && _IS_WEBKIT) {\n      const camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.substr(1);\n      result = camelProp in _CACHED_BODY.style;\n    }\n  }\n\n  return result;\n}\n\nfunction getBodyNode() {\n  if (typeof document != 'undefined') {\n    return document.body;\n  }\n\n  return null;\n}\n\nconst matchesElement = _matches;\nconst containsElement = _contains;\nconst invokeQuery = _query;\n\nfunction hypenatePropsObject(object) {\n  const newObj = {};\n  Object.keys(object).forEach(prop => {\n    const newProp = prop.replace(/([a-z])([A-Z])/g, '$1-$2');\n    newObj[newProp] = object[prop];\n  });\n  return newObj;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nclass NoopAnimationDriver {\n  validateStyleProperty(prop) {\n    return validateStyleProperty(prop);\n  }\n\n  matchesElement(element, selector) {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1, elm2) {\n    return containsElement(elm1, elm2);\n  }\n\n  query(element, selector, multi) {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element, prop, defaultValue) {\n    return defaultValue || '';\n  }\n\n  animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n    return new NoopAnimationPlayer(duration, delay);\n  }\n\n}\n\nNoopAnimationDriver.ɵfac = function NoopAnimationDriver_Factory(t) {\n  return new (t || NoopAnimationDriver)();\n};\n\nNoopAnimationDriver.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: NoopAnimationDriver,\n  factory: NoopAnimationDriver.ɵfac\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(NoopAnimationDriver, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @publicApi\n */\n\n\nclass AnimationDriver {}\n\nAnimationDriver.NOOP = new NoopAnimationDriver();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst ONE_SECOND = 1000;\nconst SUBSTITUTION_EXPR_START = '{{';\nconst SUBSTITUTION_EXPR_END = '}}';\nconst ENTER_CLASSNAME = 'ng-enter';\nconst LEAVE_CLASSNAME = 'ng-leave';\nconst ENTER_SELECTOR = '.ng-enter';\nconst LEAVE_SELECTOR = '.ng-leave';\nconst NG_TRIGGER_CLASSNAME = 'ng-trigger';\nconst NG_TRIGGER_SELECTOR = '.ng-trigger';\nconst NG_ANIMATING_CLASSNAME = 'ng-animating';\nconst NG_ANIMATING_SELECTOR = '.ng-animating';\n\nfunction resolveTimingValue(value) {\n  if (typeof value == 'number') return value;\n  const matches = value.match(/^(-?[\\.\\d]+)(m?s)/);\n  if (!matches || matches.length < 2) return 0;\n  return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n\nfunction _convertTimeValueToMS(value, unit) {\n  switch (unit) {\n    case 's':\n      return value * ONE_SECOND;\n\n    default:\n      // ms or something else\n      return value;\n  }\n}\n\nfunction resolveTiming(timings, errors, allowNegativeValues) {\n  return timings.hasOwnProperty('duration') ? timings : parseTimeExpression(timings, errors, allowNegativeValues);\n}\n\nfunction parseTimeExpression(exp, errors, allowNegativeValues) {\n  const regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n  let duration;\n  let delay = 0;\n  let easing = '';\n\n  if (typeof exp === 'string') {\n    const matches = exp.match(regex);\n\n    if (matches === null) {\n      errors.push(`The provided timing value \"${exp}\" is invalid.`);\n      return {\n        duration: 0,\n        delay: 0,\n        easing: ''\n      };\n    }\n\n    duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n    const delayMatch = matches[3];\n\n    if (delayMatch != null) {\n      delay = _convertTimeValueToMS(parseFloat(delayMatch), matches[4]);\n    }\n\n    const easingVal = matches[5];\n\n    if (easingVal) {\n      easing = easingVal;\n    }\n  } else {\n    duration = exp;\n  }\n\n  if (!allowNegativeValues) {\n    let containsErrors = false;\n    let startIndex = errors.length;\n\n    if (duration < 0) {\n      errors.push(`Duration values below 0 are not allowed for this animation step.`);\n      containsErrors = true;\n    }\n\n    if (delay < 0) {\n      errors.push(`Delay values below 0 are not allowed for this animation step.`);\n      containsErrors = true;\n    }\n\n    if (containsErrors) {\n      errors.splice(startIndex, 0, `The provided timing value \"${exp}\" is invalid.`);\n    }\n  }\n\n  return {\n    duration,\n    delay,\n    easing\n  };\n}\n\nfunction copyObj(obj, destination = {}) {\n  Object.keys(obj).forEach(prop => {\n    destination[prop] = obj[prop];\n  });\n  return destination;\n}\n\nfunction normalizeStyles(styles) {\n  const normalizedStyles = {};\n\n  if (Array.isArray(styles)) {\n    styles.forEach(data => copyStyles(data, false, normalizedStyles));\n  } else {\n    copyStyles(styles, false, normalizedStyles);\n  }\n\n  return normalizedStyles;\n}\n\nfunction copyStyles(styles, readPrototype, destination = {}) {\n  if (readPrototype) {\n    // we make use of a for-in loop so that the\n    // prototypically inherited properties are\n    // revealed from the backFill map\n    for (let prop in styles) {\n      destination[prop] = styles[prop];\n    }\n  } else {\n    copyObj(styles, destination);\n  }\n\n  return destination;\n}\n\nfunction getStyleAttributeString(element, key, value) {\n  // Return the key-value pair string to be added to the style attribute for the\n  // given CSS style key.\n  if (value) {\n    return key + ':' + value + ';';\n  } else {\n    return '';\n  }\n}\n\nfunction writeStyleAttribute(element) {\n  // Read the style property of the element and manually reflect it to the\n  // style attribute. This is needed because Domino on platform-server doesn't\n  // understand the full set of allowed CSS properties and doesn't reflect some\n  // of them automatically.\n  let styleAttrValue = '';\n\n  for (let i = 0; i < element.style.length; i++) {\n    const key = element.style.item(i);\n    styleAttrValue += getStyleAttributeString(element, key, element.style.getPropertyValue(key));\n  }\n\n  for (const key in element.style) {\n    // Skip internal Domino properties that don't need to be reflected.\n    if (!element.style.hasOwnProperty(key) || key.startsWith('_')) {\n      continue;\n    }\n\n    const dashKey = camelCaseToDashCase(key);\n    styleAttrValue += getStyleAttributeString(element, dashKey, element.style[key]);\n  }\n\n  element.setAttribute('style', styleAttrValue);\n}\n\nfunction setStyles(element, styles, formerStyles) {\n  if (element['style']) {\n    Object.keys(styles).forEach(prop => {\n      const camelProp = dashCaseToCamelCase(prop);\n\n      if (formerStyles && !formerStyles.hasOwnProperty(prop)) {\n        formerStyles[prop] = element.style[camelProp];\n      }\n\n      element.style[camelProp] = styles[prop];\n    }); // On the server set the 'style' attribute since it's not automatically reflected.\n\n    if (isNode()) {\n      writeStyleAttribute(element);\n    }\n  }\n}\n\nfunction eraseStyles(element, styles) {\n  if (element['style']) {\n    Object.keys(styles).forEach(prop => {\n      const camelProp = dashCaseToCamelCase(prop);\n      element.style[camelProp] = '';\n    }); // On the server set the 'style' attribute since it's not automatically reflected.\n\n    if (isNode()) {\n      writeStyleAttribute(element);\n    }\n  }\n}\n\nfunction normalizeAnimationEntry(steps) {\n  if (Array.isArray(steps)) {\n    if (steps.length == 1) return steps[0];\n    return sequence(steps);\n  }\n\n  return steps;\n}\n\nfunction validateStyleParams(value, options, errors) {\n  const params = options.params || {};\n  const matches = extractStyleParams(value);\n\n  if (matches.length) {\n    matches.forEach(varName => {\n      if (!params.hasOwnProperty(varName)) {\n        errors.push(`Unable to resolve the local animation param ${varName} in the given list of values`);\n      }\n    });\n  }\n}\n\nconst PARAM_REGEX = new RegExp(`${SUBSTITUTION_EXPR_START}\\\\s*(.+?)\\\\s*${SUBSTITUTION_EXPR_END}`, 'g');\n\nfunction extractStyleParams(value) {\n  let params = [];\n\n  if (typeof value === 'string') {\n    let match;\n\n    while (match = PARAM_REGEX.exec(value)) {\n      params.push(match[1]);\n    }\n\n    PARAM_REGEX.lastIndex = 0;\n  }\n\n  return params;\n}\n\nfunction interpolateParams(value, params, errors) {\n  const original = value.toString();\n  const str = original.replace(PARAM_REGEX, (_, varName) => {\n    let localVal = params[varName]; // this means that the value was never overridden by the data passed in by the user\n\n    if (!params.hasOwnProperty(varName)) {\n      errors.push(`Please provide a value for the animation param ${varName}`);\n      localVal = '';\n    }\n\n    return localVal.toString();\n  }); // we do this to assert that numeric values stay as they are\n\n  return str == original ? value : str;\n}\n\nfunction iteratorToArray(iterator) {\n  const arr = [];\n  let item = iterator.next();\n\n  while (!item.done) {\n    arr.push(item.value);\n    item = iterator.next();\n  }\n\n  return arr;\n}\n\nfunction mergeAnimationOptions(source, destination) {\n  if (source.params) {\n    const p0 = source.params;\n\n    if (!destination.params) {\n      destination.params = {};\n    }\n\n    const p1 = destination.params;\n    Object.keys(p0).forEach(param => {\n      if (!p1.hasOwnProperty(param)) {\n        p1[param] = p0[param];\n      }\n    });\n  }\n\n  return destination;\n}\n\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction allowPreviousPlayerStylesMerge(duration, delay) {\n  return duration === 0 || delay === 0;\n}\n\nfunction balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles) {\n  const previousStyleProps = Object.keys(previousStyles);\n\n  if (previousStyleProps.length && keyframes.length) {\n    let startingKeyframe = keyframes[0];\n    let missingStyleProps = [];\n    previousStyleProps.forEach(prop => {\n      if (!startingKeyframe.hasOwnProperty(prop)) {\n        missingStyleProps.push(prop);\n      }\n\n      startingKeyframe[prop] = previousStyles[prop];\n    });\n\n    if (missingStyleProps.length) {\n      // tslint:disable-next-line\n      for (var i = 1; i < keyframes.length; i++) {\n        let kf = keyframes[i];\n        missingStyleProps.forEach(function (prop) {\n          kf[prop] = computeStyle(element, prop);\n        });\n      }\n    }\n  }\n\n  return keyframes;\n}\n\nfunction visitDslNode(visitor, node, context) {\n  switch (node.type) {\n    case 7\n    /* Trigger */\n    :\n      return visitor.visitTrigger(node, context);\n\n    case 0\n    /* State */\n    :\n      return visitor.visitState(node, context);\n\n    case 1\n    /* Transition */\n    :\n      return visitor.visitTransition(node, context);\n\n    case 2\n    /* Sequence */\n    :\n      return visitor.visitSequence(node, context);\n\n    case 3\n    /* Group */\n    :\n      return visitor.visitGroup(node, context);\n\n    case 4\n    /* Animate */\n    :\n      return visitor.visitAnimate(node, context);\n\n    case 5\n    /* Keyframes */\n    :\n      return visitor.visitKeyframes(node, context);\n\n    case 6\n    /* Style */\n    :\n      return visitor.visitStyle(node, context);\n\n    case 8\n    /* Reference */\n    :\n      return visitor.visitReference(node, context);\n\n    case 9\n    /* AnimateChild */\n    :\n      return visitor.visitAnimateChild(node, context);\n\n    case 10\n    /* AnimateRef */\n    :\n      return visitor.visitAnimateRef(node, context);\n\n    case 11\n    /* Query */\n    :\n      return visitor.visitQuery(node, context);\n\n    case 12\n    /* Stagger */\n    :\n      return visitor.visitStagger(node, context);\n\n    default:\n      throw new Error(`Unable to resolve animation metadata node #${node.type}`);\n  }\n}\n\nfunction computeStyle(element, prop) {\n  return window.getComputedStyle(element)[prop];\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ANY_STATE = '*';\n\nfunction parseTransitionExpr(transitionValue, errors) {\n  const expressions = [];\n\n  if (typeof transitionValue == 'string') {\n    transitionValue.split(/\\s*,\\s*/).forEach(str => parseInnerTransitionStr(str, expressions, errors));\n  } else {\n    expressions.push(transitionValue);\n  }\n\n  return expressions;\n}\n\nfunction parseInnerTransitionStr(eventStr, expressions, errors) {\n  if (eventStr[0] == ':') {\n    const result = parseAnimationAlias(eventStr, errors);\n\n    if (typeof result == 'function') {\n      expressions.push(result);\n      return;\n    }\n\n    eventStr = result;\n  }\n\n  const match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n\n  if (match == null || match.length < 4) {\n    errors.push(`The provided transition expression \"${eventStr}\" is not supported`);\n    return expressions;\n  }\n\n  const fromState = match[1];\n  const separator = match[2];\n  const toState = match[3];\n  expressions.push(makeLambdaFromStates(fromState, toState));\n  const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(makeLambdaFromStates(toState, fromState));\n  }\n}\n\nfunction parseAnimationAlias(alias, errors) {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n\n    case ':leave':\n      return '* => void';\n\n    case ':increment':\n      return (fromState, toState) => parseFloat(toState) > parseFloat(fromState);\n\n    case ':decrement':\n      return (fromState, toState) => parseFloat(toState) < parseFloat(fromState);\n\n    default:\n      errors.push(`The transition alias value \"${alias}\" is not supported`);\n      return '* => *';\n  }\n} // DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\n\n\nconst TRUE_BOOLEAN_VALUES = new Set(['true', '1']);\nconst FALSE_BOOLEAN_VALUES = new Set(['false', '0']);\n\nfunction makeLambdaFromStates(lhs, rhs) {\n  const LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n  const RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n  return (fromState, toState) => {\n    let lhsMatch = lhs == ANY_STATE || lhs == fromState;\n    let rhsMatch = rhs == ANY_STATE || rhs == toState;\n\n    if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n      lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n    }\n\n    if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n      rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n    }\n\n    return lhsMatch && rhsMatch;\n  };\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst SELF_TOKEN = ':self';\nconst SELF_TOKEN_REGEX = new RegExp(`\\s*${SELF_TOKEN}\\s*,?`, 'g');\n/*\n * [Validation]\n * The visitor code below will traverse the animation AST generated by the animation verb functions\n * (the output is a tree of objects) and attempt to perform a series of validations on the data. The\n * following corner-cases will be validated:\n *\n * 1. Overlap of animations\n * Given that a CSS property cannot be animated in more than one place at the same time, it's\n * important that this behavior is detected and validated. The way in which this occurs is that\n * each time a style property is examined, a string-map containing the property will be updated with\n * the start and end times for when the property is used within an animation step.\n *\n * If there are two or more parallel animations that are currently running (these are invoked by the\n * group()) on the same element then the validator will throw an error. Since the start/end timing\n * values are collected for each property then if the current animation step is animating the same\n * property and its timing values fall anywhere into the window of time that the property is\n * currently being animated within then this is what causes an error.\n *\n * 2. Timing values\n * The validator will validate to see if a timing value of `duration delay easing` or\n * `durationNumber` is valid or not.\n *\n * (note that upon validation the code below will replace the timing data with an object containing\n * {duration,delay,easing}.\n *\n * 3. Offset Validation\n * Each of the style() calls are allowed to have an offset value when placed inside of keyframes().\n * Offsets within keyframes() are considered valid when:\n *\n *   - No offsets are used at all\n *   - Each style() entry contains an offset value\n *   - Each offset is between 0 and 1\n *   - Each offset is greater to or equal than the previous one\n *\n * Otherwise an error will be thrown.\n */\n\nfunction buildAnimationAst(driver, metadata, errors) {\n  return new AnimationAstBuilderVisitor(driver).build(metadata, errors);\n}\n\nconst ROOT_SELECTOR = '';\n\nclass AnimationAstBuilderVisitor {\n  constructor(_driver) {\n    this._driver = _driver;\n  }\n\n  build(metadata, errors) {\n    const context = new AnimationAstBuilderContext(errors);\n\n    this._resetContextStyleTimingState(context);\n\n    return visitDslNode(this, normalizeAnimationEntry(metadata), context);\n  }\n\n  _resetContextStyleTimingState(context) {\n    context.currentQuerySelector = ROOT_SELECTOR;\n    context.collectedStyles = {};\n    context.collectedStyles[ROOT_SELECTOR] = {};\n    context.currentTime = 0;\n  }\n\n  visitTrigger(metadata, context) {\n    let queryCount = context.queryCount = 0;\n    let depCount = context.depCount = 0;\n    const states = [];\n    const transitions = [];\n\n    if (metadata.name.charAt(0) == '@') {\n      context.errors.push('animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\\'@foo\\', [...]))');\n    }\n\n    metadata.definitions.forEach(def => {\n      this._resetContextStyleTimingState(context);\n\n      if (def.type == 0\n      /* State */\n      ) {\n          const stateDef = def;\n          const name = stateDef.name;\n          name.toString().split(/\\s*,\\s*/).forEach(n => {\n            stateDef.name = n;\n            states.push(this.visitState(stateDef, context));\n          });\n          stateDef.name = name;\n        } else if (def.type == 1\n      /* Transition */\n      ) {\n          const transition = this.visitTransition(def, context);\n          queryCount += transition.queryCount;\n          depCount += transition.depCount;\n          transitions.push(transition);\n        } else {\n        context.errors.push('only state() and transition() definitions can sit inside of a trigger()');\n      }\n    });\n    return {\n      type: 7\n      /* Trigger */\n      ,\n      name: metadata.name,\n      states,\n      transitions,\n      queryCount,\n      depCount,\n      options: null\n    };\n  }\n\n  visitState(metadata, context) {\n    const styleAst = this.visitStyle(metadata.styles, context);\n    const astParams = metadata.options && metadata.options.params || null;\n\n    if (styleAst.containsDynamicStyles) {\n      const missingSubs = new Set();\n      const params = astParams || {};\n      styleAst.styles.forEach(value => {\n        if (isObject(value)) {\n          const stylesObj = value;\n          Object.keys(stylesObj).forEach(prop => {\n            extractStyleParams(stylesObj[prop]).forEach(sub => {\n              if (!params.hasOwnProperty(sub)) {\n                missingSubs.add(sub);\n              }\n            });\n          });\n        }\n      });\n\n      if (missingSubs.size) {\n        const missingSubsArr = iteratorToArray(missingSubs.values());\n        context.errors.push(`state(\"${metadata.name}\", ...) must define default values for all the following style substitutions: ${missingSubsArr.join(', ')}`);\n      }\n    }\n\n    return {\n      type: 0\n      /* State */\n      ,\n      name: metadata.name,\n      style: styleAst,\n      options: astParams ? {\n        params: astParams\n      } : null\n    };\n  }\n\n  visitTransition(metadata, context) {\n    context.queryCount = 0;\n    context.depCount = 0;\n    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n    const matchers = parseTransitionExpr(metadata.expr, context.errors);\n    return {\n      type: 1\n      /* Transition */\n      ,\n      matchers,\n      animation,\n      queryCount: context.queryCount,\n      depCount: context.depCount,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitSequence(metadata, context) {\n    return {\n      type: 2\n      /* Sequence */\n      ,\n      steps: metadata.steps.map(s => visitDslNode(this, s, context)),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitGroup(metadata, context) {\n    const currentTime = context.currentTime;\n    let furthestTime = 0;\n    const steps = metadata.steps.map(step => {\n      context.currentTime = currentTime;\n      const innerAst = visitDslNode(this, step, context);\n      furthestTime = Math.max(furthestTime, context.currentTime);\n      return innerAst;\n    });\n    context.currentTime = furthestTime;\n    return {\n      type: 3\n      /* Group */\n      ,\n      steps,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitAnimate(metadata, context) {\n    const timingAst = constructTimingAst(metadata.timings, context.errors);\n    context.currentAnimateTimings = timingAst;\n    let styleAst;\n    let styleMetadata = metadata.styles ? metadata.styles : style({});\n\n    if (styleMetadata.type == 5\n    /* Keyframes */\n    ) {\n        styleAst = this.visitKeyframes(styleMetadata, context);\n      } else {\n      let styleMetadata = metadata.styles;\n      let isEmpty = false;\n\n      if (!styleMetadata) {\n        isEmpty = true;\n        const newStyleData = {};\n\n        if (timingAst.easing) {\n          newStyleData['easing'] = timingAst.easing;\n        }\n\n        styleMetadata = style(newStyleData);\n      }\n\n      context.currentTime += timingAst.duration + timingAst.delay;\n\n      const _styleAst = this.visitStyle(styleMetadata, context);\n\n      _styleAst.isEmptyStep = isEmpty;\n      styleAst = _styleAst;\n    }\n\n    context.currentAnimateTimings = null;\n    return {\n      type: 4\n      /* Animate */\n      ,\n      timings: timingAst,\n      style: styleAst,\n      options: null\n    };\n  }\n\n  visitStyle(metadata, context) {\n    const ast = this._makeStyleAst(metadata, context);\n\n    this._validateStyleAst(ast, context);\n\n    return ast;\n  }\n\n  _makeStyleAst(metadata, context) {\n    const styles = [];\n\n    if (Array.isArray(metadata.styles)) {\n      metadata.styles.forEach(styleTuple => {\n        if (typeof styleTuple == 'string') {\n          if (styleTuple == AUTO_STYLE) {\n            styles.push(styleTuple);\n          } else {\n            context.errors.push(`The provided style string value ${styleTuple} is not allowed.`);\n          }\n        } else {\n          styles.push(styleTuple);\n        }\n      });\n    } else {\n      styles.push(metadata.styles);\n    }\n\n    let containsDynamicStyles = false;\n    let collectedEasing = null;\n    styles.forEach(styleData => {\n      if (isObject(styleData)) {\n        const styleMap = styleData;\n        const easing = styleMap['easing'];\n\n        if (easing) {\n          collectedEasing = easing;\n          delete styleMap['easing'];\n        }\n\n        if (!containsDynamicStyles) {\n          for (let prop in styleMap) {\n            const value = styleMap[prop];\n\n            if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n              containsDynamicStyles = true;\n              break;\n            }\n          }\n        }\n      }\n    });\n    return {\n      type: 6\n      /* Style */\n      ,\n      styles,\n      easing: collectedEasing,\n      offset: metadata.offset,\n      containsDynamicStyles,\n      options: null\n    };\n  }\n\n  _validateStyleAst(ast, context) {\n    const timings = context.currentAnimateTimings;\n    let endTime = context.currentTime;\n    let startTime = context.currentTime;\n\n    if (timings && startTime > 0) {\n      startTime -= timings.duration + timings.delay;\n    }\n\n    ast.styles.forEach(tuple => {\n      if (typeof tuple == 'string') return;\n      Object.keys(tuple).forEach(prop => {\n        if (!this._driver.validateStyleProperty(prop)) {\n          context.errors.push(`The provided animation property \"${prop}\" is not a supported CSS property for animations`);\n          return;\n        }\n\n        const collectedStyles = context.collectedStyles[context.currentQuerySelector];\n        const collectedEntry = collectedStyles[prop];\n        let updateCollectedStyle = true;\n\n        if (collectedEntry) {\n          if (startTime != endTime && startTime >= collectedEntry.startTime && endTime <= collectedEntry.endTime) {\n            context.errors.push(`The CSS property \"${prop}\" that exists between the times of \"${collectedEntry.startTime}ms\" and \"${collectedEntry.endTime}ms\" is also being animated in a parallel animation between the times of \"${startTime}ms\" and \"${endTime}ms\"`);\n            updateCollectedStyle = false;\n          } // we always choose the smaller start time value since we\n          // want to have a record of the entire animation window where\n          // the style property is being animated in between\n\n\n          startTime = collectedEntry.startTime;\n        }\n\n        if (updateCollectedStyle) {\n          collectedStyles[prop] = {\n            startTime,\n            endTime\n          };\n        }\n\n        if (context.options) {\n          validateStyleParams(tuple[prop], context.options, context.errors);\n        }\n      });\n    });\n  }\n\n  visitKeyframes(metadata, context) {\n    const ast = {\n      type: 5\n      /* Keyframes */\n      ,\n      styles: [],\n      options: null\n    };\n\n    if (!context.currentAnimateTimings) {\n      context.errors.push(`keyframes() must be placed inside of a call to animate()`);\n      return ast;\n    }\n\n    const MAX_KEYFRAME_OFFSET = 1;\n    let totalKeyframesWithOffsets = 0;\n    const offsets = [];\n    let offsetsOutOfOrder = false;\n    let keyframesOutOfRange = false;\n    let previousOffset = 0;\n    const keyframes = metadata.steps.map(styles => {\n      const style = this._makeStyleAst(styles, context);\n\n      let offsetVal = style.offset != null ? style.offset : consumeOffset(style.styles);\n      let offset = 0;\n\n      if (offsetVal != null) {\n        totalKeyframesWithOffsets++;\n        offset = style.offset = offsetVal;\n      }\n\n      keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n      offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n      previousOffset = offset;\n      offsets.push(offset);\n      return style;\n    });\n\n    if (keyframesOutOfRange) {\n      context.errors.push(`Please ensure that all keyframe offsets are between 0 and 1`);\n    }\n\n    if (offsetsOutOfOrder) {\n      context.errors.push(`Please ensure that all keyframe offsets are in order`);\n    }\n\n    const length = metadata.steps.length;\n    let generatedOffset = 0;\n\n    if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n      context.errors.push(`Not all style() steps within the declared keyframes() contain offsets`);\n    } else if (totalKeyframesWithOffsets == 0) {\n      generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n    }\n\n    const limit = length - 1;\n    const currentTime = context.currentTime;\n    const currentAnimateTimings = context.currentAnimateTimings;\n    const animateDuration = currentAnimateTimings.duration;\n    keyframes.forEach((kf, i) => {\n      const offset = generatedOffset > 0 ? i == limit ? 1 : generatedOffset * i : offsets[i];\n      const durationUpToThisFrame = offset * animateDuration;\n      context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n      currentAnimateTimings.duration = durationUpToThisFrame;\n\n      this._validateStyleAst(kf, context);\n\n      kf.offset = offset;\n      ast.styles.push(kf);\n    });\n    return ast;\n  }\n\n  visitReference(metadata, context) {\n    return {\n      type: 8\n      /* Reference */\n      ,\n      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitAnimateChild(metadata, context) {\n    context.depCount++;\n    return {\n      type: 9\n      /* AnimateChild */\n      ,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitAnimateRef(metadata, context) {\n    return {\n      type: 10\n      /* AnimateRef */\n      ,\n      animation: this.visitReference(metadata.animation, context),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitQuery(metadata, context) {\n    const parentSelector = context.currentQuerySelector;\n    const options = metadata.options || {};\n    context.queryCount++;\n    context.currentQuery = metadata;\n    const [selector, includeSelf] = normalizeSelector(metadata.selector);\n    context.currentQuerySelector = parentSelector.length ? parentSelector + ' ' + selector : selector;\n    getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n    context.currentQuery = null;\n    context.currentQuerySelector = parentSelector;\n    return {\n      type: 11\n      /* Query */\n      ,\n      selector,\n      limit: options.limit || 0,\n      optional: !!options.optional,\n      includeSelf,\n      animation,\n      originalSelector: metadata.selector,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitStagger(metadata, context) {\n    if (!context.currentQuery) {\n      context.errors.push(`stagger() can only be used inside of query()`);\n    }\n\n    const timings = metadata.timings === 'full' ? {\n      duration: 0,\n      delay: 0,\n      easing: 'full'\n    } : resolveTiming(metadata.timings, context.errors, true);\n    return {\n      type: 12\n      /* Stagger */\n      ,\n      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n      timings,\n      options: null\n    };\n  }\n\n}\n\nfunction normalizeSelector(selector) {\n  const hasAmpersand = selector.split(/\\s*,\\s*/).find(token => token == SELF_TOKEN) ? true : false;\n\n  if (hasAmpersand) {\n    selector = selector.replace(SELF_TOKEN_REGEX, '');\n  } // the :enter and :leave selectors are filled in at runtime during timeline building\n\n\n  selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR).replace(/@\\w+/g, match => NG_TRIGGER_SELECTOR + '-' + match.substr(1)).replace(/:animating/g, NG_ANIMATING_SELECTOR);\n  return [selector, hasAmpersand];\n}\n\nfunction normalizeParams(obj) {\n  return obj ? copyObj(obj) : null;\n}\n\nclass AnimationAstBuilderContext {\n  constructor(errors) {\n    this.errors = errors;\n    this.queryCount = 0;\n    this.depCount = 0;\n    this.currentTransition = null;\n    this.currentQuery = null;\n    this.currentQuerySelector = null;\n    this.currentAnimateTimings = null;\n    this.currentTime = 0;\n    this.collectedStyles = {};\n    this.options = null;\n  }\n\n}\n\nfunction consumeOffset(styles) {\n  if (typeof styles == 'string') return null;\n  let offset = null;\n\n  if (Array.isArray(styles)) {\n    styles.forEach(styleTuple => {\n      if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n        const obj = styleTuple;\n        offset = parseFloat(obj['offset']);\n        delete obj['offset'];\n      }\n    });\n  } else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n    const obj = styles;\n    offset = parseFloat(obj['offset']);\n    delete obj['offset'];\n  }\n\n  return offset;\n}\n\nfunction isObject(value) {\n  return !Array.isArray(value) && typeof value == 'object';\n}\n\nfunction constructTimingAst(value, errors) {\n  let timings = null;\n\n  if (value.hasOwnProperty('duration')) {\n    timings = value;\n  } else if (typeof value == 'number') {\n    const duration = resolveTiming(value, errors).duration;\n    return makeTimingAst(duration, 0, '');\n  }\n\n  const strValue = value;\n  const isDynamic = strValue.split(/\\s+/).some(v => v.charAt(0) == '{' && v.charAt(1) == '{');\n\n  if (isDynamic) {\n    const ast = makeTimingAst(0, 0, '');\n    ast.dynamic = true;\n    ast.strValue = strValue;\n    return ast;\n  }\n\n  timings = timings || resolveTiming(strValue, errors);\n  return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\n\nfunction normalizeAnimationOptions(options) {\n  if (options) {\n    options = copyObj(options);\n\n    if (options['params']) {\n      options['params'] = normalizeParams(options['params']);\n    }\n  } else {\n    options = {};\n  }\n\n  return options;\n}\n\nfunction makeTimingAst(duration, delay, easing) {\n  return {\n    duration,\n    delay,\n    easing\n  };\n}\n\nfunction createTimelineInstruction(element, keyframes, preStyleProps, postStyleProps, duration, delay, easing = null, subTimeline = false) {\n  return {\n    type: 1\n    /* TimelineAnimation */\n    ,\n    element,\n    keyframes,\n    preStyleProps,\n    postStyleProps,\n    duration,\n    delay,\n    totalTime: duration + delay,\n    easing,\n    subTimeline\n  };\n}\n\nclass ElementInstructionMap {\n  constructor() {\n    this._map = new Map();\n  }\n\n  consume(element) {\n    let instructions = this._map.get(element);\n\n    if (instructions) {\n      this._map.delete(element);\n    } else {\n      instructions = [];\n    }\n\n    return instructions;\n  }\n\n  append(element, instructions) {\n    let existingInstructions = this._map.get(element);\n\n    if (!existingInstructions) {\n      this._map.set(element, existingInstructions = []);\n    }\n\n    existingInstructions.push(...instructions);\n  }\n\n  has(element) {\n    return this._map.has(element);\n  }\n\n  clear() {\n    this._map.clear();\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ONE_FRAME_IN_MILLISECONDS = 1;\nconst ENTER_TOKEN = ':enter';\nconst ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nconst LEAVE_TOKEN = ':leave';\nconst LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n/*\n * The code within this file aims to generate web-animations-compatible keyframes from Angular's\n * animation DSL code.\n *\n * The code below will be converted from:\n *\n * ```\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(1000, style({ opacity: 0 }))\n * ])\n * ```\n *\n * To:\n * ```\n * keyframes = [{ opacity: 0, offset: 0 }, { opacity: 1, offset: 1 }]\n * duration = 1000\n * delay = 0\n * easing = ''\n * ```\n *\n * For this operation to cover the combination of animation verbs (style, animate, group, etc...) a\n * combination of prototypical inheritance, AST traversal and merge-sort-like algorithms are used.\n *\n * [AST Traversal]\n * Each of the animation verbs, when executed, will return an string-map object representing what\n * type of action it is (style, animate, group, etc...) and the data associated with it. This means\n * that when functional composition mix of these functions is evaluated (like in the example above)\n * then it will end up producing a tree of objects representing the animation itself.\n *\n * When this animation object tree is processed by the visitor code below it will visit each of the\n * verb statements within the visitor. And during each visit it will build the context of the\n * animation keyframes by interacting with the `TimelineBuilder`.\n *\n * [TimelineBuilder]\n * This class is responsible for tracking the styles and building a series of keyframe objects for a\n * timeline between a start and end time. The builder starts off with an initial timeline and each\n * time the AST comes across a `group()`, `keyframes()` or a combination of the two wihtin a\n * `sequence()` then it will generate a sub timeline for each step as well as a new one after\n * they are complete.\n *\n * As the AST is traversed, the timing state on each of the timelines will be incremented. If a sub\n * timeline was created (based on one of the cases above) then the parent timeline will attempt to\n * merge the styles used within the sub timelines into itself (only with group() this will happen).\n * This happens with a merge operation (much like how the merge works in mergesort) and it will only\n * copy the most recently used styles from the sub timelines into the parent timeline. This ensures\n * that if the styles are used later on in another phase of the animation then they will be the most\n * up-to-date values.\n *\n * [How Missing Styles Are Updated]\n * Each timeline has a `backFill` property which is responsible for filling in new styles into\n * already processed keyframes if a new style shows up later within the animation sequence.\n *\n * ```\n * sequence([\n *   style({ width: 0 }),\n *   animate(1000, style({ width: 100 })),\n *   animate(1000, style({ width: 200 })),\n *   animate(1000, style({ width: 300 }))\n *   animate(1000, style({ width: 400, height: 400 })) // notice how `height` doesn't exist anywhere\n * else\n * ])\n * ```\n *\n * What is happening here is that the `height` value is added later in the sequence, but is missing\n * from all previous animation steps. Therefore when a keyframe is created it would also be missing\n * from all previous keyframes up until where it is first used. For the timeline keyframe generation\n * to properly fill in the style it will place the previous value (the value from the parent\n * timeline) or a default value of `*` into the backFill object. Given that each of the keyframe\n * styles are objects that prototypically inhert from the backFill object, this means that if a\n * value is added into the backFill then it will automatically propagate any missing values to all\n * keyframes. Therefore the missing `height` value will be properly filled into the already\n * processed keyframes.\n *\n * When a sub-timeline is created it will have its own backFill property. This is done so that\n * styles present within the sub-timeline do not accidentally seep into the previous/future timeline\n * keyframes\n *\n * (For prototypically-inherited contents to be detected a `for(i in obj)` loop must be used.)\n *\n * [Validation]\n * The code in this file is not responsible for validation. That functionality happens with within\n * the `AnimationValidatorVisitor` code.\n */\n\nfunction buildAnimationTimelines(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles = {}, finalStyles = {}, options, subInstructions, errors = []) {\n  return new AnimationTimelineBuilderVisitor().buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors);\n}\n\nclass AnimationTimelineBuilderVisitor {\n  buildKeyframes(driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles, options, subInstructions, errors = []) {\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const context = new AnimationTimelineContext(driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n    context.options = options;\n    context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n    visitDslNode(this, ast, context); // this checks to see if an actual animation happened\n\n    const timelines = context.timelines.filter(timeline => timeline.containsAnimation());\n\n    if (timelines.length && Object.keys(finalStyles).length) {\n      const tl = timelines[timelines.length - 1];\n\n      if (!tl.allowOnlyTimelineStyles()) {\n        tl.setStyles([finalStyles], null, context.errors, options);\n      }\n    }\n\n    return timelines.length ? timelines.map(timeline => timeline.buildKeyframes()) : [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n  }\n\n  visitTrigger(ast, context) {// these values are not visited in this AST\n  }\n\n  visitState(ast, context) {// these values are not visited in this AST\n  }\n\n  visitTransition(ast, context) {// these values are not visited in this AST\n  }\n\n  visitAnimateChild(ast, context) {\n    const elementInstructions = context.subInstructions.consume(context.element);\n\n    if (elementInstructions) {\n      const innerContext = context.createSubContext(ast.options);\n      const startTime = context.currentTimeline.currentTime;\n\n      const endTime = this._visitSubInstructions(elementInstructions, innerContext, innerContext.options);\n\n      if (startTime != endTime) {\n        // we do this on the upper context because we created a sub context for\n        // the sub child animations\n        context.transformIntoNewTimeline(endTime);\n      }\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitAnimateRef(ast, context) {\n    const innerContext = context.createSubContext(ast.options);\n    innerContext.transformIntoNewTimeline();\n    this.visitReference(ast.animation, innerContext);\n    context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n    context.previousNode = ast;\n  }\n\n  _visitSubInstructions(instructions, context, options) {\n    const startTime = context.currentTimeline.currentTime;\n    let furthestTime = startTime; // this is a special-case for when a user wants to skip a sub\n    // animation from being fired entirely.\n\n    const duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n    const delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n\n    if (duration !== 0) {\n      instructions.forEach(instruction => {\n        const instructionTimings = context.appendInstructionToTimeline(instruction, duration, delay);\n        furthestTime = Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n      });\n    }\n\n    return furthestTime;\n  }\n\n  visitReference(ast, context) {\n    context.updateOptions(ast.options, true);\n    visitDslNode(this, ast.animation, context);\n    context.previousNode = ast;\n  }\n\n  visitSequence(ast, context) {\n    const subContextCount = context.subContextCount;\n    let ctx = context;\n    const options = ast.options;\n\n    if (options && (options.params || options.delay)) {\n      ctx = context.createSubContext(options);\n      ctx.transformIntoNewTimeline();\n\n      if (options.delay != null) {\n        if (ctx.previousNode.type == 6\n        /* Style */\n        ) {\n            ctx.currentTimeline.snapshotCurrentStyles();\n            ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n          }\n\n        const delay = resolveTimingValue(options.delay);\n        ctx.delayNextStep(delay);\n      }\n    }\n\n    if (ast.steps.length) {\n      ast.steps.forEach(s => visitDslNode(this, s, ctx)); // this is here just incase the inner steps only contain or end with a style() call\n\n      ctx.currentTimeline.applyStylesToKeyframe(); // this means that some animation function within the sequence\n      // ended up creating a sub timeline (which means the current\n      // timeline cannot overlap with the contents of the sequence)\n\n      if (ctx.subContextCount > subContextCount) {\n        ctx.transformIntoNewTimeline();\n      }\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitGroup(ast, context) {\n    const innerTimelines = [];\n    let furthestTime = context.currentTimeline.currentTime;\n    const delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n    ast.steps.forEach(s => {\n      const innerContext = context.createSubContext(ast.options);\n\n      if (delay) {\n        innerContext.delayNextStep(delay);\n      }\n\n      visitDslNode(this, s, innerContext);\n      furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n      innerTimelines.push(innerContext.currentTimeline);\n    }); // this operation is run after the AST loop because otherwise\n    // if the parent timeline's collected styles were updated then\n    // it would pass in invalid data into the new-to-be forked items\n\n    innerTimelines.forEach(timeline => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n    context.transformIntoNewTimeline(furthestTime);\n    context.previousNode = ast;\n  }\n\n  _visitTiming(ast, context) {\n    if (ast.dynamic) {\n      const strValue = ast.strValue;\n      const timingValue = context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n      return resolveTiming(timingValue, context.errors);\n    } else {\n      return {\n        duration: ast.duration,\n        delay: ast.delay,\n        easing: ast.easing\n      };\n    }\n  }\n\n  visitAnimate(ast, context) {\n    const timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n\n    const timeline = context.currentTimeline;\n\n    if (timings.delay) {\n      context.incrementTime(timings.delay);\n      timeline.snapshotCurrentStyles();\n    }\n\n    const style = ast.style;\n\n    if (style.type == 5\n    /* Keyframes */\n    ) {\n        this.visitKeyframes(style, context);\n      } else {\n      context.incrementTime(timings.duration);\n      this.visitStyle(style, context);\n      timeline.applyStylesToKeyframe();\n    }\n\n    context.currentAnimateTimings = null;\n    context.previousNode = ast;\n  }\n\n  visitStyle(ast, context) {\n    const timeline = context.currentTimeline;\n    const timings = context.currentAnimateTimings; // this is a special case for when a style() call\n    // directly follows  an animate() call (but not inside of an animate() call)\n\n    if (!timings && timeline.getCurrentStyleProperties().length) {\n      timeline.forwardFrame();\n    }\n\n    const easing = timings && timings.easing || ast.easing;\n\n    if (ast.isEmptyStep) {\n      timeline.applyEmptyStep(easing);\n    } else {\n      timeline.setStyles(ast.styles, easing, context.errors, context.options);\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitKeyframes(ast, context) {\n    const currentAnimateTimings = context.currentAnimateTimings;\n    const startTime = context.currentTimeline.duration;\n    const duration = currentAnimateTimings.duration;\n    const innerContext = context.createSubContext();\n    const innerTimeline = innerContext.currentTimeline;\n    innerTimeline.easing = currentAnimateTimings.easing;\n    ast.styles.forEach(step => {\n      const offset = step.offset || 0;\n      innerTimeline.forwardTime(offset * duration);\n      innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n      innerTimeline.applyStylesToKeyframe();\n    }); // this will ensure that the parent timeline gets all the styles from\n    // the child even if the new timeline below is not used\n\n    context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline); // we do this because the window between this timeline and the sub timeline\n    // should ensure that the styles within are exactly the same as they were before\n\n    context.transformIntoNewTimeline(startTime + duration);\n    context.previousNode = ast;\n  }\n\n  visitQuery(ast, context) {\n    // in the event that the first step before this is a style step we need\n    // to ensure the styles are applied before the children are animated\n    const startTime = context.currentTimeline.currentTime;\n    const options = ast.options || {};\n    const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n\n    if (delay && (context.previousNode.type === 6\n    /* Style */\n    || startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length)) {\n      context.currentTimeline.snapshotCurrentStyles();\n      context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    }\n\n    let furthestTime = startTime;\n    const elms = context.invokeQuery(ast.selector, ast.originalSelector, ast.limit, ast.includeSelf, options.optional ? true : false, context.errors);\n    context.currentQueryTotal = elms.length;\n    let sameElementTimeline = null;\n    elms.forEach((element, i) => {\n      context.currentQueryIndex = i;\n      const innerContext = context.createSubContext(ast.options, element);\n\n      if (delay) {\n        innerContext.delayNextStep(delay);\n      }\n\n      if (element === context.element) {\n        sameElementTimeline = innerContext.currentTimeline;\n      }\n\n      visitDslNode(this, ast.animation, innerContext); // this is here just incase the inner steps only contain or end\n      // with a style() call (which is here to signal that this is a preparatory\n      // call to style an element before it is animated again)\n\n      innerContext.currentTimeline.applyStylesToKeyframe();\n      const endTime = innerContext.currentTimeline.currentTime;\n      furthestTime = Math.max(furthestTime, endTime);\n    });\n    context.currentQueryIndex = 0;\n    context.currentQueryTotal = 0;\n    context.transformIntoNewTimeline(furthestTime);\n\n    if (sameElementTimeline) {\n      context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitStagger(ast, context) {\n    const parentContext = context.parentContext;\n    const tl = context.currentTimeline;\n    const timings = ast.timings;\n    const duration = Math.abs(timings.duration);\n    const maxTime = duration * (context.currentQueryTotal - 1);\n    let delay = duration * context.currentQueryIndex;\n    let staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n\n    switch (staggerTransformer) {\n      case 'reverse':\n        delay = maxTime - delay;\n        break;\n\n      case 'full':\n        delay = parentContext.currentStaggerTime;\n        break;\n    }\n\n    const timeline = context.currentTimeline;\n\n    if (delay) {\n      timeline.delayNextStep(delay);\n    }\n\n    const startingTime = timeline.currentTime;\n    visitDslNode(this, ast.animation, context);\n    context.previousNode = ast; // time = duration + delay\n    // the reason why this computation is so complex is because\n    // the inner timeline may either have a delay value or a stretched\n    // keyframe depending on if a subtimeline is not used or is used.\n\n    parentContext.currentStaggerTime = tl.currentTime - startingTime + (tl.startTime - parentContext.currentTimeline.startTime);\n  }\n\n}\n\nconst DEFAULT_NOOP_PREVIOUS_NODE = {};\n\nclass AnimationTimelineContext {\n  constructor(_driver, element, subInstructions, _enterClassName, _leaveClassName, errors, timelines, initialTimeline) {\n    this._driver = _driver;\n    this.element = element;\n    this.subInstructions = subInstructions;\n    this._enterClassName = _enterClassName;\n    this._leaveClassName = _leaveClassName;\n    this.errors = errors;\n    this.timelines = timelines;\n    this.parentContext = null;\n    this.currentAnimateTimings = null;\n    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    this.subContextCount = 0;\n    this.options = {};\n    this.currentQueryIndex = 0;\n    this.currentQueryTotal = 0;\n    this.currentStaggerTime = 0;\n    this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n    timelines.push(this.currentTimeline);\n  }\n\n  get params() {\n    return this.options.params;\n  }\n\n  updateOptions(options, skipIfExists) {\n    if (!options) return;\n    const newOptions = options;\n    let optionsToUpdate = this.options; // NOTE: this will get patched up when other animation methods support duration overrides\n\n    if (newOptions.duration != null) {\n      optionsToUpdate.duration = resolveTimingValue(newOptions.duration);\n    }\n\n    if (newOptions.delay != null) {\n      optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n    }\n\n    const newParams = newOptions.params;\n\n    if (newParams) {\n      let paramsToUpdate = optionsToUpdate.params;\n\n      if (!paramsToUpdate) {\n        paramsToUpdate = this.options.params = {};\n      }\n\n      Object.keys(newParams).forEach(name => {\n        if (!skipIfExists || !paramsToUpdate.hasOwnProperty(name)) {\n          paramsToUpdate[name] = interpolateParams(newParams[name], paramsToUpdate, this.errors);\n        }\n      });\n    }\n  }\n\n  _copyOptions() {\n    const options = {};\n\n    if (this.options) {\n      const oldParams = this.options.params;\n\n      if (oldParams) {\n        const params = options['params'] = {};\n        Object.keys(oldParams).forEach(name => {\n          params[name] = oldParams[name];\n        });\n      }\n    }\n\n    return options;\n  }\n\n  createSubContext(options = null, element, newTime) {\n    const target = element || this.element;\n    const context = new AnimationTimelineContext(this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName, this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n    context.previousNode = this.previousNode;\n    context.currentAnimateTimings = this.currentAnimateTimings;\n    context.options = this._copyOptions();\n    context.updateOptions(options);\n    context.currentQueryIndex = this.currentQueryIndex;\n    context.currentQueryTotal = this.currentQueryTotal;\n    context.parentContext = this;\n    this.subContextCount++;\n    return context;\n  }\n\n  transformIntoNewTimeline(newTime) {\n    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n    this.timelines.push(this.currentTimeline);\n    return this.currentTimeline;\n  }\n\n  appendInstructionToTimeline(instruction, duration, delay) {\n    const updatedTimings = {\n      duration: duration != null ? duration : instruction.duration,\n      delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n      easing: ''\n    };\n    const builder = new SubTimelineBuilder(this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps, instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n    this.timelines.push(builder);\n    return updatedTimings;\n  }\n\n  incrementTime(time) {\n    this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n  }\n\n  delayNextStep(delay) {\n    // negative delays are not yet supported\n    if (delay > 0) {\n      this.currentTimeline.delayNextStep(delay);\n    }\n  }\n\n  invokeQuery(selector, originalSelector, limit, includeSelf, optional, errors) {\n    let results = [];\n\n    if (includeSelf) {\n      results.push(this.element);\n    }\n\n    if (selector.length > 0) {\n      // if :self is only used then the selector is empty\n      selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n      selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n      const multi = limit != 1;\n\n      let elements = this._driver.query(this.element, selector, multi);\n\n      if (limit !== 0) {\n        elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) : elements.slice(0, limit);\n      }\n\n      results.push(...elements);\n    }\n\n    if (!optional && results.length == 0) {\n      errors.push(`\\`query(\"${originalSelector}\")\\` returned zero elements. (Use \\`query(\"${originalSelector}\", { optional: true })\\` if you wish to allow this.)`);\n    }\n\n    return results;\n  }\n\n}\n\nclass TimelineBuilder {\n  constructor(_driver, element, startTime, _elementTimelineStylesLookup) {\n    this._driver = _driver;\n    this.element = element;\n    this.startTime = startTime;\n    this._elementTimelineStylesLookup = _elementTimelineStylesLookup;\n    this.duration = 0;\n    this._previousKeyframe = {};\n    this._currentKeyframe = {};\n    this._keyframes = new Map();\n    this._styleSummary = {};\n    this._pendingStyles = {};\n    this._backFill = {};\n    this._currentEmptyStepKeyframe = null;\n\n    if (!this._elementTimelineStylesLookup) {\n      this._elementTimelineStylesLookup = new Map();\n    }\n\n    this._localTimelineStyles = Object.create(this._backFill, {});\n    this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element);\n\n    if (!this._globalTimelineStyles) {\n      this._globalTimelineStyles = this._localTimelineStyles;\n\n      this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n    }\n\n    this._loadKeyframe();\n  }\n\n  containsAnimation() {\n    switch (this._keyframes.size) {\n      case 0:\n        return false;\n\n      case 1:\n        return this.getCurrentStyleProperties().length > 0;\n\n      default:\n        return true;\n    }\n  }\n\n  getCurrentStyleProperties() {\n    return Object.keys(this._currentKeyframe);\n  }\n\n  get currentTime() {\n    return this.startTime + this.duration;\n  }\n\n  delayNextStep(delay) {\n    // in the event that a style() step is placed right before a stagger()\n    // and that style() step is the very first style() value in the animation\n    // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n    // properly applies the style() values to work with the stagger...\n    const hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n\n    if (this.duration || hasPreStyleStep) {\n      this.forwardTime(this.currentTime + delay);\n\n      if (hasPreStyleStep) {\n        this.snapshotCurrentStyles();\n      }\n    } else {\n      this.startTime += delay;\n    }\n  }\n\n  fork(element, currentTime) {\n    this.applyStylesToKeyframe();\n    return new TimelineBuilder(this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n  }\n\n  _loadKeyframe() {\n    if (this._currentKeyframe) {\n      this._previousKeyframe = this._currentKeyframe;\n    }\n\n    this._currentKeyframe = this._keyframes.get(this.duration);\n\n    if (!this._currentKeyframe) {\n      this._currentKeyframe = Object.create(this._backFill, {});\n\n      this._keyframes.set(this.duration, this._currentKeyframe);\n    }\n  }\n\n  forwardFrame() {\n    this.duration += ONE_FRAME_IN_MILLISECONDS;\n\n    this._loadKeyframe();\n  }\n\n  forwardTime(time) {\n    this.applyStylesToKeyframe();\n    this.duration = time;\n\n    this._loadKeyframe();\n  }\n\n  _updateStyle(prop, value) {\n    this._localTimelineStyles[prop] = value;\n    this._globalTimelineStyles[prop] = value;\n    this._styleSummary[prop] = {\n      time: this.currentTime,\n      value\n    };\n  }\n\n  allowOnlyTimelineStyles() {\n    return this._currentEmptyStepKeyframe !== this._currentKeyframe;\n  }\n\n  applyEmptyStep(easing) {\n    if (easing) {\n      this._previousKeyframe['easing'] = easing;\n    } // special case for animate(duration):\n    // all missing styles are filled with a `*` value then\n    // if any destination styles are filled in later on the same\n    // keyframe then they will override the overridden styles\n    // We use `_globalTimelineStyles` here because there may be\n    // styles in previous keyframes that are not present in this timeline\n\n\n    Object.keys(this._globalTimelineStyles).forEach(prop => {\n      this._backFill[prop] = this._globalTimelineStyles[prop] || AUTO_STYLE;\n      this._currentKeyframe[prop] = AUTO_STYLE;\n    });\n    this._currentEmptyStepKeyframe = this._currentKeyframe;\n  }\n\n  setStyles(input, easing, errors, options) {\n    if (easing) {\n      this._previousKeyframe['easing'] = easing;\n    }\n\n    const params = options && options.params || {};\n    const styles = flattenStyles(input, this._globalTimelineStyles);\n    Object.keys(styles).forEach(prop => {\n      const val = interpolateParams(styles[prop], params, errors);\n      this._pendingStyles[prop] = val;\n\n      if (!this._localTimelineStyles.hasOwnProperty(prop)) {\n        this._backFill[prop] = this._globalTimelineStyles.hasOwnProperty(prop) ? this._globalTimelineStyles[prop] : AUTO_STYLE;\n      }\n\n      this._updateStyle(prop, val);\n    });\n  }\n\n  applyStylesToKeyframe() {\n    const styles = this._pendingStyles;\n    const props = Object.keys(styles);\n    if (props.length == 0) return;\n    this._pendingStyles = {};\n    props.forEach(prop => {\n      const val = styles[prop];\n      this._currentKeyframe[prop] = val;\n    });\n    Object.keys(this._localTimelineStyles).forEach(prop => {\n      if (!this._currentKeyframe.hasOwnProperty(prop)) {\n        this._currentKeyframe[prop] = this._localTimelineStyles[prop];\n      }\n    });\n  }\n\n  snapshotCurrentStyles() {\n    Object.keys(this._localTimelineStyles).forEach(prop => {\n      const val = this._localTimelineStyles[prop];\n      this._pendingStyles[prop] = val;\n\n      this._updateStyle(prop, val);\n    });\n  }\n\n  getFinalKeyframe() {\n    return this._keyframes.get(this.duration);\n  }\n\n  get properties() {\n    const properties = [];\n\n    for (let prop in this._currentKeyframe) {\n      properties.push(prop);\n    }\n\n    return properties;\n  }\n\n  mergeTimelineCollectedStyles(timeline) {\n    Object.keys(timeline._styleSummary).forEach(prop => {\n      const details0 = this._styleSummary[prop];\n      const details1 = timeline._styleSummary[prop];\n\n      if (!details0 || details1.time > details0.time) {\n        this._updateStyle(prop, details1.value);\n      }\n    });\n  }\n\n  buildKeyframes() {\n    this.applyStylesToKeyframe();\n    const preStyleProps = new Set();\n    const postStyleProps = new Set();\n    const isEmpty = this._keyframes.size === 1 && this.duration === 0;\n    let finalKeyframes = [];\n\n    this._keyframes.forEach((keyframe, time) => {\n      const finalKeyframe = copyStyles(keyframe, true);\n      Object.keys(finalKeyframe).forEach(prop => {\n        const value = finalKeyframe[prop];\n\n        if (value == ɵPRE_STYLE) {\n          preStyleProps.add(prop);\n        } else if (value == AUTO_STYLE) {\n          postStyleProps.add(prop);\n        }\n      });\n\n      if (!isEmpty) {\n        finalKeyframe['offset'] = time / this.duration;\n      }\n\n      finalKeyframes.push(finalKeyframe);\n    });\n\n    const preProps = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n    const postProps = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : []; // special case for a 0-second animation (which is designed just to place styles onscreen)\n\n    if (isEmpty) {\n      const kf0 = finalKeyframes[0];\n      const kf1 = copyObj(kf0);\n      kf0['offset'] = 0;\n      kf1['offset'] = 1;\n      finalKeyframes = [kf0, kf1];\n    }\n\n    return createTimelineInstruction(this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime, this.easing, false);\n  }\n\n}\n\nclass SubTimelineBuilder extends TimelineBuilder {\n  constructor(driver, element, keyframes, preStyleProps, postStyleProps, timings, _stretchStartingKeyframe = false) {\n    super(driver, element, timings.delay);\n    this.element = element;\n    this.keyframes = keyframes;\n    this.preStyleProps = preStyleProps;\n    this.postStyleProps = postStyleProps;\n    this._stretchStartingKeyframe = _stretchStartingKeyframe;\n    this.timings = {\n      duration: timings.duration,\n      delay: timings.delay,\n      easing: timings.easing\n    };\n  }\n\n  containsAnimation() {\n    return this.keyframes.length > 1;\n  }\n\n  buildKeyframes() {\n    let keyframes = this.keyframes;\n    let {\n      delay,\n      duration,\n      easing\n    } = this.timings;\n\n    if (this._stretchStartingKeyframe && delay) {\n      const newKeyframes = [];\n      const totalTime = duration + delay;\n      const startingGap = delay / totalTime; // the original starting keyframe now starts once the delay is done\n\n      const newFirstKeyframe = copyStyles(keyframes[0], false);\n      newFirstKeyframe['offset'] = 0;\n      newKeyframes.push(newFirstKeyframe);\n      const oldFirstKeyframe = copyStyles(keyframes[0], false);\n      oldFirstKeyframe['offset'] = roundOffset(startingGap);\n      newKeyframes.push(oldFirstKeyframe);\n      /*\n        When the keyframe is stretched then it means that the delay before the animation\n        starts is gone. Instead the first keyframe is placed at the start of the animation\n        and it is then copied to where it starts when the original delay is over. This basically\n        means nothing animates during that delay, but the styles are still renderered. For this\n        to work the original offset values that exist in the original keyframes must be \"warped\"\n        so that they can take the new keyframe + delay into account.\n               delay=1000, duration=1000, keyframes = 0 .5 1\n               turns into\n               delay=0, duration=2000, keyframes = 0 .33 .66 1\n       */\n      // offsets between 1 ... n -1 are all warped by the keyframe stretch\n\n      const limit = keyframes.length - 1;\n\n      for (let i = 1; i <= limit; i++) {\n        let kf = copyStyles(keyframes[i], false);\n        const oldOffset = kf['offset'];\n        const timeAtKeyframe = delay + oldOffset * duration;\n        kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n        newKeyframes.push(kf);\n      } // the new starting keyframe should be added at the start\n\n\n      duration = totalTime;\n      delay = 0;\n      easing = '';\n      keyframes = newKeyframes;\n    }\n\n    return createTimelineInstruction(this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing, true);\n  }\n\n}\n\nfunction roundOffset(offset, decimalPoints = 3) {\n  const mult = Math.pow(10, decimalPoints - 1);\n  return Math.round(offset * mult) / mult;\n}\n\nfunction flattenStyles(input, allStyles) {\n  const styles = {};\n  let allProperties;\n  input.forEach(token => {\n    if (token === '*') {\n      allProperties = allProperties || Object.keys(allStyles);\n      allProperties.forEach(prop => {\n        styles[prop] = AUTO_STYLE;\n      });\n    } else {\n      copyStyles(token, false, styles);\n    }\n  });\n  return styles;\n}\n\nclass Animation {\n  constructor(_driver, input) {\n    this._driver = _driver;\n    const errors = [];\n    const ast = buildAnimationAst(_driver, input, errors);\n\n    if (errors.length) {\n      const errorMessage = `animation validation failed:\\n${errors.join('\\n')}`;\n      throw new Error(errorMessage);\n    }\n\n    this._animationAst = ast;\n  }\n\n  buildTimelines(element, startingStyles, destinationStyles, options, subInstructions) {\n    const start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) : startingStyles;\n    const dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) : destinationStyles;\n    const errors = [];\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const result = buildAnimationTimelines(this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest, options, subInstructions, errors);\n\n    if (errors.length) {\n      const errorMessage = `animation building failed:\\n${errors.join('\\n')}`;\n      throw new Error(errorMessage);\n    }\n\n    return result;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nclass AnimationStyleNormalizer {}\n/**\n * @publicApi\n */\n\n\nclass NoopAnimationStyleNormalizer {\n  normalizePropertyName(propertyName, errors) {\n    return propertyName;\n  }\n\n  normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n    return value;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n  normalizePropertyName(propertyName, errors) {\n    return dashCaseToCamelCase(propertyName);\n  }\n\n  normalizeStyleValue(userProvidedProperty, normalizedProperty, value, errors) {\n    let unit = '';\n    const strVal = value.toString().trim();\n\n    if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n      if (typeof value === 'number') {\n        unit = 'px';\n      } else {\n        const valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errors.push(`Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n        }\n      }\n    }\n\n    return strVal + unit;\n  }\n\n}\n\nconst ɵ0$1 = () => makeBooleanMap('width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(','));\n\nconst DIMENSIONAL_PROP_MAP = ɵ0$1();\n\nfunction makeBooleanMap(keys) {\n  const map = {};\n  keys.forEach(key => map[key] = true);\n  return map;\n}\n\nfunction createTransitionInstruction(element, triggerName, fromState, toState, isRemovalTransition, fromStyles, toStyles, timelines, queriedElements, preStyleProps, postStyleProps, totalTime, errors) {\n  return {\n    type: 0\n    /* TransitionAnimation */\n    ,\n    element,\n    triggerName,\n    isRemovalTransition,\n    fromState,\n    fromStyles,\n    toState,\n    toStyles,\n    timelines,\n    queriedElements,\n    preStyleProps,\n    postStyleProps,\n    totalTime,\n    errors\n  };\n}\n\nconst EMPTY_OBJECT = {};\n\nclass AnimationTransitionFactory {\n  constructor(_triggerName, ast, _stateStyles) {\n    this._triggerName = _triggerName;\n    this.ast = ast;\n    this._stateStyles = _stateStyles;\n  }\n\n  match(currentState, nextState, element, params) {\n    return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);\n  }\n\n  buildStyles(stateName, params, errors) {\n    const backupStateStyler = this._stateStyles['*'];\n    const stateStyler = this._stateStyles[stateName];\n    const backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n    return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n  }\n\n  build(driver, element, currentState, nextState, enterClassName, leaveClassName, currentOptions, nextOptions, subInstructions, skipAstBuild) {\n    const errors = [];\n    const transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n    const currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n    const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n    const nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n    const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n    const queriedElements = new Set();\n    const preStyleMap = new Map();\n    const postStyleMap = new Map();\n    const isRemoval = nextState === 'void';\n    const animationOptions = {\n      params: Object.assign(Object.assign({}, transitionAnimationParams), nextAnimationParams)\n    };\n    const timelines = skipAstBuild ? [] : buildAnimationTimelines(driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles, nextStateStyles, animationOptions, subInstructions, errors);\n    let totalTime = 0;\n    timelines.forEach(tl => {\n      totalTime = Math.max(tl.duration + tl.delay, totalTime);\n    });\n\n    if (errors.length) {\n      return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n    }\n\n    timelines.forEach(tl => {\n      const elm = tl.element;\n      const preProps = getOrSetAsInMap(preStyleMap, elm, {});\n      tl.preStyleProps.forEach(prop => preProps[prop] = true);\n      const postProps = getOrSetAsInMap(postStyleMap, elm, {});\n      tl.postStyleProps.forEach(prop => postProps[prop] = true);\n\n      if (elm !== element) {\n        queriedElements.add(elm);\n      }\n    });\n    const queriedElementsList = iteratorToArray(queriedElements.values());\n    return createTransitionInstruction(element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles, nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap, totalTime);\n  }\n\n}\n\nfunction oneOrMoreTransitionsMatch(matchFns, currentState, nextState, element, params) {\n  return matchFns.some(fn => fn(currentState, nextState, element, params));\n}\n\nclass AnimationStateStyles {\n  constructor(styles, defaultParams) {\n    this.styles = styles;\n    this.defaultParams = defaultParams;\n  }\n\n  buildStyles(params, errors) {\n    const finalStyles = {};\n    const combinedParams = copyObj(this.defaultParams);\n    Object.keys(params).forEach(key => {\n      const value = params[key];\n\n      if (value != null) {\n        combinedParams[key] = value;\n      }\n    });\n    this.styles.styles.forEach(value => {\n      if (typeof value !== 'string') {\n        const styleObj = value;\n        Object.keys(styleObj).forEach(prop => {\n          let val = styleObj[prop];\n\n          if (val.length > 1) {\n            val = interpolateParams(val, combinedParams, errors);\n          }\n\n          finalStyles[prop] = val;\n        });\n      }\n    });\n    return finalStyles;\n  }\n\n}\n/**\n * @publicApi\n */\n\n\nfunction buildTrigger(name, ast) {\n  return new AnimationTrigger(name, ast);\n}\n/**\n * @publicApi\n */\n\n\nclass AnimationTrigger {\n  constructor(name, ast) {\n    this.name = name;\n    this.ast = ast;\n    this.transitionFactories = [];\n    this.states = {};\n    ast.states.forEach(ast => {\n      const defaultParams = ast.options && ast.options.params || {};\n      this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams);\n    });\n    balanceProperties(this.states, 'true', '1');\n    balanceProperties(this.states, 'false', '0');\n    ast.transitions.forEach(ast => {\n      this.transitionFactories.push(new AnimationTransitionFactory(name, ast, this.states));\n    });\n    this.fallbackTransition = createFallbackTransition(name, this.states);\n  }\n\n  get containsQueries() {\n    return this.ast.queryCount > 0;\n  }\n\n  matchTransition(currentState, nextState, element, params) {\n    const entry = this.transitionFactories.find(f => f.match(currentState, nextState, element, params));\n    return entry || null;\n  }\n\n  matchStyles(currentState, params, errors) {\n    return this.fallbackTransition.buildStyles(currentState, params, errors);\n  }\n\n}\n\nfunction createFallbackTransition(triggerName, states) {\n  const matchers = [(fromState, toState) => true];\n  const animation = {\n    type: 2\n    /* Sequence */\n    ,\n    steps: [],\n    options: null\n  };\n  const transition = {\n    type: 1\n    /* Transition */\n    ,\n    animation,\n    matchers,\n    options: null,\n    queryCount: 0,\n    depCount: 0\n  };\n  return new AnimationTransitionFactory(triggerName, transition, states);\n}\n\nfunction balanceProperties(obj, key1, key2) {\n  if (obj.hasOwnProperty(key1)) {\n    if (!obj.hasOwnProperty(key2)) {\n      obj[key2] = obj[key1];\n    }\n  } else if (obj.hasOwnProperty(key2)) {\n    obj[key1] = obj[key2];\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\n\nclass TimelineAnimationEngine {\n  constructor(bodyNode, _driver, _normalizer) {\n    this.bodyNode = bodyNode;\n    this._driver = _driver;\n    this._normalizer = _normalizer;\n    this._animations = {};\n    this._playersById = {};\n    this.players = [];\n  }\n\n  register(id, metadata) {\n    const errors = [];\n    const ast = buildAnimationAst(this._driver, metadata, errors);\n\n    if (errors.length) {\n      throw new Error(`Unable to build the animation due to the following errors: ${errors.join('\\n')}`);\n    } else {\n      this._animations[id] = ast;\n    }\n  }\n\n  _buildPlayer(i, preStyles, postStyles) {\n    const element = i.element;\n    const keyframes = normalizeKeyframes(this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n  }\n\n  create(id, element, options = {}) {\n    const errors = [];\n    const ast = this._animations[id];\n    let instructions;\n    const autoStylesMap = new Map();\n\n    if (ast) {\n      instructions = buildAnimationTimelines(this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options, EMPTY_INSTRUCTION_MAP, errors);\n      instructions.forEach(inst => {\n        const styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n        inst.postStyleProps.forEach(prop => styles[prop] = null);\n      });\n    } else {\n      errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n      instructions = [];\n    }\n\n    if (errors.length) {\n      throw new Error(`Unable to create the animation due to the following errors: ${errors.join('\\n')}`);\n    }\n\n    autoStylesMap.forEach((styles, element) => {\n      Object.keys(styles).forEach(prop => {\n        styles[prop] = this._driver.computeStyle(element, prop, AUTO_STYLE);\n      });\n    });\n    const players = instructions.map(i => {\n      const styles = autoStylesMap.get(i.element);\n      return this._buildPlayer(i, {}, styles);\n    });\n    const player = optimizeGroupPlayer(players);\n    this._playersById[id] = player;\n    player.onDestroy(() => this.destroy(id));\n    this.players.push(player);\n    return player;\n  }\n\n  destroy(id) {\n    const player = this._getPlayer(id);\n\n    player.destroy();\n    delete this._playersById[id];\n    const index = this.players.indexOf(player);\n\n    if (index >= 0) {\n      this.players.splice(index, 1);\n    }\n  }\n\n  _getPlayer(id) {\n    const player = this._playersById[id];\n\n    if (!player) {\n      throw new Error(`Unable to find the timeline player referenced by ${id}`);\n    }\n\n    return player;\n  }\n\n  listen(id, element, eventName, callback) {\n    // triggerName, fromState, toState are all ignored for timeline animations\n    const baseEvent = makeAnimationEvent(element, '', '', '');\n    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n    return () => {};\n  }\n\n  command(id, element, command, args) {\n    if (command == 'register') {\n      this.register(id, args[0]);\n      return;\n    }\n\n    if (command == 'create') {\n      const options = args[0] || {};\n      this.create(id, element, options);\n      return;\n    }\n\n    const player = this._getPlayer(id);\n\n    switch (command) {\n      case 'play':\n        player.play();\n        break;\n\n      case 'pause':\n        player.pause();\n        break;\n\n      case 'reset':\n        player.reset();\n        break;\n\n      case 'restart':\n        player.restart();\n        break;\n\n      case 'finish':\n        player.finish();\n        break;\n\n      case 'init':\n        player.init();\n        break;\n\n      case 'setPosition':\n        player.setPosition(parseFloat(args[0]));\n        break;\n\n      case 'destroy':\n        this.destroy(id);\n        break;\n    }\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst QUEUED_CLASSNAME = 'ng-animate-queued';\nconst QUEUED_SELECTOR = '.ng-animate-queued';\nconst DISABLED_CLASSNAME = 'ng-animate-disabled';\nconst DISABLED_SELECTOR = '.ng-animate-disabled';\nconst STAR_CLASSNAME = 'ng-star-inserted';\nconst STAR_SELECTOR = '.ng-star-inserted';\nconst EMPTY_PLAYER_ARRAY = [];\nconst NULL_REMOVAL_STATE = {\n  namespaceId: '',\n  setForRemoval: false,\n  setForMove: false,\n  hasAnimation: false,\n  removedBeforeQueried: false\n};\nconst NULL_REMOVED_QUERIED_STATE = {\n  namespaceId: '',\n  setForMove: false,\n  setForRemoval: false,\n  hasAnimation: false,\n  removedBeforeQueried: true\n};\nconst REMOVAL_FLAG = '__ng_removed';\n\nclass StateValue {\n  constructor(input, namespaceId = '') {\n    this.namespaceId = namespaceId;\n    const isObj = input && input.hasOwnProperty('value');\n    const value = isObj ? input['value'] : input;\n    this.value = normalizeTriggerValue(value);\n\n    if (isObj) {\n      const options = copyObj(input);\n      delete options['value'];\n      this.options = options;\n    } else {\n      this.options = {};\n    }\n\n    if (!this.options.params) {\n      this.options.params = {};\n    }\n  }\n\n  get params() {\n    return this.options.params;\n  }\n\n  absorbOptions(options) {\n    const newParams = options.params;\n\n    if (newParams) {\n      const oldParams = this.options.params;\n      Object.keys(newParams).forEach(prop => {\n        if (oldParams[prop] == null) {\n          oldParams[prop] = newParams[prop];\n        }\n      });\n    }\n  }\n\n}\n\nconst VOID_VALUE = 'void';\nconst DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\n\nclass AnimationTransitionNamespace {\n  constructor(id, hostElement, _engine) {\n    this.id = id;\n    this.hostElement = hostElement;\n    this._engine = _engine;\n    this.players = [];\n    this._triggers = {};\n    this._queue = [];\n    this._elementListeners = new Map();\n    this._hostClassName = 'ng-tns-' + id;\n    addClass(hostElement, this._hostClassName);\n  }\n\n  listen(element, name, phase, callback) {\n    if (!this._triggers.hasOwnProperty(name)) {\n      throw new Error(`Unable to listen on the animation trigger event \"${phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n    }\n\n    if (phase == null || phase.length == 0) {\n      throw new Error(`Unable to listen on the animation trigger \"${name}\" because the provided event is undefined!`);\n    }\n\n    if (!isTriggerEventValid(phase)) {\n      throw new Error(`The provided animation trigger event \"${phase}\" for the animation trigger \"${name}\" is not supported!`);\n    }\n\n    const listeners = getOrSetAsInMap(this._elementListeners, element, []);\n    const data = {\n      name,\n      phase,\n      callback\n    };\n    listeners.push(data);\n    const triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n\n    if (!triggersWithStates.hasOwnProperty(name)) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n      triggersWithStates[name] = DEFAULT_STATE_VALUE;\n    }\n\n    return () => {\n      // the event listener is removed AFTER the flush has occurred such\n      // that leave animations callbacks can fire (otherwise if the node\n      // is removed in between then the listeners would be deregistered)\n      this._engine.afterFlush(() => {\n        const index = listeners.indexOf(data);\n\n        if (index >= 0) {\n          listeners.splice(index, 1);\n        }\n\n        if (!this._triggers[name]) {\n          delete triggersWithStates[name];\n        }\n      });\n    };\n  }\n\n  register(name, ast) {\n    if (this._triggers[name]) {\n      // throw\n      return false;\n    } else {\n      this._triggers[name] = ast;\n      return true;\n    }\n  }\n\n  _getTrigger(name) {\n    const trigger = this._triggers[name];\n\n    if (!trigger) {\n      throw new Error(`The provided animation trigger \"${name}\" has not been registered!`);\n    }\n\n    return trigger;\n  }\n\n  trigger(element, triggerName, value, defaultToFallback = true) {\n    const trigger = this._getTrigger(triggerName);\n\n    const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n\n    let triggersWithStates = this._engine.statesByElement.get(element);\n\n    if (!triggersWithStates) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n\n      this._engine.statesByElement.set(element, triggersWithStates = {});\n    }\n\n    let fromState = triggersWithStates[triggerName];\n    const toState = new StateValue(value, this.id);\n    const isObj = value && value.hasOwnProperty('value');\n\n    if (!isObj && fromState) {\n      toState.absorbOptions(fromState.options);\n    }\n\n    triggersWithStates[triggerName] = toState;\n\n    if (!fromState) {\n      fromState = DEFAULT_STATE_VALUE;\n    }\n\n    const isRemoval = toState.value === VOID_VALUE; // normally this isn't reached by here, however, if an object expression\n    // is passed in then it may be a new object each time. Comparing the value\n    // is important since that will stay the same despite there being a new object.\n    // The removal arc here is special cased because the same element is triggered\n    // twice in the event that it contains animations on the outer/inner portions\n    // of the host container\n\n    if (!isRemoval && fromState.value === toState.value) {\n      // this means that despite the value not changing, some inner params\n      // have changed which means that the animation final styles need to be applied\n      if (!objEquals(fromState.params, toState.params)) {\n        const errors = [];\n        const fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);\n        const toStyles = trigger.matchStyles(toState.value, toState.params, errors);\n\n        if (errors.length) {\n          this._engine.reportError(errors);\n        } else {\n          this._engine.afterFlush(() => {\n            eraseStyles(element, fromStyles);\n            setStyles(element, toStyles);\n          });\n        }\n      }\n\n      return;\n    }\n\n    const playersOnElement = getOrSetAsInMap(this._engine.playersByElement, element, []);\n    playersOnElement.forEach(player => {\n      // only remove the player if it is queued on the EXACT same trigger/namespace\n      // we only also deal with queued players here because if the animation has\n      // started then we want to keep the player alive until the flush happens\n      // (which is where the previousPlayers are passed into the new palyer)\n      if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n        player.destroy();\n      }\n    });\n    let transition = trigger.matchTransition(fromState.value, toState.value, element, toState.params);\n    let isFallbackTransition = false;\n\n    if (!transition) {\n      if (!defaultToFallback) return;\n      transition = trigger.fallbackTransition;\n      isFallbackTransition = true;\n    }\n\n    this._engine.totalQueuedPlayers++;\n\n    this._queue.push({\n      element,\n      triggerName,\n      transition,\n      fromState,\n      toState,\n      player,\n      isFallbackTransition\n    });\n\n    if (!isFallbackTransition) {\n      addClass(element, QUEUED_CLASSNAME);\n      player.onStart(() => {\n        removeClass(element, QUEUED_CLASSNAME);\n      });\n    }\n\n    player.onDone(() => {\n      let index = this.players.indexOf(player);\n\n      if (index >= 0) {\n        this.players.splice(index, 1);\n      }\n\n      const players = this._engine.playersByElement.get(element);\n\n      if (players) {\n        let index = players.indexOf(player);\n\n        if (index >= 0) {\n          players.splice(index, 1);\n        }\n      }\n    });\n    this.players.push(player);\n    playersOnElement.push(player);\n    return player;\n  }\n\n  deregister(name) {\n    delete this._triggers[name];\n\n    this._engine.statesByElement.forEach((stateMap, element) => {\n      delete stateMap[name];\n    });\n\n    this._elementListeners.forEach((listeners, element) => {\n      this._elementListeners.set(element, listeners.filter(entry => {\n        return entry.name != name;\n      }));\n    });\n  }\n\n  clearElementCache(element) {\n    this._engine.statesByElement.delete(element);\n\n    this._elementListeners.delete(element);\n\n    const elementPlayers = this._engine.playersByElement.get(element);\n\n    if (elementPlayers) {\n      elementPlayers.forEach(player => player.destroy());\n\n      this._engine.playersByElement.delete(element);\n    }\n  }\n\n  _signalRemovalForInnerTriggers(rootElement, context) {\n    const elements = this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true); // emulate a leave animation for all inner nodes within this node.\n    // If there are no animations found for any of the nodes then clear the cache\n    // for the element.\n\n\n    elements.forEach(elm => {\n      // this means that an inner remove() operation has already kicked off\n      // the animation on this element...\n      if (elm[REMOVAL_FLAG]) return;\n\n      const namespaces = this._engine.fetchNamespacesByElement(elm);\n\n      if (namespaces.size) {\n        namespaces.forEach(ns => ns.triggerLeaveAnimation(elm, context, false, true));\n      } else {\n        this.clearElementCache(elm);\n      }\n    }); // If the child elements were removed along with the parent, their animations might not\n    // have completed. Clear all the elements from the cache so we don't end up with a memory leak.\n\n    this._engine.afterFlushAnimationsDone(() => elements.forEach(elm => this.clearElementCache(elm)));\n  }\n\n  triggerLeaveAnimation(element, context, destroyAfterComplete, defaultToFallback) {\n    const triggerStates = this._engine.statesByElement.get(element);\n\n    if (triggerStates) {\n      const players = [];\n      Object.keys(triggerStates).forEach(triggerName => {\n        // this check is here in the event that an element is removed\n        // twice (both on the host level and the component level)\n        if (this._triggers[triggerName]) {\n          const player = this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n\n          if (player) {\n            players.push(player);\n          }\n        }\n      });\n\n      if (players.length) {\n        this._engine.markElementAsRemoved(this.id, element, true, context);\n\n        if (destroyAfterComplete) {\n          optimizeGroupPlayer(players).onDone(() => this._engine.processLeaveNode(element));\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  prepareLeaveAnimationListeners(element) {\n    const listeners = this._elementListeners.get(element);\n\n    if (listeners) {\n      const visitedTriggers = new Set();\n      listeners.forEach(listener => {\n        const triggerName = listener.name;\n        if (visitedTriggers.has(triggerName)) return;\n        visitedTriggers.add(triggerName);\n        const trigger = this._triggers[triggerName];\n        const transition = trigger.fallbackTransition;\n\n        const elementStates = this._engine.statesByElement.get(element);\n\n        const fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n        const toState = new StateValue(VOID_VALUE);\n        const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n        this._engine.totalQueuedPlayers++;\n\n        this._queue.push({\n          element,\n          triggerName,\n          transition,\n          fromState,\n          toState,\n          player,\n          isFallbackTransition: true\n        });\n      });\n    }\n  }\n\n  removeNode(element, context) {\n    const engine = this._engine;\n\n    if (element.childElementCount) {\n      this._signalRemovalForInnerTriggers(element, context);\n    } // this means that a * => VOID animation was detected and kicked off\n\n\n    if (this.triggerLeaveAnimation(element, context, true)) return; // find the player that is animating and make sure that the\n    // removal is delayed until that player has completed\n\n    let containsPotentialParentTransition = false;\n\n    if (engine.totalAnimations) {\n      const currentPlayers = engine.players.length ? engine.playersByQueriedElement.get(element) : []; // when this `if statement` does not continue forward it means that\n      // a previous animation query has selected the current element and\n      // is animating it. In this situation want to continue forwards and\n      // allow the element to be queued up for animation later.\n\n      if (currentPlayers && currentPlayers.length) {\n        containsPotentialParentTransition = true;\n      } else {\n        let parent = element;\n\n        while (parent = parent.parentNode) {\n          const triggers = engine.statesByElement.get(parent);\n\n          if (triggers) {\n            containsPotentialParentTransition = true;\n            break;\n          }\n        }\n      }\n    } // at this stage we know that the element will either get removed\n    // during flush or will be picked up by a parent query. Either way\n    // we need to fire the listeners for this element when it DOES get\n    // removed (once the query parent animation is done or after flush)\n\n\n    this.prepareLeaveAnimationListeners(element); // whether or not a parent has an animation we need to delay the deferral of the leave\n    // operation until we have more information (which we do after flush() has been called)\n\n    if (containsPotentialParentTransition) {\n      engine.markElementAsRemoved(this.id, element, false, context);\n    } else {\n      const removalFlag = element[REMOVAL_FLAG];\n\n      if (!removalFlag || removalFlag === NULL_REMOVAL_STATE) {\n        // we do this after the flush has occurred such\n        // that the callbacks can be fired\n        engine.afterFlush(() => this.clearElementCache(element));\n        engine.destroyInnerAnimations(element);\n\n        engine._onRemovalComplete(element, context);\n      }\n    }\n  }\n\n  insertNode(element, parent) {\n    addClass(element, this._hostClassName);\n  }\n\n  drainQueuedTransitions(microtaskId) {\n    const instructions = [];\n\n    this._queue.forEach(entry => {\n      const player = entry.player;\n      if (player.destroyed) return;\n      const element = entry.element;\n\n      const listeners = this._elementListeners.get(element);\n\n      if (listeners) {\n        listeners.forEach(listener => {\n          if (listener.name == entry.triggerName) {\n            const baseEvent = makeAnimationEvent(element, entry.triggerName, entry.fromState.value, entry.toState.value);\n            baseEvent['_data'] = microtaskId;\n            listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n          }\n        });\n      }\n\n      if (player.markedForDestroy) {\n        this._engine.afterFlush(() => {\n          // now we can destroy the element properly since the event listeners have\n          // been bound to the player\n          player.destroy();\n        });\n      } else {\n        instructions.push(entry);\n      }\n    });\n\n    this._queue = [];\n    return instructions.sort((a, b) => {\n      // if depCount == 0 them move to front\n      // otherwise if a contains b then move back\n      const d0 = a.transition.ast.depCount;\n      const d1 = b.transition.ast.depCount;\n\n      if (d0 == 0 || d1 == 0) {\n        return d0 - d1;\n      }\n\n      return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n    });\n  }\n\n  destroy(context) {\n    this.players.forEach(p => p.destroy());\n\n    this._signalRemovalForInnerTriggers(this.hostElement, context);\n  }\n\n  elementContainsData(element) {\n    let containsData = false;\n    if (this._elementListeners.has(element)) containsData = true;\n    containsData = (this._queue.find(entry => entry.element === element) ? true : false) || containsData;\n    return containsData;\n  }\n\n}\n\nclass TransitionAnimationEngine {\n  constructor(bodyNode, driver, _normalizer) {\n    this.bodyNode = bodyNode;\n    this.driver = driver;\n    this._normalizer = _normalizer;\n    this.players = [];\n    this.newHostElements = new Map();\n    this.playersByElement = new Map();\n    this.playersByQueriedElement = new Map();\n    this.statesByElement = new Map();\n    this.disabledNodes = new Set();\n    this.totalAnimations = 0;\n    this.totalQueuedPlayers = 0;\n    this._namespaceLookup = {};\n    this._namespaceList = [];\n    this._flushFns = [];\n    this._whenQuietFns = [];\n    this.namespacesByHostElement = new Map();\n    this.collectedEnterElements = [];\n    this.collectedLeaveElements = []; // this method is designed to be overridden by the code that uses this engine\n\n    this.onRemovalComplete = (element, context) => {};\n  }\n  /** @internal */\n\n\n  _onRemovalComplete(element, context) {\n    this.onRemovalComplete(element, context);\n  }\n\n  get queuedPlayers() {\n    const players = [];\n\n    this._namespaceList.forEach(ns => {\n      ns.players.forEach(player => {\n        if (player.queued) {\n          players.push(player);\n        }\n      });\n    });\n\n    return players;\n  }\n\n  createNamespace(namespaceId, hostElement) {\n    const ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n\n    if (hostElement.parentNode) {\n      this._balanceNamespaceList(ns, hostElement);\n    } else {\n      // defer this later until flush during when the host element has\n      // been inserted so that we know exactly where to place it in\n      // the namespace list\n      this.newHostElements.set(hostElement, ns); // given that this host element is apart of the animation code, it\n      // may or may not be inserted by a parent node that is an of an\n      // animation renderer type. If this happens then we can still have\n      // access to this item when we query for :enter nodes. If the parent\n      // is a renderer then the set data-structure will normalize the entry\n\n      this.collectEnterElement(hostElement);\n    }\n\n    return this._namespaceLookup[namespaceId] = ns;\n  }\n\n  _balanceNamespaceList(ns, hostElement) {\n    const limit = this._namespaceList.length - 1;\n\n    if (limit >= 0) {\n      let found = false;\n\n      for (let i = limit; i >= 0; i--) {\n        const nextNamespace = this._namespaceList[i];\n\n        if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n          this._namespaceList.splice(i + 1, 0, ns);\n\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        this._namespaceList.splice(0, 0, ns);\n      }\n    } else {\n      this._namespaceList.push(ns);\n    }\n\n    this.namespacesByHostElement.set(hostElement, ns);\n    return ns;\n  }\n\n  register(namespaceId, hostElement) {\n    let ns = this._namespaceLookup[namespaceId];\n\n    if (!ns) {\n      ns = this.createNamespace(namespaceId, hostElement);\n    }\n\n    return ns;\n  }\n\n  registerTrigger(namespaceId, name, trigger) {\n    let ns = this._namespaceLookup[namespaceId];\n\n    if (ns && ns.register(name, trigger)) {\n      this.totalAnimations++;\n    }\n  }\n\n  destroy(namespaceId, context) {\n    if (!namespaceId) return;\n\n    const ns = this._fetchNamespace(namespaceId);\n\n    this.afterFlush(() => {\n      this.namespacesByHostElement.delete(ns.hostElement);\n      delete this._namespaceLookup[namespaceId];\n\n      const index = this._namespaceList.indexOf(ns);\n\n      if (index >= 0) {\n        this._namespaceList.splice(index, 1);\n      }\n    });\n    this.afterFlushAnimationsDone(() => ns.destroy(context));\n  }\n\n  _fetchNamespace(id) {\n    return this._namespaceLookup[id];\n  }\n\n  fetchNamespacesByElement(element) {\n    // normally there should only be one namespace per element, however\n    // if @triggers are placed on both the component element and then\n    // its host element (within the component code) then there will be\n    // two namespaces returned. We use a set here to simply the dedupe\n    // of namespaces incase there are multiple triggers both the elm and host\n    const namespaces = new Set();\n    const elementStates = this.statesByElement.get(element);\n\n    if (elementStates) {\n      const keys = Object.keys(elementStates);\n\n      for (let i = 0; i < keys.length; i++) {\n        const nsId = elementStates[keys[i]].namespaceId;\n\n        if (nsId) {\n          const ns = this._fetchNamespace(nsId);\n\n          if (ns) {\n            namespaces.add(ns);\n          }\n        }\n      }\n    }\n\n    return namespaces;\n  }\n\n  trigger(namespaceId, element, name, value) {\n    if (isElementNode(element)) {\n      const ns = this._fetchNamespace(namespaceId);\n\n      if (ns) {\n        ns.trigger(element, name, value);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  insertNode(namespaceId, element, parent, insertBefore) {\n    if (!isElementNode(element)) return; // special case for when an element is removed and reinserted (move operation)\n    // when this occurs we do not want to use the element for deletion later\n\n    const details = element[REMOVAL_FLAG];\n\n    if (details && details.setForRemoval) {\n      details.setForRemoval = false;\n      details.setForMove = true;\n      const index = this.collectedLeaveElements.indexOf(element);\n\n      if (index >= 0) {\n        this.collectedLeaveElements.splice(index, 1);\n      }\n    } // in the event that the namespaceId is blank then the caller\n    // code does not contain any animation code in it, but it is\n    // just being called so that the node is marked as being inserted\n\n\n    if (namespaceId) {\n      const ns = this._fetchNamespace(namespaceId); // This if-statement is a workaround for router issue #21947.\n      // The router sometimes hits a race condition where while a route\n      // is being instantiated a new navigation arrives, triggering leave\n      // animation of DOM that has not been fully initialized, until this\n      // is resolved, we need to handle the scenario when DOM is not in a\n      // consistent state during the animation.\n\n\n      if (ns) {\n        ns.insertNode(element, parent);\n      }\n    } // only *directives and host elements are inserted before\n\n\n    if (insertBefore) {\n      this.collectEnterElement(element);\n    }\n  }\n\n  collectEnterElement(element) {\n    this.collectedEnterElements.push(element);\n  }\n\n  markElementAsDisabled(element, value) {\n    if (value) {\n      if (!this.disabledNodes.has(element)) {\n        this.disabledNodes.add(element);\n        addClass(element, DISABLED_CLASSNAME);\n      }\n    } else if (this.disabledNodes.has(element)) {\n      this.disabledNodes.delete(element);\n      removeClass(element, DISABLED_CLASSNAME);\n    }\n  }\n\n  removeNode(namespaceId, element, isHostElement, context) {\n    if (isElementNode(element)) {\n      const ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n\n      if (ns) {\n        ns.removeNode(element, context);\n      } else {\n        this.markElementAsRemoved(namespaceId, element, false, context);\n      }\n\n      if (isHostElement) {\n        const hostNS = this.namespacesByHostElement.get(element);\n\n        if (hostNS && hostNS.id !== namespaceId) {\n          hostNS.removeNode(element, context);\n        }\n      }\n    } else {\n      this._onRemovalComplete(element, context);\n    }\n  }\n\n  markElementAsRemoved(namespaceId, element, hasAnimation, context) {\n    this.collectedLeaveElements.push(element);\n    element[REMOVAL_FLAG] = {\n      namespaceId,\n      setForRemoval: context,\n      hasAnimation,\n      removedBeforeQueried: false\n    };\n  }\n\n  listen(namespaceId, element, name, phase, callback) {\n    if (isElementNode(element)) {\n      return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n    }\n\n    return () => {};\n  }\n\n  _buildInstruction(entry, subTimelines, enterClassName, leaveClassName, skipBuildAst) {\n    return entry.transition.build(this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName, leaveClassName, entry.fromState.options, entry.toState.options, subTimelines, skipBuildAst);\n  }\n\n  destroyInnerAnimations(containerElement) {\n    let elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n    elements.forEach(element => this.destroyActiveAnimationsForElement(element));\n    if (this.playersByQueriedElement.size == 0) return;\n    elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n    elements.forEach(element => this.finishActiveQueriedAnimationOnElement(element));\n  }\n\n  destroyActiveAnimationsForElement(element) {\n    const players = this.playersByElement.get(element);\n\n    if (players) {\n      players.forEach(player => {\n        // special case for when an element is set for destruction, but hasn't started.\n        // in this situation we want to delay the destruction until the flush occurs\n        // so that any event listeners attached to the player are triggered.\n        if (player.queued) {\n          player.markedForDestroy = true;\n        } else {\n          player.destroy();\n        }\n      });\n    }\n  }\n\n  finishActiveQueriedAnimationOnElement(element) {\n    const players = this.playersByQueriedElement.get(element);\n\n    if (players) {\n      players.forEach(player => player.finish());\n    }\n  }\n\n  whenRenderingDone() {\n    return new Promise(resolve => {\n      if (this.players.length) {\n        return optimizeGroupPlayer(this.players).onDone(() => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  processLeaveNode(element) {\n    const details = element[REMOVAL_FLAG];\n\n    if (details && details.setForRemoval) {\n      // this will prevent it from removing it twice\n      element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n\n      if (details.namespaceId) {\n        this.destroyInnerAnimations(element);\n\n        const ns = this._fetchNamespace(details.namespaceId);\n\n        if (ns) {\n          ns.clearElementCache(element);\n        }\n      }\n\n      this._onRemovalComplete(element, details.setForRemoval);\n    }\n\n    if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n      this.markElementAsDisabled(element, false);\n    }\n\n    this.driver.query(element, DISABLED_SELECTOR, true).forEach(node => {\n      this.markElementAsDisabled(node, false);\n    });\n  }\n\n  flush(microtaskId = -1) {\n    let players = [];\n\n    if (this.newHostElements.size) {\n      this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n      this.newHostElements.clear();\n    }\n\n    if (this.totalAnimations && this.collectedEnterElements.length) {\n      for (let i = 0; i < this.collectedEnterElements.length; i++) {\n        const elm = this.collectedEnterElements[i];\n        addClass(elm, STAR_CLASSNAME);\n      }\n    }\n\n    if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n      const cleanupFns = [];\n\n      try {\n        players = this._flushAnimations(cleanupFns, microtaskId);\n      } finally {\n        for (let i = 0; i < cleanupFns.length; i++) {\n          cleanupFns[i]();\n        }\n      }\n    } else {\n      for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n        const element = this.collectedLeaveElements[i];\n        this.processLeaveNode(element);\n      }\n    }\n\n    this.totalQueuedPlayers = 0;\n    this.collectedEnterElements.length = 0;\n    this.collectedLeaveElements.length = 0;\n\n    this._flushFns.forEach(fn => fn());\n\n    this._flushFns = [];\n\n    if (this._whenQuietFns.length) {\n      // we move these over to a variable so that\n      // if any new callbacks are registered in another\n      // flush they do not populate the existing set\n      const quietFns = this._whenQuietFns;\n      this._whenQuietFns = [];\n\n      if (players.length) {\n        optimizeGroupPlayer(players).onDone(() => {\n          quietFns.forEach(fn => fn());\n        });\n      } else {\n        quietFns.forEach(fn => fn());\n      }\n    }\n  }\n\n  reportError(errors) {\n    throw new Error(`Unable to process animations due to the following failed trigger transitions\\n ${errors.join('\\n')}`);\n  }\n\n  _flushAnimations(cleanupFns, microtaskId) {\n    const subTimelines = new ElementInstructionMap();\n    const skippedPlayers = [];\n    const skippedPlayersMap = new Map();\n    const queuedInstructions = [];\n    const queriedElements = new Map();\n    const allPreStyleElements = new Map();\n    const allPostStyleElements = new Map();\n    const disabledElementsSet = new Set();\n    this.disabledNodes.forEach(node => {\n      disabledElementsSet.add(node);\n      const nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);\n\n      for (let i = 0; i < nodesThatAreDisabled.length; i++) {\n        disabledElementsSet.add(nodesThatAreDisabled[i]);\n      }\n    });\n    const bodyNode = this.bodyNode;\n    const allTriggerElements = Array.from(this.statesByElement.keys());\n    const enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements); // this must occur before the instructions are built below such that\n    // the :enter queries match the elements (since the timeline queries\n    // are fired during instruction building).\n\n    const enterNodeMapIds = new Map();\n    let i = 0;\n    enterNodeMap.forEach((nodes, root) => {\n      const className = ENTER_CLASSNAME + i++;\n      enterNodeMapIds.set(root, className);\n      nodes.forEach(node => addClass(node, className));\n    });\n    const allLeaveNodes = [];\n    const mergedLeaveNodes = new Set();\n    const leaveNodesWithoutAnimations = new Set();\n\n    for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n      const element = this.collectedLeaveElements[i];\n      const details = element[REMOVAL_FLAG];\n\n      if (details && details.setForRemoval) {\n        allLeaveNodes.push(element);\n        mergedLeaveNodes.add(element);\n\n        if (details.hasAnimation) {\n          this.driver.query(element, STAR_SELECTOR, true).forEach(elm => mergedLeaveNodes.add(elm));\n        } else {\n          leaveNodesWithoutAnimations.add(element);\n        }\n      }\n    }\n\n    const leaveNodeMapIds = new Map();\n    const leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n    leaveNodeMap.forEach((nodes, root) => {\n      const className = LEAVE_CLASSNAME + i++;\n      leaveNodeMapIds.set(root, className);\n      nodes.forEach(node => addClass(node, className));\n    });\n    cleanupFns.push(() => {\n      enterNodeMap.forEach((nodes, root) => {\n        const className = enterNodeMapIds.get(root);\n        nodes.forEach(node => removeClass(node, className));\n      });\n      leaveNodeMap.forEach((nodes, root) => {\n        const className = leaveNodeMapIds.get(root);\n        nodes.forEach(node => removeClass(node, className));\n      });\n      allLeaveNodes.forEach(element => {\n        this.processLeaveNode(element);\n      });\n    });\n    const allPlayers = [];\n    const erroneousTransitions = [];\n\n    for (let i = this._namespaceList.length - 1; i >= 0; i--) {\n      const ns = this._namespaceList[i];\n      ns.drainQueuedTransitions(microtaskId).forEach(entry => {\n        const player = entry.player;\n        const element = entry.element;\n        allPlayers.push(player);\n\n        if (this.collectedEnterElements.length) {\n          const details = element[REMOVAL_FLAG]; // move animations are currently not supported...\n\n          if (details && details.setForMove) {\n            player.destroy();\n            return;\n          }\n        }\n\n        const nodeIsOrphaned = !bodyNode || !this.driver.containsElement(bodyNode, element);\n        const leaveClassName = leaveNodeMapIds.get(element);\n        const enterClassName = enterNodeMapIds.get(element);\n\n        const instruction = this._buildInstruction(entry, subTimelines, enterClassName, leaveClassName, nodeIsOrphaned);\n\n        if (instruction.errors && instruction.errors.length) {\n          erroneousTransitions.push(instruction);\n          return;\n        } // even though the element may not be apart of the DOM, it may\n        // still be added at a later point (due to the mechanics of content\n        // projection and/or dynamic component insertion) therefore it's\n        // important we still style the element.\n\n\n        if (nodeIsOrphaned) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        } // if a unmatched transition is queued to go then it SHOULD NOT render\n        // an animation and cancel the previously running animations.\n\n\n        if (entry.isFallbackTransition) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        } // this means that if a parent animation uses this animation as a sub trigger\n        // then it will instruct the timeline builder to not add a player delay, but\n        // instead stretch the first keyframe gap up until the animation starts. The\n        // reason this is important is to prevent extra initialization styles from being\n        // required by the user in the animation.\n\n\n        instruction.timelines.forEach(tl => tl.stretchStartingKeyframe = true);\n        subTimelines.append(element, instruction.timelines);\n        const tuple = {\n          instruction,\n          player,\n          element\n        };\n        queuedInstructions.push(tuple);\n        instruction.queriedElements.forEach(element => getOrSetAsInMap(queriedElements, element, []).push(player));\n        instruction.preStyleProps.forEach((stringMap, element) => {\n          const props = Object.keys(stringMap);\n\n          if (props.length) {\n            let setVal = allPreStyleElements.get(element);\n\n            if (!setVal) {\n              allPreStyleElements.set(element, setVal = new Set());\n            }\n\n            props.forEach(prop => setVal.add(prop));\n          }\n        });\n        instruction.postStyleProps.forEach((stringMap, element) => {\n          const props = Object.keys(stringMap);\n          let setVal = allPostStyleElements.get(element);\n\n          if (!setVal) {\n            allPostStyleElements.set(element, setVal = new Set());\n          }\n\n          props.forEach(prop => setVal.add(prop));\n        });\n      });\n    }\n\n    if (erroneousTransitions.length) {\n      const errors = [];\n      erroneousTransitions.forEach(instruction => {\n        errors.push(`@${instruction.triggerName} has failed due to:\\n`);\n        instruction.errors.forEach(error => errors.push(`- ${error}\\n`));\n      });\n      allPlayers.forEach(player => player.destroy());\n      this.reportError(errors);\n    }\n\n    const allPreviousPlayersMap = new Map(); // this map works to tell which element in the DOM tree is contained by\n    // which animation. Further down below this map will get populated once\n    // the players are built and in doing so it can efficiently figure out\n    // if a sub player is skipped due to a parent player having priority.\n\n    const animationElementMap = new Map();\n    queuedInstructions.forEach(entry => {\n      const element = entry.element;\n\n      if (subTimelines.has(element)) {\n        animationElementMap.set(element, element);\n\n        this._beforeAnimationBuild(entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n      }\n    });\n    skippedPlayers.forEach(player => {\n      const element = player.element;\n\n      const previousPlayers = this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n\n      previousPlayers.forEach(prevPlayer => {\n        getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n        prevPlayer.destroy();\n      });\n    }); // this is a special case for nodes that will be removed (either by)\n    // having their own leave animations or by being queried in a container\n    // that will be removed once a parent animation is complete. The idea\n    // here is that * styles must be identical to ! styles because of\n    // backwards compatibility (* is also filled in by default in many places).\n    // Otherwise * styles will return an empty value or auto since the element\n    // that is being getComputedStyle'd will not be visible (since * = destination)\n\n    const replaceNodes = allLeaveNodes.filter(node => {\n      return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n    }); // POST STAGE: fill the * styles\n\n    const postStylesMap = new Map();\n    const allLeaveQueriedNodes = cloakAndComputeStyles(postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n    allLeaveQueriedNodes.forEach(node => {\n      if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n        replaceNodes.push(node);\n      }\n    }); // PRE STAGE: fill the ! styles\n\n    const preStylesMap = new Map();\n    enterNodeMap.forEach((nodes, root) => {\n      cloakAndComputeStyles(preStylesMap, this.driver, new Set(nodes), allPreStyleElements, ɵPRE_STYLE);\n    });\n    replaceNodes.forEach(node => {\n      const post = postStylesMap.get(node);\n      const pre = preStylesMap.get(node);\n      postStylesMap.set(node, Object.assign(Object.assign({}, post), pre));\n    });\n    const rootPlayers = [];\n    const subPlayers = [];\n    const NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n    queuedInstructions.forEach(entry => {\n      const {\n        element,\n        player,\n        instruction\n      } = entry; // this means that it was never consumed by a parent animation which\n      // means that it is independent and therefore should be set for animation\n\n      if (subTimelines.has(element)) {\n        if (disabledElementsSet.has(element)) {\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          player.disabled = true;\n          player.overrideTotalTime(instruction.totalTime);\n          skippedPlayers.push(player);\n          return;\n        } // this will flow up the DOM and query the map to figure out\n        // if a parent animation has priority over it. In the situation\n        // that a parent is detected then it will cancel the loop. If\n        // nothing is detected, or it takes a few hops to find a parent,\n        // then it will fill in the missing nodes and signal them as having\n        // a detected parent (or a NO_PARENT value via a special constant).\n\n\n        let parentWithAnimation = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n\n        if (animationElementMap.size > 1) {\n          let elm = element;\n          const parentsToAdd = [];\n\n          while (elm = elm.parentNode) {\n            const detectedParent = animationElementMap.get(elm);\n\n            if (detectedParent) {\n              parentWithAnimation = detectedParent;\n              break;\n            }\n\n            parentsToAdd.push(elm);\n          }\n\n          parentsToAdd.forEach(parent => animationElementMap.set(parent, parentWithAnimation));\n        }\n\n        const innerPlayer = this._buildAnimation(player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap);\n\n        player.setRealPlayer(innerPlayer);\n\n        if (parentWithAnimation === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n          rootPlayers.push(player);\n        } else {\n          const parentPlayers = this.playersByElement.get(parentWithAnimation);\n\n          if (parentPlayers && parentPlayers.length) {\n            player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n          }\n\n          skippedPlayers.push(player);\n        }\n      } else {\n        eraseStyles(element, instruction.fromStyles);\n        player.onDestroy(() => setStyles(element, instruction.toStyles)); // there still might be a ancestor player animating this\n        // element therefore we will still add it as a sub player\n        // even if its animation may be disabled\n\n        subPlayers.push(player);\n\n        if (disabledElementsSet.has(element)) {\n          skippedPlayers.push(player);\n        }\n      }\n    }); // find all of the sub players' corresponding inner animation player\n\n    subPlayers.forEach(player => {\n      // even if any players are not found for a sub animation then it\n      // will still complete itself after the next tick since it's Noop\n      const playersForElement = skippedPlayersMap.get(player.element);\n\n      if (playersForElement && playersForElement.length) {\n        const innerPlayer = optimizeGroupPlayer(playersForElement);\n        player.setRealPlayer(innerPlayer);\n      }\n    }); // the reason why we don't actually play the animation is\n    // because all that a skipped player is designed to do is to\n    // fire the start/done transition callback events\n\n    skippedPlayers.forEach(player => {\n      if (player.parentPlayer) {\n        player.syncPlayerEvents(player.parentPlayer);\n      } else {\n        player.destroy();\n      }\n    }); // run through all of the queued removals and see if they\n    // were picked up by a query. If not then perform the removal\n    // operation right away unless a parent animation is ongoing.\n\n    for (let i = 0; i < allLeaveNodes.length; i++) {\n      const element = allLeaveNodes[i];\n      const details = element[REMOVAL_FLAG];\n      removeClass(element, LEAVE_CLASSNAME); // this means the element has a removal animation that is being\n      // taken care of and therefore the inner elements will hang around\n      // until that animation is over (or the parent queried animation)\n\n      if (details && details.hasAnimation) continue;\n      let players = []; // if this element is queried or if it contains queried children\n      // then we want for the element not to be removed from the page\n      // until the queried animations have finished\n\n      if (queriedElements.size) {\n        let queriedPlayerResults = queriedElements.get(element);\n\n        if (queriedPlayerResults && queriedPlayerResults.length) {\n          players.push(...queriedPlayerResults);\n        }\n\n        let queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n\n        for (let j = 0; j < queriedInnerElements.length; j++) {\n          let queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n\n          if (queriedPlayers && queriedPlayers.length) {\n            players.push(...queriedPlayers);\n          }\n        }\n      }\n\n      const activePlayers = players.filter(p => !p.destroyed);\n\n      if (activePlayers.length) {\n        removeNodesAfterAnimationDone(this, element, activePlayers);\n      } else {\n        this.processLeaveNode(element);\n      }\n    } // this is required so the cleanup method doesn't remove them\n\n\n    allLeaveNodes.length = 0;\n    rootPlayers.forEach(player => {\n      this.players.push(player);\n      player.onDone(() => {\n        player.destroy();\n        const index = this.players.indexOf(player);\n        this.players.splice(index, 1);\n      });\n      player.play();\n    });\n    return rootPlayers;\n  }\n\n  elementContainsData(namespaceId, element) {\n    let containsData = false;\n    const details = element[REMOVAL_FLAG];\n    if (details && details.setForRemoval) containsData = true;\n    if (this.playersByElement.has(element)) containsData = true;\n    if (this.playersByQueriedElement.has(element)) containsData = true;\n    if (this.statesByElement.has(element)) containsData = true;\n    return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n  }\n\n  afterFlush(callback) {\n    this._flushFns.push(callback);\n  }\n\n  afterFlushAnimationsDone(callback) {\n    this._whenQuietFns.push(callback);\n  }\n\n  _getPreviousPlayers(element, isQueriedElement, namespaceId, triggerName, toStateValue) {\n    let players = [];\n\n    if (isQueriedElement) {\n      const queriedElementPlayers = this.playersByQueriedElement.get(element);\n\n      if (queriedElementPlayers) {\n        players = queriedElementPlayers;\n      }\n    } else {\n      const elementPlayers = this.playersByElement.get(element);\n\n      if (elementPlayers) {\n        const isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;\n        elementPlayers.forEach(player => {\n          if (player.queued) return;\n          if (!isRemovalAnimation && player.triggerName != triggerName) return;\n          players.push(player);\n        });\n      }\n    }\n\n    if (namespaceId || triggerName) {\n      players = players.filter(player => {\n        if (namespaceId && namespaceId != player.namespaceId) return false;\n        if (triggerName && triggerName != player.triggerName) return false;\n        return true;\n      });\n    }\n\n    return players;\n  }\n\n  _beforeAnimationBuild(namespaceId, instruction, allPreviousPlayersMap) {\n    const triggerName = instruction.triggerName;\n    const rootElement = instruction.element; // when a removal animation occurs, ALL previous players are collected\n    // and destroyed (even if they are outside of the current namespace)\n\n    const targetNameSpaceId = instruction.isRemovalTransition ? undefined : namespaceId;\n    const targetTriggerName = instruction.isRemovalTransition ? undefined : triggerName;\n\n    for (const timelineInstruction of instruction.timelines) {\n      const element = timelineInstruction.element;\n      const isQueriedElement = element !== rootElement;\n      const players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n\n      const previousPlayers = this._getPreviousPlayers(element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n\n      previousPlayers.forEach(player => {\n        const realPlayer = player.getRealPlayer();\n\n        if (realPlayer.beforeDestroy) {\n          realPlayer.beforeDestroy();\n        }\n\n        player.destroy();\n        players.push(player);\n      });\n    } // this needs to be done so that the PRE/POST styles can be\n    // computed properly without interfering with the previous animation\n\n\n    eraseStyles(rootElement, instruction.fromStyles);\n  }\n\n  _buildAnimation(namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap, postStylesMap) {\n    const triggerName = instruction.triggerName;\n    const rootElement = instruction.element; // we first run this so that the previous animation player\n    // data can be passed into the successive animation players\n\n    const allQueriedPlayers = [];\n    const allConsumedElements = new Set();\n    const allSubElements = new Set();\n    const allNewPlayers = instruction.timelines.map(timelineInstruction => {\n      const element = timelineInstruction.element;\n      allConsumedElements.add(element); // FIXME (matsko): make sure to-be-removed animations are removed properly\n\n      const details = element[REMOVAL_FLAG];\n      if (details && details.removedBeforeQueried) return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);\n      const isQueriedElement = element !== rootElement;\n      const previousPlayers = flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY).map(p => p.getRealPlayer())).filter(p => {\n        // the `element` is not apart of the AnimationPlayer definition, but\n        // Mock/WebAnimations\n        // use the element within their implementation. This will be added in Angular5 to\n        // AnimationPlayer\n        const pp = p;\n        return pp.element ? pp.element === element : false;\n      });\n      const preStyles = preStylesMap.get(element);\n      const postStyles = postStylesMap.get(element);\n      const keyframes = normalizeKeyframes(this.driver, this._normalizer, element, timelineInstruction.keyframes, preStyles, postStyles);\n\n      const player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers); // this means that this particular player belongs to a sub trigger. It is\n      // important that we match this player up with the corresponding (@trigger.listener)\n\n\n      if (timelineInstruction.subTimeline && skippedPlayersMap) {\n        allSubElements.add(element);\n      }\n\n      if (isQueriedElement) {\n        const wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n        wrappedPlayer.setRealPlayer(player);\n        allQueriedPlayers.push(wrappedPlayer);\n      }\n\n      return player;\n    });\n    allQueriedPlayers.forEach(player => {\n      getOrSetAsInMap(this.playersByQueriedElement, player.element, []).push(player);\n      player.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player));\n    });\n    allConsumedElements.forEach(element => addClass(element, NG_ANIMATING_CLASSNAME));\n    const player = optimizeGroupPlayer(allNewPlayers);\n    player.onDestroy(() => {\n      allConsumedElements.forEach(element => removeClass(element, NG_ANIMATING_CLASSNAME));\n      setStyles(rootElement, instruction.toStyles);\n    }); // this basically makes all of the callbacks for sub element animations\n    // be dependent on the upper players for when they finish\n\n    allSubElements.forEach(element => {\n      getOrSetAsInMap(skippedPlayersMap, element, []).push(player);\n    });\n    return player;\n  }\n\n  _buildPlayer(instruction, keyframes, previousPlayers) {\n    if (keyframes.length > 0) {\n      return this.driver.animate(instruction.element, keyframes, instruction.duration, instruction.delay, instruction.easing, previousPlayers);\n    } // special case for when an empty transition|definition is provided\n    // ... there is no point in rendering an empty animation\n\n\n    return new NoopAnimationPlayer(instruction.duration, instruction.delay);\n  }\n\n}\n\nclass TransitionAnimationPlayer {\n  constructor(namespaceId, triggerName, element) {\n    this.namespaceId = namespaceId;\n    this.triggerName = triggerName;\n    this.element = element;\n    this._player = new NoopAnimationPlayer();\n    this._containsRealPlayer = false;\n    this._queuedCallbacks = {};\n    this.destroyed = false;\n    this.markedForDestroy = false;\n    this.disabled = false;\n    this.queued = true;\n    this.totalTime = 0;\n  }\n\n  setRealPlayer(player) {\n    if (this._containsRealPlayer) return;\n    this._player = player;\n    Object.keys(this._queuedCallbacks).forEach(phase => {\n      this._queuedCallbacks[phase].forEach(callback => listenOnPlayer(player, phase, undefined, callback));\n    });\n    this._queuedCallbacks = {};\n    this._containsRealPlayer = true;\n    this.overrideTotalTime(player.totalTime);\n    this.queued = false;\n  }\n\n  getRealPlayer() {\n    return this._player;\n  }\n\n  overrideTotalTime(totalTime) {\n    this.totalTime = totalTime;\n  }\n\n  syncPlayerEvents(player) {\n    const p = this._player;\n\n    if (p.triggerCallback) {\n      player.onStart(() => p.triggerCallback('start'));\n    }\n\n    player.onDone(() => this.finish());\n    player.onDestroy(() => this.destroy());\n  }\n\n  _queueEvent(name, callback) {\n    getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n  }\n\n  onDone(fn) {\n    if (this.queued) {\n      this._queueEvent('done', fn);\n    }\n\n    this._player.onDone(fn);\n  }\n\n  onStart(fn) {\n    if (this.queued) {\n      this._queueEvent('start', fn);\n    }\n\n    this._player.onStart(fn);\n  }\n\n  onDestroy(fn) {\n    if (this.queued) {\n      this._queueEvent('destroy', fn);\n    }\n\n    this._player.onDestroy(fn);\n  }\n\n  init() {\n    this._player.init();\n  }\n\n  hasStarted() {\n    return this.queued ? false : this._player.hasStarted();\n  }\n\n  play() {\n    !this.queued && this._player.play();\n  }\n\n  pause() {\n    !this.queued && this._player.pause();\n  }\n\n  restart() {\n    !this.queued && this._player.restart();\n  }\n\n  finish() {\n    this._player.finish();\n  }\n\n  destroy() {\n    this.destroyed = true;\n\n    this._player.destroy();\n  }\n\n  reset() {\n    !this.queued && this._player.reset();\n  }\n\n  setPosition(p) {\n    if (!this.queued) {\n      this._player.setPosition(p);\n    }\n  }\n\n  getPosition() {\n    return this.queued ? 0 : this._player.getPosition();\n  }\n  /** @internal */\n\n\n  triggerCallback(phaseName) {\n    const p = this._player;\n\n    if (p.triggerCallback) {\n      p.triggerCallback(phaseName);\n    }\n  }\n\n}\n\nfunction deleteOrUnsetInMap(map, key, value) {\n  let currentValues;\n\n  if (map instanceof Map) {\n    currentValues = map.get(key);\n\n    if (currentValues) {\n      if (currentValues.length) {\n        const index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n\n      if (currentValues.length == 0) {\n        map.delete(key);\n      }\n    }\n  } else {\n    currentValues = map[key];\n\n    if (currentValues) {\n      if (currentValues.length) {\n        const index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n\n      if (currentValues.length == 0) {\n        delete map[key];\n      }\n    }\n  }\n\n  return currentValues;\n}\n\nfunction normalizeTriggerValue(value) {\n  // we use `!= null` here because it's the most simple\n  // way to test against a \"falsy\" value without mixing\n  // in empty strings or a zero value. DO NOT OPTIMIZE.\n  return value != null ? value : null;\n}\n\nfunction isElementNode(node) {\n  return node && node['nodeType'] === 1;\n}\n\nfunction isTriggerEventValid(eventName) {\n  return eventName == 'start' || eventName == 'done';\n}\n\nfunction cloakElement(element, value) {\n  const oldValue = element.style.display;\n  element.style.display = value != null ? value : 'none';\n  return oldValue;\n}\n\nfunction cloakAndComputeStyles(valuesMap, driver, elements, elementPropsMap, defaultStyle) {\n  const cloakVals = [];\n  elements.forEach(element => cloakVals.push(cloakElement(element)));\n  const failedElements = [];\n  elementPropsMap.forEach((props, element) => {\n    const styles = {};\n    props.forEach(prop => {\n      const value = styles[prop] = driver.computeStyle(element, prop, defaultStyle); // there is no easy way to detect this because a sub element could be removed\n      // by a parent animation element being detached.\n\n      if (!value || value.length == 0) {\n        element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n        failedElements.push(element);\n      }\n    });\n    valuesMap.set(element, styles);\n  }); // we use a index variable here since Set.forEach(a, i) does not return\n  // an index value for the closure (but instead just the value)\n\n  let i = 0;\n  elements.forEach(element => cloakElement(element, cloakVals[i++]));\n  return failedElements;\n}\n/*\nSince the Angular renderer code will return a collection of inserted\nnodes in all areas of a DOM tree, it's up to this algorithm to figure\nout which nodes are roots for each animation @trigger.\n\nBy placing each inserted node into a Set and traversing upwards, it\nis possible to find the @trigger elements and well any direct *star\ninsertion nodes, if a @trigger root is found then the enter element\nis placed into the Map[@trigger] spot.\n */\n\n\nfunction buildRootMap(roots, nodes) {\n  const rootMap = new Map();\n  roots.forEach(root => rootMap.set(root, []));\n  if (nodes.length == 0) return rootMap;\n  const NULL_NODE = 1;\n  const nodeSet = new Set(nodes);\n  const localRootMap = new Map();\n\n  function getRoot(node) {\n    if (!node) return NULL_NODE;\n    let root = localRootMap.get(node);\n    if (root) return root;\n    const parent = node.parentNode;\n\n    if (rootMap.has(parent)) {\n      // ngIf inside @trigger\n      root = parent;\n    } else if (nodeSet.has(parent)) {\n      // ngIf inside ngIf\n      root = NULL_NODE;\n    } else {\n      // recurse upwards\n      root = getRoot(parent);\n    }\n\n    localRootMap.set(node, root);\n    return root;\n  }\n\n  nodes.forEach(node => {\n    const root = getRoot(node);\n\n    if (root !== NULL_NODE) {\n      rootMap.get(root).push(node);\n    }\n  });\n  return rootMap;\n}\n\nconst CLASSES_CACHE_KEY = '$$classes';\n\nfunction containsClass(element, className) {\n  if (element.classList) {\n    return element.classList.contains(className);\n  } else {\n    const classes = element[CLASSES_CACHE_KEY];\n    return classes && classes[className];\n  }\n}\n\nfunction addClass(element, className) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    let classes = element[CLASSES_CACHE_KEY];\n\n    if (!classes) {\n      classes = element[CLASSES_CACHE_KEY] = {};\n    }\n\n    classes[className] = true;\n  }\n}\n\nfunction removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    let classes = element[CLASSES_CACHE_KEY];\n\n    if (classes) {\n      delete classes[className];\n    }\n  }\n}\n\nfunction removeNodesAfterAnimationDone(engine, element, players) {\n  optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n}\n\nfunction flattenGroupPlayers(players) {\n  const finalPlayers = [];\n\n  _flattenGroupPlayersRecur(players, finalPlayers);\n\n  return finalPlayers;\n}\n\nfunction _flattenGroupPlayersRecur(players, finalPlayers) {\n  for (let i = 0; i < players.length; i++) {\n    const player = players[i];\n\n    if (player instanceof ɵAnimationGroupPlayer) {\n      _flattenGroupPlayersRecur(player.players, finalPlayers);\n    } else {\n      finalPlayers.push(player);\n    }\n  }\n}\n\nfunction objEquals(a, b) {\n  const k1 = Object.keys(a);\n  const k2 = Object.keys(b);\n  if (k1.length != k2.length) return false;\n\n  for (let i = 0; i < k1.length; i++) {\n    const prop = k1[i];\n    if (!b.hasOwnProperty(prop) || a[prop] !== b[prop]) return false;\n  }\n\n  return true;\n}\n\nfunction replacePostStylesAsPre(element, allPreStyleElements, allPostStyleElements) {\n  const postEntry = allPostStyleElements.get(element);\n  if (!postEntry) return false;\n  let preEntry = allPreStyleElements.get(element);\n\n  if (preEntry) {\n    postEntry.forEach(data => preEntry.add(data));\n  } else {\n    allPreStyleElements.set(element, postEntry);\n  }\n\n  allPostStyleElements.delete(element);\n  return true;\n}\n\nclass AnimationEngine {\n  constructor(bodyNode, _driver, normalizer) {\n    this.bodyNode = bodyNode;\n    this._driver = _driver;\n    this._triggerCache = {}; // this method is designed to be overridden by the code that uses this engine\n\n    this.onRemovalComplete = (element, context) => {};\n\n    this._transitionEngine = new TransitionAnimationEngine(bodyNode, _driver, normalizer);\n    this._timelineEngine = new TimelineAnimationEngine(bodyNode, _driver, normalizer);\n\n    this._transitionEngine.onRemovalComplete = (element, context) => this.onRemovalComplete(element, context);\n  }\n\n  registerTrigger(componentId, namespaceId, hostElement, name, metadata) {\n    const cacheKey = componentId + '-' + name;\n    let trigger = this._triggerCache[cacheKey];\n\n    if (!trigger) {\n      const errors = [];\n      const ast = buildAnimationAst(this._driver, metadata, errors);\n\n      if (errors.length) {\n        throw new Error(`The animation trigger \"${name}\" has failed to build due to the following errors:\\n - ${errors.join('\\n - ')}`);\n      }\n\n      trigger = buildTrigger(name, ast);\n      this._triggerCache[cacheKey] = trigger;\n    }\n\n    this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n  }\n\n  register(namespaceId, hostElement) {\n    this._transitionEngine.register(namespaceId, hostElement);\n  }\n\n  destroy(namespaceId, context) {\n    this._transitionEngine.destroy(namespaceId, context);\n  }\n\n  onInsert(namespaceId, element, parent, insertBefore) {\n    this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n  }\n\n  onRemove(namespaceId, element, context, isHostElement) {\n    this._transitionEngine.removeNode(namespaceId, element, isHostElement || false, context);\n  }\n\n  disableAnimations(element, disable) {\n    this._transitionEngine.markElementAsDisabled(element, disable);\n  }\n\n  process(namespaceId, element, property, value) {\n    if (property.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(property);\n      const args = value;\n\n      this._timelineEngine.command(id, element, action, args);\n    } else {\n      this._transitionEngine.trigger(namespaceId, element, property, value);\n    }\n  }\n\n  listen(namespaceId, element, eventName, eventPhase, callback) {\n    // @@listen\n    if (eventName.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(eventName);\n      return this._timelineEngine.listen(id, element, action, callback);\n    }\n\n    return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n  }\n\n  flush(microtaskId = -1) {\n    this._transitionEngine.flush(microtaskId);\n  }\n\n  get players() {\n    return this._transitionEngine.players.concat(this._timelineEngine.players);\n  }\n\n  whenRenderingDone() {\n    return this._transitionEngine.whenRenderingDone();\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an instance of `SpecialCasedStyles` if and when any special (non animateable) styles are\n * detected.\n *\n * In CSS there exist properties that cannot be animated within a keyframe animation\n * (whether it be via CSS keyframes or web-animations) and the animation implementation\n * will ignore them. This function is designed to detect those special cased styles and\n * return a container that will be executed at the start and end of the animation.\n *\n * @returns an instance of `SpecialCasedStyles` if any special styles are detected otherwise `null`\n */\n\n\nfunction packageNonAnimatableStyles(element, styles) {\n  let startStyles = null;\n  let endStyles = null;\n\n  if (Array.isArray(styles) && styles.length) {\n    startStyles = filterNonAnimatableStyles(styles[0]);\n\n    if (styles.length > 1) {\n      endStyles = filterNonAnimatableStyles(styles[styles.length - 1]);\n    }\n  } else if (styles) {\n    startStyles = filterNonAnimatableStyles(styles);\n  }\n\n  return startStyles || endStyles ? new SpecialCasedStyles(element, startStyles, endStyles) : null;\n}\n/**\n * Designed to be executed during a keyframe-based animation to apply any special-cased styles.\n *\n * When started (when the `start()` method is run) then the provided `startStyles`\n * will be applied. When finished (when the `finish()` method is called) the\n * `endStyles` will be applied as well any any starting styles. Finally when\n * `destroy()` is called then all styles will be removed.\n */\n\n\nclass SpecialCasedStyles {\n  constructor(_element, _startStyles, _endStyles) {\n    this._element = _element;\n    this._startStyles = _startStyles;\n    this._endStyles = _endStyles;\n    this._state = 0\n    /* Pending */\n    ;\n    let initialStyles = SpecialCasedStyles.initialStylesByElement.get(_element);\n\n    if (!initialStyles) {\n      SpecialCasedStyles.initialStylesByElement.set(_element, initialStyles = {});\n    }\n\n    this._initialStyles = initialStyles;\n  }\n\n  start() {\n    if (this._state < 1\n    /* Started */\n    ) {\n        if (this._startStyles) {\n          setStyles(this._element, this._startStyles, this._initialStyles);\n        }\n\n        this._state = 1\n        /* Started */\n        ;\n      }\n  }\n\n  finish() {\n    this.start();\n\n    if (this._state < 2\n    /* Finished */\n    ) {\n        setStyles(this._element, this._initialStyles);\n\n        if (this._endStyles) {\n          setStyles(this._element, this._endStyles);\n          this._endStyles = null;\n        }\n\n        this._state = 1\n        /* Started */\n        ;\n      }\n  }\n\n  destroy() {\n    this.finish();\n\n    if (this._state < 3\n    /* Destroyed */\n    ) {\n        SpecialCasedStyles.initialStylesByElement.delete(this._element);\n\n        if (this._startStyles) {\n          eraseStyles(this._element, this._startStyles);\n          this._endStyles = null;\n        }\n\n        if (this._endStyles) {\n          eraseStyles(this._element, this._endStyles);\n          this._endStyles = null;\n        }\n\n        setStyles(this._element, this._initialStyles);\n        this._state = 3\n        /* Destroyed */\n        ;\n      }\n  }\n\n}\n\nSpecialCasedStyles.initialStylesByElement = new WeakMap();\n\nfunction filterNonAnimatableStyles(styles) {\n  let result = null;\n  const props = Object.keys(styles);\n\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n\n    if (isNonAnimatableStyle(prop)) {\n      result = result || {};\n      result[prop] = styles[prop];\n    }\n  }\n\n  return result;\n}\n\nfunction isNonAnimatableStyle(prop) {\n  return prop === 'display' || prop === 'position';\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nconst ANIMATION_PROP = 'animation';\nconst ANIMATIONEND_EVENT = 'animationend';\nconst ONE_SECOND$1 = 1000;\n\nclass ElementAnimationStyleHandler {\n  constructor(_element, _name, _duration, _delay, _easing, _fillMode, _onDoneFn) {\n    this._element = _element;\n    this._name = _name;\n    this._duration = _duration;\n    this._delay = _delay;\n    this._easing = _easing;\n    this._fillMode = _fillMode;\n    this._onDoneFn = _onDoneFn;\n    this._finished = false;\n    this._destroyed = false;\n    this._startTime = 0;\n    this._position = 0;\n\n    this._eventFn = e => this._handleCallback(e);\n  }\n\n  apply() {\n    applyKeyframeAnimation(this._element, `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`);\n    addRemoveAnimationEvent(this._element, this._eventFn, false);\n    this._startTime = Date.now();\n  }\n\n  pause() {\n    playPauseAnimation(this._element, this._name, 'paused');\n  }\n\n  resume() {\n    playPauseAnimation(this._element, this._name, 'running');\n  }\n\n  setPosition(position) {\n    const index = findIndexForAnimation(this._element, this._name);\n    this._position = position * this._duration;\n    setAnimationStyle(this._element, 'Delay', `-${this._position}ms`, index);\n  }\n\n  getPosition() {\n    return this._position;\n  }\n\n  _handleCallback(event) {\n    const timestamp = event._ngTestManualTimestamp || Date.now();\n    const elapsedTime = parseFloat(event.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES)) * ONE_SECOND$1;\n\n    if (event.animationName == this._name && Math.max(timestamp - this._startTime, 0) >= this._delay && elapsedTime >= this._duration) {\n      this.finish();\n    }\n  }\n\n  finish() {\n    if (this._finished) return;\n    this._finished = true;\n\n    this._onDoneFn();\n\n    addRemoveAnimationEvent(this._element, this._eventFn, true);\n  }\n\n  destroy() {\n    if (this._destroyed) return;\n    this._destroyed = true;\n    this.finish();\n    removeKeyframeAnimation(this._element, this._name);\n  }\n\n}\n\nfunction playPauseAnimation(element, name, status) {\n  const index = findIndexForAnimation(element, name);\n  setAnimationStyle(element, 'PlayState', status, index);\n}\n\nfunction applyKeyframeAnimation(element, value) {\n  const anim = getAnimationStyle(element, '').trim();\n  let index = 0;\n\n  if (anim.length) {\n    index = countChars(anim, ',') + 1;\n    value = `${anim}, ${value}`;\n  }\n\n  setAnimationStyle(element, '', value);\n  return index;\n}\n\nfunction removeKeyframeAnimation(element, name) {\n  const anim = getAnimationStyle(element, '');\n  const tokens = anim.split(',');\n  const index = findMatchingTokenIndex(tokens, name);\n\n  if (index >= 0) {\n    tokens.splice(index, 1);\n    const newValue = tokens.join(',');\n    setAnimationStyle(element, '', newValue);\n  }\n}\n\nfunction findIndexForAnimation(element, value) {\n  const anim = getAnimationStyle(element, '');\n\n  if (anim.indexOf(',') > 0) {\n    const tokens = anim.split(',');\n    return findMatchingTokenIndex(tokens, value);\n  }\n\n  return findMatchingTokenIndex([anim], value);\n}\n\nfunction findMatchingTokenIndex(tokens, searchToken) {\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].indexOf(searchToken) >= 0) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction addRemoveAnimationEvent(element, fn, doRemove) {\n  doRemove ? element.removeEventListener(ANIMATIONEND_EVENT, fn) : element.addEventListener(ANIMATIONEND_EVENT, fn);\n}\n\nfunction setAnimationStyle(element, name, value, index) {\n  const prop = ANIMATION_PROP + name;\n\n  if (index != null) {\n    const oldValue = element.style[prop];\n\n    if (oldValue.length) {\n      const tokens = oldValue.split(',');\n      tokens[index] = value;\n      value = tokens.join(',');\n    }\n  }\n\n  element.style[prop] = value;\n}\n\nfunction getAnimationStyle(element, name) {\n  return element.style[ANIMATION_PROP + name];\n}\n\nfunction countChars(value, char) {\n  let count = 0;\n\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c === char) count++;\n  }\n\n  return count;\n}\n\nconst DEFAULT_FILL_MODE = 'forwards';\nconst DEFAULT_EASING = 'linear';\n\nclass CssKeyframesPlayer {\n  constructor(element, keyframes, animationName, _duration, _delay, easing, _finalStyles, _specialStyles) {\n    this.element = element;\n    this.keyframes = keyframes;\n    this.animationName = animationName;\n    this._duration = _duration;\n    this._delay = _delay;\n    this._finalStyles = _finalStyles;\n    this._specialStyles = _specialStyles;\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._started = false;\n    this.currentSnapshot = {};\n    this._state = 0;\n    this.easing = easing || DEFAULT_EASING;\n    this.totalTime = _duration + _delay;\n\n    this._buildStyler();\n  }\n\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n\n  destroy() {\n    this.init();\n    if (this._state >= 4\n    /* DESTROYED */\n    ) return;\n    this._state = 4\n    /* DESTROYED */\n    ;\n\n    this._styler.destroy();\n\n    this._flushStartFns();\n\n    this._flushDoneFns();\n\n    if (this._specialStyles) {\n      this._specialStyles.destroy();\n    }\n\n    this._onDestroyFns.forEach(fn => fn());\n\n    this._onDestroyFns = [];\n  }\n\n  _flushDoneFns() {\n    this._onDoneFns.forEach(fn => fn());\n\n    this._onDoneFns = [];\n  }\n\n  _flushStartFns() {\n    this._onStartFns.forEach(fn => fn());\n\n    this._onStartFns = [];\n  }\n\n  finish() {\n    this.init();\n    if (this._state >= 3\n    /* FINISHED */\n    ) return;\n    this._state = 3\n    /* FINISHED */\n    ;\n\n    this._styler.finish();\n\n    this._flushStartFns();\n\n    if (this._specialStyles) {\n      this._specialStyles.finish();\n    }\n\n    this._flushDoneFns();\n  }\n\n  setPosition(value) {\n    this._styler.setPosition(value);\n  }\n\n  getPosition() {\n    return this._styler.getPosition();\n  }\n\n  hasStarted() {\n    return this._state >= 2\n    /* STARTED */\n    ;\n  }\n\n  init() {\n    if (this._state >= 1\n    /* INITIALIZED */\n    ) return;\n    this._state = 1\n    /* INITIALIZED */\n    ;\n    const elm = this.element;\n\n    this._styler.apply();\n\n    if (this._delay) {\n      this._styler.pause();\n    }\n  }\n\n  play() {\n    this.init();\n\n    if (!this.hasStarted()) {\n      this._flushStartFns();\n\n      this._state = 2\n      /* STARTED */\n      ;\n\n      if (this._specialStyles) {\n        this._specialStyles.start();\n      }\n    }\n\n    this._styler.resume();\n  }\n\n  pause() {\n    this.init();\n\n    this._styler.pause();\n  }\n\n  restart() {\n    this.reset();\n    this.play();\n  }\n\n  reset() {\n    this._styler.destroy();\n\n    this._buildStyler();\n\n    this._styler.apply();\n  }\n\n  _buildStyler() {\n    this._styler = new ElementAnimationStyleHandler(this.element, this.animationName, this._duration, this._delay, this.easing, DEFAULT_FILL_MODE, () => this.finish());\n  }\n  /** @internal */\n\n\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n\n  beforeDestroy() {\n    this.init();\n    const styles = {};\n\n    if (this.hasStarted()) {\n      const finished = this._state >= 3\n      /* FINISHED */\n      ;\n      Object.keys(this._finalStyles).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] = finished ? this._finalStyles[prop] : computeStyle(this.element, prop);\n        }\n      });\n    }\n\n    this.currentSnapshot = styles;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass DirectStylePlayer extends NoopAnimationPlayer {\n  constructor(element, styles) {\n    super();\n    this.element = element;\n    this._startingStyles = {};\n    this.__initialized = false;\n    this._styles = hypenatePropsObject(styles);\n  }\n\n  init() {\n    if (this.__initialized || !this._startingStyles) return;\n    this.__initialized = true;\n    Object.keys(this._styles).forEach(prop => {\n      this._startingStyles[prop] = this.element.style[prop];\n    });\n    super.init();\n  }\n\n  play() {\n    if (!this._startingStyles) return;\n    this.init();\n    Object.keys(this._styles).forEach(prop => this.element.style.setProperty(prop, this._styles[prop]));\n    super.play();\n  }\n\n  destroy() {\n    if (!this._startingStyles) return;\n    Object.keys(this._startingStyles).forEach(prop => {\n      const value = this._startingStyles[prop];\n\n      if (value) {\n        this.element.style.setProperty(prop, value);\n      } else {\n        this.element.style.removeProperty(prop);\n      }\n    });\n    this._startingStyles = null;\n    super.destroy();\n  }\n\n}\n\nconst KEYFRAMES_NAME_PREFIX = 'gen_css_kf_';\nconst TAB_SPACE = ' ';\n\nclass CssKeyframesDriver {\n  constructor() {\n    this._count = 0;\n    this._head = document.querySelector('head');\n    this._warningIssued = false;\n  }\n\n  validateStyleProperty(prop) {\n    return validateStyleProperty(prop);\n  }\n\n  matchesElement(element, selector) {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1, elm2) {\n    return containsElement(elm1, elm2);\n  }\n\n  query(element, selector, multi) {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element, prop, defaultValue) {\n    return window.getComputedStyle(element)[prop];\n  }\n\n  buildKeyframeElement(element, name, keyframes) {\n    keyframes = keyframes.map(kf => hypenatePropsObject(kf));\n    let keyframeStr = `@keyframes ${name} {\\n`;\n    let tab = '';\n    keyframes.forEach(kf => {\n      tab = TAB_SPACE;\n      const offset = parseFloat(kf['offset']);\n      keyframeStr += `${tab}${offset * 100}% {\\n`;\n      tab += TAB_SPACE;\n      Object.keys(kf).forEach(prop => {\n        const value = kf[prop];\n\n        switch (prop) {\n          case 'offset':\n            return;\n\n          case 'easing':\n            if (value) {\n              keyframeStr += `${tab}animation-timing-function: ${value};\\n`;\n            }\n\n            return;\n\n          default:\n            keyframeStr += `${tab}${prop}: ${value};\\n`;\n            return;\n        }\n      });\n      keyframeStr += `${tab}}\\n`;\n    });\n    keyframeStr += `}\\n`;\n    const kfElm = document.createElement('style');\n    kfElm.innerHTML = keyframeStr;\n    return kfElm;\n  }\n\n  animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n    if (scrubberAccessRequested) {\n      this._notifyFaultyScrubber();\n    }\n\n    const previousCssKeyframePlayers = previousPlayers.filter(player => player instanceof CssKeyframesPlayer);\n    const previousStyles = {};\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousCssKeyframePlayers.forEach(player => {\n        let styles = player.currentSnapshot;\n        Object.keys(styles).forEach(prop => previousStyles[prop] = styles[prop]);\n      });\n    }\n\n    keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n    const finalStyles = flattenKeyframesIntoStyles(keyframes); // if there is no animation then there is no point in applying\n    // styles and waiting for an event to get fired. This causes lag.\n    // It's better to just directly apply the styles to the element\n    // via the direct styling animation player.\n\n    if (duration == 0) {\n      return new DirectStylePlayer(element, finalStyles);\n    }\n\n    const animationName = `${KEYFRAMES_NAME_PREFIX}${this._count++}`;\n    const kfElm = this.buildKeyframeElement(element, animationName, keyframes);\n    document.querySelector('head').appendChild(kfElm);\n    const specialStyles = packageNonAnimatableStyles(element, keyframes);\n    const player = new CssKeyframesPlayer(element, keyframes, animationName, duration, delay, easing, finalStyles, specialStyles);\n    player.onDestroy(() => removeElement(kfElm));\n    return player;\n  }\n\n  _notifyFaultyScrubber() {\n    if (!this._warningIssued) {\n      console.warn('@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\\n', '  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill.');\n      this._warningIssued = true;\n    }\n  }\n\n}\n\nfunction flattenKeyframesIntoStyles(keyframes) {\n  let flatKeyframes = {};\n\n  if (keyframes) {\n    const kfs = Array.isArray(keyframes) ? keyframes : [keyframes];\n    kfs.forEach(kf => {\n      Object.keys(kf).forEach(prop => {\n        if (prop == 'offset' || prop == 'easing') return;\n        flatKeyframes[prop] = kf[prop];\n      });\n    });\n  }\n\n  return flatKeyframes;\n}\n\nfunction removeElement(node) {\n  node.parentNode.removeChild(node);\n}\n\nclass WebAnimationsPlayer {\n  constructor(element, keyframes, options, _specialStyles) {\n    this.element = element;\n    this.keyframes = keyframes;\n    this.options = options;\n    this._specialStyles = _specialStyles;\n    this._onDoneFns = [];\n    this._onStartFns = [];\n    this._onDestroyFns = [];\n    this._initialized = false;\n    this._finished = false;\n    this._started = false;\n    this._destroyed = false;\n    this.time = 0;\n    this.parentPlayer = null;\n    this.currentSnapshot = {};\n    this._duration = options['duration'];\n    this._delay = options['delay'] || 0;\n    this.time = this._duration + this._delay;\n  }\n\n  _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n\n      this._onDoneFns.forEach(fn => fn());\n\n      this._onDoneFns = [];\n    }\n  }\n\n  init() {\n    this._buildPlayer();\n\n    this._preparePlayerBeforeStart();\n  }\n\n  _buildPlayer() {\n    if (this._initialized) return;\n    this._initialized = true;\n    const keyframes = this.keyframes;\n    this.domPlayer = this._triggerWebAnimation(this.element, keyframes, this.options);\n    this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n    this.domPlayer.addEventListener('finish', () => this._onFinish());\n  }\n\n  _preparePlayerBeforeStart() {\n    // this is required so that the player doesn't start to animate right away\n    if (this._delay) {\n      this._resetDomPlayerState();\n    } else {\n      this.domPlayer.pause();\n    }\n  }\n  /** @internal */\n\n\n  _triggerWebAnimation(element, keyframes, options) {\n    // jscompiler doesn't seem to know animate is a native property because it's not fully\n    // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n    return element['animate'](keyframes, options);\n  }\n\n  onStart(fn) {\n    this._onStartFns.push(fn);\n  }\n\n  onDone(fn) {\n    this._onDoneFns.push(fn);\n  }\n\n  onDestroy(fn) {\n    this._onDestroyFns.push(fn);\n  }\n\n  play() {\n    this._buildPlayer();\n\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n\n      this._onStartFns = [];\n      this._started = true;\n\n      if (this._specialStyles) {\n        this._specialStyles.start();\n      }\n    }\n\n    this.domPlayer.play();\n  }\n\n  pause() {\n    this.init();\n    this.domPlayer.pause();\n  }\n\n  finish() {\n    this.init();\n\n    if (this._specialStyles) {\n      this._specialStyles.finish();\n    }\n\n    this._onFinish();\n\n    this.domPlayer.finish();\n  }\n\n  reset() {\n    this._resetDomPlayerState();\n\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n\n  _resetDomPlayerState() {\n    if (this.domPlayer) {\n      this.domPlayer.cancel();\n    }\n  }\n\n  restart() {\n    this.reset();\n    this.play();\n  }\n\n  hasStarted() {\n    return this._started;\n  }\n\n  destroy() {\n    if (!this._destroyed) {\n      this._destroyed = true;\n\n      this._resetDomPlayerState();\n\n      this._onFinish();\n\n      if (this._specialStyles) {\n        this._specialStyles.destroy();\n      }\n\n      this._onDestroyFns.forEach(fn => fn());\n\n      this._onDestroyFns = [];\n    }\n  }\n\n  setPosition(p) {\n    this.domPlayer.currentTime = p * this.time;\n  }\n\n  getPosition() {\n    return this.domPlayer.currentTime / this.time;\n  }\n\n  get totalTime() {\n    return this._delay + this._duration;\n  }\n\n  beforeDestroy() {\n    const styles = {};\n\n    if (this.hasStarted()) {\n      Object.keys(this._finalKeyframe).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] = this._finished ? this._finalKeyframe[prop] : computeStyle(this.element, prop);\n        }\n      });\n    }\n\n    this.currentSnapshot = styles;\n  }\n  /** @internal */\n\n\n  triggerCallback(phaseName) {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n\n}\n\nclass WebAnimationsDriver {\n  constructor() {\n    this._isNativeImpl = /\\{\\s*\\[native\\s+code\\]\\s*\\}/.test(getElementAnimateFn().toString());\n    this._cssKeyframesDriver = new CssKeyframesDriver();\n  }\n\n  validateStyleProperty(prop) {\n    return validateStyleProperty(prop);\n  }\n\n  matchesElement(element, selector) {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1, elm2) {\n    return containsElement(elm1, elm2);\n  }\n\n  query(element, selector, multi) {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element, prop, defaultValue) {\n    return window.getComputedStyle(element)[prop];\n  }\n\n  overrideWebAnimationsSupport(supported) {\n    this._isNativeImpl = supported;\n  }\n\n  animate(element, keyframes, duration, delay, easing, previousPlayers = [], scrubberAccessRequested) {\n    const useKeyframes = !scrubberAccessRequested && !this._isNativeImpl;\n\n    if (useKeyframes) {\n      return this._cssKeyframesDriver.animate(element, keyframes, duration, delay, easing, previousPlayers);\n    }\n\n    const fill = delay == 0 ? 'both' : 'forwards';\n    const playerOptions = {\n      duration,\n      delay,\n      fill\n    }; // we check for this to avoid having a null|undefined value be present\n    // for the easing (which results in an error for certain browsers #9752)\n\n    if (easing) {\n      playerOptions['easing'] = easing;\n    }\n\n    const previousStyles = {};\n    const previousWebAnimationPlayers = previousPlayers.filter(player => player instanceof WebAnimationsPlayer);\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousWebAnimationPlayers.forEach(player => {\n        let styles = player.currentSnapshot;\n        Object.keys(styles).forEach(prop => previousStyles[prop] = styles[prop]);\n      });\n    }\n\n    keyframes = keyframes.map(styles => copyStyles(styles, false));\n    keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n    const specialStyles = packageNonAnimatableStyles(element, keyframes);\n    return new WebAnimationsPlayer(element, keyframes, playerOptions, specialStyles);\n  }\n\n}\n\nfunction supportsWebAnimations() {\n  return typeof getElementAnimateFn() === 'function';\n}\n\nfunction getElementAnimateFn() {\n  return isBrowser() && Element.prototype['animate'] || {};\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AnimationDriver, Animation as ɵAnimation, AnimationEngine as ɵAnimationEngine, AnimationStyleNormalizer as ɵAnimationStyleNormalizer, CssKeyframesDriver as ɵCssKeyframesDriver, CssKeyframesPlayer as ɵCssKeyframesPlayer, NoopAnimationDriver as ɵNoopAnimationDriver, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer, WebAnimationsDriver as ɵWebAnimationsDriver, WebAnimationsPlayer as ɵWebAnimationsPlayer, WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer, allowPreviousPlayerStylesMerge as ɵallowPreviousPlayerStylesMerge, SpecialCasedStyles as ɵangular_packages_animations_browser_browser_a, containsElement as ɵcontainsElement, invokeQuery as ɵinvokeQuery, matchesElement as ɵmatchesElement, supportsWebAnimations as ɵsupportsWebAnimations, validateStyleProperty as ɵvalidateStyleProperty };","map":{"version":3,"sources":["../../../../../../packages/animations/browser/src/render/shared.ts","../../../../../../packages/animations/browser/src/render/animation_driver.ts","../../../../../../packages/animations/browser/src/util.ts","../../../../../../packages/animations/browser/src/dsl/animation_transition_expr.ts","../../../../../../packages/animations/browser/src/dsl/animation_ast_builder.ts","../../../../../../packages/animations/browser/src/dsl/animation_timeline_instruction.ts","../../../../../../packages/animations/browser/src/dsl/element_instruction_map.ts","../../../../../../packages/animations/browser/src/dsl/animation_timeline_builder.ts","../../../../../../packages/animations/browser/src/dsl/animation.ts","../../../../../../packages/animations/browser/src/dsl/style_normalization/animation_style_normalizer.ts","../../../../../../packages/animations/browser/src/dsl/style_normalization/web_animations_style_normalizer.ts","../../../../../../packages/animations/browser/src/dsl/animation_transition_instruction.ts","../../../../../../packages/animations/browser/src/dsl/animation_transition_factory.ts","../../../../../../packages/animations/browser/src/dsl/animation_trigger.ts","../../../../../../packages/animations/browser/src/render/timeline_animation_engine.ts","../../../../../../packages/animations/browser/src/render/transition_animation_engine.ts","../../../../../../packages/animations/browser/src/render/animation_engine_next.ts","../../../../../../packages/animations/browser/src/render/special_cased_styles.ts","../../../../../../packages/animations/browser/src/render/css_keyframes/element_animation_style_handler.ts","../../../../../../packages/animations/browser/src/render/css_keyframes/css_keyframes_player.ts","../../../../../../packages/animations/browser/src/render/css_keyframes/direct_style_player.ts","../../../../../../packages/animations/browser/src/render/css_keyframes/css_keyframes_driver.ts","../../../../../../packages/animations/browser/src/render/web_animations/web_animations_player.ts","../../../../../../packages/animations/browser/src/render/web_animations/web_animations_driver.ts","../../../../../../packages/animations/browser/src/private_export.ts","../../../../../../packages/animations/browser/src/browser.ts","../../../../../../packages/animations/browser/public_api.ts","../../../../../../packages/animations/browser/index.ts","../../../../../../packages/animations/browser/browser.ts"],"names":["PRE_STYLE","AnimationGroupPlayer","ONE_SECOND"],"mappings":";;;;;;;AAAA;;;;;;;;;;AAOA,SAUgB,SAVhB,GAUyB;AACvB,SAAQ,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,MAAM,CAAC,QAAd,KAA2B,WAApE;AACD;;AACD,SACgB,MADhB,GACsB;AAAK;AACuD;AACQ;AACG;AACA;AAE3F,SAAO,OAAO,OAAP,KAAmB,WAAnB,IAAkC,GAAG,QAAH,CAAY,IAAZ,CAAiB,OAAjB,MAA8B,kBAAvE;AACD;;AACD,SACgB,mBADhB,CACoC,OADpC,EAC8D;AAC5D,UAAQ,OAAO,CAAC,MAAhB;AACE,SAAK,CAAL;AACE,aAAO,IAAI,mBAAJ,EAAP;;AACF,SAAK,CAAL;AACE,aAAO,OAAO,CAAC,CAAD,CAAd;;AACF;AACE,aAAO,IAAI,qBAAJ,CAA0B,OAA1B,CAAP;AANJ;AAQD;;AACD,SACgB,kBADhB,CAEI,MAFJ,EAE6B,UAF7B,EAEmE,OAFnE,EAGI,SAHJ,EAG6B,SAAA,GAAwB,EAHrD,EAII,UAAA,GAAyB,EAJ7B,EAI+B;AAC7B,QAAM,MAAM,GAAa,EAAzB;AACA,QAAM,mBAAmB,GAAiB,EAA1C;AACA,MAAI,cAAc,GAAG,CAAC,CAAtB;AACA,MAAI,gBAAgB,GAAoB,IAAxC;AACA,EAAA,SAAS,CAAC,OAAV,CAAkB,EAAE,IAAA;AAClB,UAAM,MAAM,GAAG,EAAE,CAAC,QAAD,CAAjB;AACA,UAAM,YAAY,GAAG,MAAM,IAAI,cAA/B;AACA,UAAM,kBAAkB,GAAgB,YAAY,IAAI,gBAAjB,IAAsC,EAA7E;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAwB,IAAI,IAAA;AAC1B,UAAI,cAAc,GAAG,IAArB;AACA,UAAI,eAAe,GAAG,EAAE,CAAC,IAAD,CAAxB;;AACA,UAAI,IAAI,KAAK,QAAb,EAAuB;AACrB,QAAA,cAAc,GAAG,UAAU,CAAC,qBAAX,CAAiC,cAAjC,EAAiD,MAAjD,CAAjB;;AACA,gBAAQ,eAAR;AACE,eAAKA,UAAL;AACE,YAAA,eAAe,GAAG,SAAS,CAAC,IAAD,CAA3B;AACA;;AAEF,eAAK,UAAL;AACE,YAAA,eAAe,GAAG,UAAU,CAAC,IAAD,CAA5B;AACA;;AAEF;AACE,YAAA,eAAe,GACX,UAAU,CAAC,mBAAX,CAA+B,IAA/B,EAAqC,cAArC,EAAqD,eAArD,EAAsE,MAAtE,CADJ;AAEA;AAZJ;AAcD;;AACD,MAAA,kBAAkB,CAAC,cAAD,CAAlB,GAAqC,eAArC;AACD,KArBD;;AAsBA,QAAI,CAAC,YAAL,EAAmB;AACjB,MAAA,mBAAmB,CAAC,IAApB,CAAyB,kBAAzB;AACD;;AACD,IAAA,gBAAgB,GAAG,kBAAnB;AACA,IAAA,cAAc,GAAG,MAAjB;AACD,GA/BD;;AAgCA,MAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,UAAM,UAAU,GAAG,OAAnB;AACA,UAAM,IAAI,KAAJ,CACF,iDAAiD,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,UAAZ,CAAuB,EADnF,CAAN;AAED;;AAED,SAAO,mBAAP;AACD;;AACD,SACgB,cADhB,CAEI,MAFJ,EAE6B,SAF7B,EAEgD,KAFhD,EAGI,QAHJ,EAGiC;AAC/B,UAAQ,SAAR;AACE,SAAK,OAAL;AACE,MAAA,MAAM,CAAC,OAAP,CAAe,MAAM,QAAQ,CAAC,KAAK,IAAI,kBAAkB,CAAC,KAAD,EAAQ,OAAR,EAAiB,MAAjB,CAA5B,CAA7B;AACA;;AACF,SAAK,MAAL;AACE,MAAA,MAAM,CAAC,MAAP,CAAc,MAAM,QAAQ,CAAC,KAAK,IAAI,kBAAkB,CAAC,KAAD,EAAQ,MAAR,EAAgB,MAAhB,CAA5B,CAA5B;AACA;;AACF,SAAK,SAAL;AACE,MAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,QAAQ,CAAC,KAAK,IAAI,kBAAkB,CAAC,KAAD,EAAQ,SAAR,EAAmB,MAAnB,CAA5B,CAA/B;AACA;AATJ;AAWD;;AACD,SACgB,kBADhB,CAEI,CAFJ,EAEuB,SAFvB,EAE0C,MAF1C,EAEiE;AAC/D,QAAM,SAAS,GAAG,MAAM,CAAC,SAAzB;AACA,QAAM,QAAQ,GAAI,MAAc,CAAC,QAAf,GAA0B,IAA1B,GAAiC,KAAnD;AACA,QAAM,KAAK,GAAG,kBAAkB,CAC5B,CAAC,CAAC,OAD0B,EACjB,CAAC,CAAC,WADe,EACF,CAAC,CAAC,SADA,EACW,CAAC,CAAC,OADb,EACsB,SAAS,IAAI,CAAC,CAAC,SADrC,EAE5B,SAAS,IAAI,SAAb,GAAyB,CAAC,CAAC,SAA3B,GAAuC,SAFX,EAEsB,QAFtB,CAAhC;AAGA,QAAM,IAAI,GAAI,CAAS,CAAC,OAAD,CAAvB;;AACA,MAAI,IAAI,IAAI,IAAZ,EAAkB;AACf,IAAA,KAAa,CAAC,OAAD,CAAb,GAAyB,IAAzB;AACF;;AACD,SAAO,KAAP;AACD;;AACD,SACgB,kBADhB,CAEI,OAFJ,EAEkB,WAFlB,EAEuC,SAFvC,EAE0D,OAF1D,EAE2E,SAAA,GAAoB,EAF/F,EAGI,SAAA,GAAoB,CAHxB,EAG2B,QAH3B,EAG6C;AAC3C,SAAO;AAAC,IAAA,OAAD;AAAU,IAAA,WAAV;AAAuB,IAAA,SAAvB;AAAkC,IAAA,OAAlC;AAA2C,IAAA,SAA3C;AAAsD,IAAA,SAAtD;AAAiE,IAAA,QAAQ,EAAE,CAAC,CAAC;AAA7E,GAAP;AACD;;AACD,SACgB,eADhB,CAEI,GAFJ,EAE6C,GAF7C,EAEuD,YAFvD,EAEwE;AACtE,MAAI,KAAJ;;AACA,MAAI,GAAG,YAAY,GAAnB,EAAwB;AACtB,IAAA,KAAK,GAAG,GAAG,CAAC,GAAJ,CAAQ,GAAR,CAAR;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,GAAG,CAAC,GAAJ,CAAQ,GAAR,EAAa,KAAK,GAAG,YAArB;AACD;AACF,GALD,MAKO;AACL,IAAA,KAAK,GAAG,GAAG,CAAC,GAAD,CAAX;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,KAAK,GAAG,GAAG,CAAC,GAAD,CAAH,GAAW,YAAnB;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AACD,SACgB,oBADhB,CACqC,OADrC,EACoD;AAClD,QAAM,YAAY,GAAG,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAArB;AACA,QAAM,EAAE,GAAG,OAAO,CAAC,SAAR,CAAkB,CAAlB,EAAqB,YAArB,CAAX;AACA,QAAM,MAAM,GAAG,OAAO,CAAC,MAAR,CAAe,YAAY,GAAG,CAA9B,CAAf;AACA,SAAO,CAAC,EAAD,EAAK,MAAL,CAAP;AACD;;AAED,IAAI,SAAS,GAAsC,CAAC,IAAD,EAAY,IAAZ,KAA0B,KAA7E;;AACA,MAAA,EAAA,GAAA,SAAA;;AAAA,IAAI,QAAQ,GAAgD,CAAC,OAAD,EAAe,QAAf,KACxD,KADJ;;AAEA,MAAA,EAAA,GAAA,QAAA;;AAAA,IAAI,MAAM,GACN,CAAC,OAAD,EAAe,QAAf,EAAiC,KAAjC,KAA+C;AAC7C,SAAO,EAAP;AACD,CAHL;;AAIA,MAAA,EAAA,GAAA,MAAA,C,CACA;AACA;;AACA,MAAM,OAAO,GAAG,MAAM,EAAtB;;AACA,IAAI,OAAO,IAAI,OAAO,OAAP,KAAmB,WAAlC,EAA+C;AAC/C;AACE,EAAA,SAAS,GAAG,CAAC,IAAD,EAAY,IAAZ,KAAqB;AAC/B,WAAO,IAAI,CAAC,QAAL,CAAc,IAAd,CAAP;AACD,GAFD;;AAIA,EAAA,QAAQ,GAAG,CAAC,MAAA;AACV,QAAI,OAAO,IAAI,OAAO,CAAC,SAAR,CAAkB,OAAjC,EAA0C;AACxC,aAAO,CAAC,OAAD,EAAe,QAAf,KAAoC,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAA3C;AACD,KAFD,MAEO;AACL,YAAM,KAAK,GAAG,OAAO,CAAC,SAAtB;AACA,YAAM,EAAE,GAAG,KAAK,CAAC,eAAN,IAAyB,KAAK,CAAC,kBAA/B,IAAqD,KAAK,CAAC,iBAA3D,IACP,KAAK,CAAC,gBADC,IACmB,KAAK,CAAC,qBADpC;;AAEA,UAAI,EAAJ,EAAQ;AACN,eAAO,CAAC,OAAD,EAAe,QAAf,KAAoC,EAAE,CAAC,KAAH,CAAS,OAAT,EAAkB,CAAC,QAAD,CAAlB,CAA3C;AACD,OAFD,MAEO;AACL,eAAO,QAAP;AACD;AACF;AACF,GAbU,GAAX;;AAeA,EAAA,MAAM,GAAG,CAAC,OAAD,EAAe,QAAf,EAAiC,KAAjC,KAA+C;AACtD,QAAI,OAAO,GAAU,EAArB;;AACA,QAAI,KAAJ,EAAW;AACT,MAAA,OAAO,CAAC,IAAR,CAAa,GAAG,OAAO,CAAC,gBAAR,CAAyB,QAAzB,CAAhB;AACD,KAFD,MAEO;AACL,YAAM,GAAG,GAAG,OAAO,CAAC,aAAR,CAAsB,QAAtB,CAAZ;;AACA,UAAI,GAAJ,EAAS;AACP,QAAA,OAAO,CAAC,IAAR,CAAa,GAAb;AACD;AACF;;AACD,WAAO,OAAP;AACD,GAXD;AAYD;;AAED,SAAS,oBAAT,CAA8B,IAA9B,EAA0C;AAAI;AACO;AAEnD,SAAO,IAAI,CAAC,SAAL,CAAe,CAAf,EAAkB,CAAlB,KAAwB,OAA/B,CAHwC,CAGD;AACxC;;AAED,IAAI,YAAY,GAAsB,IAAtC;AACA,IAAI,UAAU,GAAG,KAAjB;;AACA,SAAgB,qBAAhB,CAAsC,IAAtC,EAAkD;AAChD,MAAI,CAAC,YAAL,EAAmB;AACjB,IAAA,YAAY,GAAG,WAAW,MAAM,EAAhC;AACA,IAAA,UAAU,GAAG,YAAa,CAAC,KAAd,GAAuB,sBAAsB,YAAa,CAAC,KAA3D,GAAoE,KAAjF;AACD;;AAED,MAAI,MAAM,GAAG,IAAb;;AACA,MAAI,YAAa,CAAC,KAAd,IAAuB,CAAC,oBAAoB,CAAC,IAAD,CAAhD,EAAwD;AACtD,IAAA,MAAM,GAAG,IAAI,IAAI,YAAa,CAAC,KAA/B;;AACA,QAAI,CAAC,MAAD,IAAW,UAAf,EAA2B;AACzB,YAAM,SAAS,GAAG,WAAW,IAAI,CAAC,MAAL,CAAY,CAAZ,EAAe,WAAf,EAAX,GAA0C,IAAI,CAAC,MAAL,CAAY,CAAZ,CAA5D;AACA,MAAA,MAAM,GAAG,SAAS,IAAI,YAAa,CAAC,KAApC;AACD;AACF;;AAED,SAAO,MAAP;AACD;;AACD,SACgB,WADhB,GAC2B;AACzB,MAAI,OAAO,QAAP,IAAmB,WAAvB,EAAoC;AAClC,WAAO,QAAQ,CAAC,IAAhB;AACD;;AACD,SAAO,IAAP;AACD;;AACD,MACa,cAAc,GAAG,QAD9B;AAEA,MAAa,eAAe,GAAG,SAA/B;AACA,MAAa,WAAW,GAAG,MAA3B;;AACA,SACgB,mBADhB,CACoC,MADpC,EACgE;AAC9D,QAAM,MAAM,GAAyB,EAArC;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAA;AAC9B,UAAM,OAAO,GAAG,IAAI,CAAC,OAAL,CAAa,iBAAb,EAAgC,OAAhC,CAAhB;AACA,IAAA,MAAM,CAAC,OAAD,CAAN,GAAkB,MAAM,CAAC,IAAD,CAAxB;AACD,GAHD;AAIA,SAAO,MAAP;AACF;AChPA;;;;;;;;AAYA;;;;;AAGA,MACa,mBADb,CACgC;AAC9B,EAAA,qBAAqB,CAAC,IAAD,EAAa;AAChC,WAAO,qBAAqB,CAAC,IAAD,CAA5B;AACD;;AAED,EAAA,cAAc,CAAC,OAAD,EAAe,QAAf,EAA+B;AAC3C,WAAO,cAAc,CAAC,OAAD,EAAU,QAAV,CAArB;AACD;;AAED,EAAA,eAAe,CAAC,IAAD,EAAY,IAAZ,EAAqB;AAClC,WAAO,eAAe,CAAC,IAAD,EAAO,IAAP,CAAtB;AACD;;AAED,EAAA,KAAK,CAAC,OAAD,EAAe,QAAf,EAAiC,KAAjC,EAA+C;AAClD,WAAO,WAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAlB;AACD;;AAED,EAAA,YAAY,CAAC,OAAD,EAAe,IAAf,EAA6B,YAA7B,EAAkD;AAC5D,WAAO,YAAY,IAAI,EAAvB;AACD;;AAED,EAAA,OAAO,CACH,OADG,EACW,SADX,EACwD,QADxD,EAC0E,KAD1E,EAEH,MAFG,EAEa,eAAA,GAAyB,EAFtC,EAGH,uBAHG,EAG8B;AACnC,WAAO,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,KAAlC,CAAP;AACD;;AA1B6B;;oCAD/B,2B,CAAU,C,EAAA;AAAA,SAAA,KAAA,CAAA,IAAA,mBAAA,GAAA;AAAA,C;;;;;;;;;;;;AACT,C;AA6BF;;;;;AAGA,MAAsB,eAAtB,CAAqC;;AAC5B,eAAA,CAAA,IAAA,GAAwB,IAAI,mBAAJ,EAAxB;ACjDT;;;;;;;;AAYO,MAAM,UAAU,GAAG,IAAnB;AAEA,MAAM,uBAAuB,GAAG,IAAhC;AACA,MAAM,qBAAqB,GAAG,IAA9B;AACA,MAAM,eAAe,GAAG,UAAxB;AACA,MAAM,eAAe,GAAG,UAAxB;AACA,MAAM,cAAc,GAAG,WAAvB;AACA,MAAM,cAAc,GAAG,WAAvB;AACA,MAAM,oBAAoB,GAAG,YAA7B;AACA,MAAM,mBAAmB,GAAG,aAA5B;AACA,MAAM,sBAAsB,GAAG,cAA/B;AACA,MAAM,qBAAqB,GAAG,eAA9B;;AACP,SACgB,kBADhB,CACmC,KADnC,EACuD;AACrD,MAAI,OAAO,KAAP,IAAgB,QAApB,EAA8B,OAAO,KAAP;AAE9B,QAAM,OAAO,GAAG,KAAK,CAAC,KAAN,CAAY,mBAAZ,CAAhB;AACA,MAAI,CAAC,OAAD,IAAY,OAAO,CAAC,MAAR,GAAiB,CAAjC,EAAoC,OAAO,CAAP;AAEpC,SAAO,qBAAqB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAD,CAAR,CAAX,EAAyB,OAAO,CAAC,CAAD,CAAhC,CAA5B;AACD;;AAED,SAAS,qBAAT,CAA+B,KAA/B,EAA8C,IAA9C,EAA0D;AACxD,UAAQ,IAAR;AACE,SAAK,GAAL;AACE,aAAO,KAAK,GAAG,UAAf;;AACF;AAAA;AACE,aAAO,KAAP;AAJJ;AAMD;;AACD,SACgB,aADhB,CAEI,OAFJ,EAE2C,MAF3C,EAE0D,mBAF1D,EAEuF;AACrF,SAAO,OAAO,CAAC,cAAR,CAAuB,UAAvB,IACa,OADb,GAEH,mBAAmB,CAAgB,OAAhB,EAAyB,MAAzB,EAAiC,mBAAjC,CAFvB;AAGD;;AAED,SAAS,mBAAT,CACI,GADJ,EACwB,MADxB,EAC0C,mBAD1C,EACuE;AACrE,QAAM,KAAK,GAAG,0EAAd;AACA,MAAI,QAAJ;AACA,MAAI,KAAK,GAAW,CAApB;AACA,MAAI,MAAM,GAAW,EAArB;;AACA,MAAI,OAAO,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,OAAO,GAAG,GAAG,CAAC,KAAJ,CAAU,KAAV,CAAhB;;AACA,QAAI,OAAO,KAAK,IAAhB,EAAsB;AACpB,MAAA,MAAM,CAAC,IAAP,CAAY,8BAA8B,GAAG,eAA7C;AACA,aAAO;AAAC,QAAA,QAAQ,EAAE,CAAX;AAAc,QAAA,KAAK,EAAE,CAArB;AAAwB,QAAA,MAAM,EAAE;AAAhC,OAAP;AACD;;AAED,IAAA,QAAQ,GAAG,qBAAqB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAD,CAAR,CAAX,EAAyB,OAAO,CAAC,CAAD,CAAhC,CAAhC;AAEA,UAAM,UAAU,GAAG,OAAO,CAAC,CAAD,CAA1B;;AACA,QAAI,UAAU,IAAI,IAAlB,EAAwB;AACtB,MAAA,KAAK,GAAG,qBAAqB,CAAC,UAAU,CAAC,UAAD,CAAX,EAAyB,OAAO,CAAC,CAAD,CAAhC,CAA7B;AACD;;AAED,UAAM,SAAS,GAAG,OAAO,CAAC,CAAD,CAAzB;;AACA,QAAI,SAAJ,EAAe;AACb,MAAA,MAAM,GAAG,SAAT;AACD;AACF,GAlBD,MAkBO;AACL,IAAA,QAAQ,GAAG,GAAX;AACD;;AAED,MAAI,CAAC,mBAAL,EAA0B;AACxB,QAAI,cAAc,GAAG,KAArB;AACA,QAAI,UAAU,GAAG,MAAM,CAAC,MAAxB;;AACA,QAAI,QAAQ,GAAG,CAAf,EAAkB;AAChB,MAAA,MAAM,CAAC,IAAP,CAAY,kEAAZ;AACA,MAAA,cAAc,GAAG,IAAjB;AACD;;AACD,QAAI,KAAK,GAAG,CAAZ,EAAe;AACb,MAAA,MAAM,CAAC,IAAP,CAAY,+DAAZ;AACA,MAAA,cAAc,GAAG,IAAjB;AACD;;AACD,QAAI,cAAJ,EAAoB;AAClB,MAAA,MAAM,CAAC,MAAP,CAAc,UAAd,EAA0B,CAA1B,EAA6B,8BAA8B,GAAG,eAA9D;AACD;AACF;;AAED,SAAO;AAAC,IAAA,QAAD;AAAW,IAAA,KAAX;AAAkB,IAAA;AAAlB,GAAP;AACD;;AACD,SACgB,OADhB,CAEI,GAFJ,EAE+B,WAAA,GAAoC,EAFnE,EAEqE;AACnE,EAAA,MAAM,CAAC,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAAyB,IAAI,IAAA;AAC3B,IAAA,WAAW,CAAC,IAAD,CAAX,GAAoB,GAAG,CAAC,IAAD,CAAvB;AACD,GAFD;AAGA,SAAO,WAAP;AACD;;AACD,SACgB,eADhB,CACgC,MADhC,EAC+D;AAC7D,QAAM,gBAAgB,GAAe,EAArC;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,MAAd,CAAJ,EAA2B;AACzB,IAAA,MAAM,CAAC,OAAP,CAAe,IAAI,IAAI,UAAU,CAAC,IAAD,EAAO,KAAP,EAAc,gBAAd,CAAjC;AACD,GAFD,MAEO;AACL,IAAA,UAAU,CAAC,MAAD,EAAS,KAAT,EAAgB,gBAAhB,CAAV;AACD;;AACD,SAAO,gBAAP;AACD;;AACD,SACgB,UADhB,CAEI,MAFJ,EAEwB,aAFxB,EAEgD,WAAA,GAA0B,EAF1E,EAE4E;AAC1E,MAAI,aAAJ,EAAmB;AACrB;AACI;AACI;AACJ,SAAK,IAAI,IAAT,IAAiB,MAAjB,EAAyB;AACvB,MAAA,WAAW,CAAC,IAAD,CAAX,GAAoB,MAAM,CAAC,IAAD,CAA1B;AACD;AACF,GAPD,MAOO;AACL,IAAA,OAAO,CAAC,MAAD,EAAS,WAAT,CAAP;AACD;;AACD,SAAO,WAAP;AACD;;AAED,SAAS,uBAAT,CAAiC,OAAjC,EAA+C,GAA/C,EAA4D,KAA5D,EAAyE;AACzE;AACE;AACA,MAAI,KAAJ,EAAW;AACT,WAAO,GAAG,GAAG,GAAN,GAAY,KAAZ,GAAoB,GAA3B;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF;;AAED,SAAS,mBAAT,CAA6B,OAA7B,EAAyC;AACzC;AACE;AACE;AACE;AACJ,MAAI,cAAc,GAAG,EAArB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,KAAR,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,UAAM,GAAG,GAAG,OAAO,CAAC,KAAR,CAAc,IAAd,CAAmB,CAAnB,CAAZ;AACA,IAAA,cAAc,IAAI,uBAAuB,CAAC,OAAD,EAAU,GAAV,EAAe,OAAO,CAAC,KAAR,CAAc,gBAAd,CAA+B,GAA/B,CAAf,CAAzC;AACD;;AACD,OAAK,MAAM,GAAX,IAAkB,OAAO,CAAC,KAA1B,EAAiC;AACnC;AACI,QAAI,CAAC,OAAO,CAAC,KAAR,CAAc,cAAd,CAA6B,GAA7B,CAAD,IAAsC,GAAG,CAAC,UAAJ,CAAe,GAAf,CAA1C,EAA+D;AAC7D;AACD;;AACD,UAAM,OAAO,GAAG,mBAAmB,CAAC,GAAD,CAAnC;AACA,IAAA,cAAc,IAAI,uBAAuB,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAO,CAAC,KAAR,CAAc,GAAd,CAAnB,CAAzC;AACD;;AACD,EAAA,OAAO,CAAC,YAAR,CAAqB,OAArB,EAA8B,cAA9B;AACD;;AACD,SACgB,SADhB,CAC0B,OAD1B,EACwC,MADxC,EAC4D,YAD5D,EAC+F;AAC7F,MAAI,OAAO,CAAC,OAAD,CAAX,EAAsB;AACpB,IAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAA;AAC9B,YAAM,SAAS,GAAG,mBAAmB,CAAC,IAAD,CAArC;;AACA,UAAI,YAAY,IAAI,CAAC,YAAY,CAAC,cAAb,CAA4B,IAA5B,CAArB,EAAwD;AACtD,QAAA,YAAY,CAAC,IAAD,CAAZ,GAAqB,OAAO,CAAC,KAAR,CAAc,SAAd,CAArB;AACD;;AACD,MAAA,OAAO,CAAC,KAAR,CAAc,SAAd,IAA2B,MAAM,CAAC,IAAD,CAAjC;AACD,KAND,EADoB,CAQxB;;AACI,QAAI,MAAM,EAAV,EAAc;AACZ,MAAA,mBAAmB,CAAC,OAAD,CAAnB;AACD;AACF;AACF;;AACD,SACgB,WADhB,CAC4B,OAD5B,EAC0C,MAD1C,EAC4D;AAC1D,MAAI,OAAO,CAAC,OAAD,CAAX,EAAsB;AACpB,IAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAA;AAC9B,YAAM,SAAS,GAAG,mBAAmB,CAAC,IAAD,CAArC;AACA,MAAA,OAAO,CAAC,KAAR,CAAc,SAAd,IAA2B,EAA3B;AACD,KAHD,EADoB,CAKxB;;AACI,QAAI,MAAM,EAAV,EAAc;AACZ,MAAA,mBAAmB,CAAC,OAAD,CAAnB;AACD;AACF;AACF;;AACD,SACgB,uBADhB,CACwC,KADxC,EAE2D;AACzD,MAAI,KAAK,CAAC,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,QAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB,OAAO,KAAK,CAAC,CAAD,CAAZ;AACvB,WAAO,QAAQ,CAAC,KAAD,CAAf;AACD;;AACD,SAAO,KAAP;AACD;;AACD,SACgB,mBADhB,CAEI,KAFJ,EAE0B,OAF1B,EAEqD,MAFrD,EAEkE;AAChE,QAAM,MAAM,GAAG,OAAO,CAAC,MAAR,IAAkB,EAAjC;AACA,QAAM,OAAO,GAAG,kBAAkB,CAAC,KAAD,CAAlC;;AACA,MAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,IAAA,OAAO,CAAC,OAAR,CAAgB,OAAO,IAAA;AACrB,UAAI,CAAC,MAAM,CAAC,cAAP,CAAsB,OAAtB,CAAL,EAAqC;AACnC,QAAA,MAAM,CAAC,IAAP,CACI,+CAA+C,OAAO,8BAD1D;AAED;AACF,KALD;AAMD;AACF;;AAED,MAAM,WAAW,GACb,IAAI,MAAJ,CAAW,GAAG,uBAAuB,gBAAgB,qBAAqB,EAA1E,EAA8E,GAA9E,CADJ;;AAEA,SAAgB,kBAAhB,CAAmC,KAAnC,EAAuD;AACrD,MAAI,MAAM,GAAa,EAAvB;;AACA,MAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAI,KAAJ;;AACA,WAAO,KAAK,GAAG,WAAW,CAAC,IAAZ,CAAiB,KAAjB,CAAf,EAAwC;AACtC,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,CAAC,CAAD,CAAjB;AACD;;AACD,IAAA,WAAW,CAAC,SAAZ,GAAwB,CAAxB;AACD;;AACD,SAAO,MAAP;AACD;;AACD,SACgB,iBADhB,CAEI,KAFJ,EAE0B,MAF1B,EAEyD,MAFzD,EAEsE;AACpE,QAAM,QAAQ,GAAG,KAAK,CAAC,QAAN,EAAjB;AACA,QAAM,GAAG,GAAG,QAAQ,CAAC,OAAT,CAAiB,WAAjB,EAA8B,CAAC,CAAD,EAAI,OAAJ,KAAW;AACnD,QAAI,QAAQ,GAAG,MAAM,CAAC,OAAD,CAArB,CADmD,CAEvD;;AACI,QAAI,CAAC,MAAM,CAAC,cAAP,CAAsB,OAAtB,CAAL,EAAqC;AACnC,MAAA,MAAM,CAAC,IAAP,CAAY,kDAAkD,OAAO,EAArE;AACA,MAAA,QAAQ,GAAG,EAAX;AACD;;AACD,WAAO,QAAQ,CAAC,QAAT,EAAP;AACD,GARW,CAAZ,CAFoE,CAWtE;;AAEE,SAAO,GAAG,IAAI,QAAP,GAAkB,KAAlB,GAA0B,GAAjC;AACD;;AACD,SACgB,eADhB,CACgC,QADhC,EAC6C;AAC3C,QAAM,GAAG,GAAU,EAAnB;AACA,MAAI,IAAI,GAAG,QAAQ,CAAC,IAAT,EAAX;;AACA,SAAO,CAAC,IAAI,CAAC,IAAb,EAAmB;AACjB,IAAA,GAAG,CAAC,IAAJ,CAAS,IAAI,CAAC,KAAd;AACA,IAAA,IAAI,GAAG,QAAQ,CAAC,IAAT,EAAP;AACD;;AACD,SAAO,GAAP;AACD;;AACD,SACgB,qBADhB,CAEI,MAFJ,EAE8B,WAF9B,EAE2D;AACzD,MAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,UAAM,EAAE,GAAG,MAAM,CAAC,MAAlB;;AACA,QAAI,CAAC,WAAW,CAAC,MAAjB,EAAyB;AACvB,MAAA,WAAW,CAAC,MAAZ,GAAqB,EAArB;AACD;;AACD,UAAM,EAAE,GAAG,WAAW,CAAC,MAAvB;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAwB,KAAK,IAAA;AAC3B,UAAI,CAAC,EAAE,CAAC,cAAH,CAAkB,KAAlB,CAAL,EAA+B;AAC7B,QAAA,EAAE,CAAC,KAAD,CAAF,GAAY,EAAE,CAAC,KAAD,CAAd;AACD;AACF,KAJD;AAKD;;AACD,SAAO,WAAP;AACD;;AAED,MAAM,gBAAgB,GAAG,eAAzB;;AACA,SAAgB,mBAAhB,CAAoC,KAApC,EAAiD;AAC/C,SAAO,KAAK,CAAC,OAAN,CAAc,gBAAd,EAAgC,CAAC,GAAG,CAAJ,KAAiB,CAAC,CAAC,CAAD,CAAD,CAAK,WAAL,EAAjD,CAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,KAA7B,EAA0C;AACxC,SAAO,KAAK,CAAC,OAAN,CAAc,iBAAd,EAAiC,OAAjC,EAA0C,WAA1C,EAAP;AACD;;AACD,SACgB,8BADhB,CAC+C,QAD/C,EACiE,KADjE,EAC8E;AAC5E,SAAO,QAAQ,KAAK,CAAb,IAAkB,KAAK,KAAK,CAAnC;AACD;;AACD,SACgB,kCADhB,CAEI,OAFJ,EAEkB,SAFlB,EAEqD,cAFrD,EAEyF;AACvF,QAAM,kBAAkB,GAAG,MAAM,CAAC,IAAP,CAAY,cAAZ,CAA3B;;AACA,MAAI,kBAAkB,CAAC,MAAnB,IAA6B,SAAS,CAAC,MAA3C,EAAmD;AACjD,QAAI,gBAAgB,GAAG,SAAS,CAAC,CAAD,CAAhC;AACA,QAAI,iBAAiB,GAAa,EAAlC;AACA,IAAA,kBAAkB,CAAC,OAAnB,CAA2B,IAAI,IAAA;AAC7B,UAAI,CAAC,gBAAgB,CAAC,cAAjB,CAAgC,IAAhC,CAAL,EAA4C;AAC1C,QAAA,iBAAiB,CAAC,IAAlB,CAAuB,IAAvB;AACD;;AACD,MAAA,gBAAgB,CAAC,IAAD,CAAhB,GAAyB,cAAc,CAAC,IAAD,CAAvC;AACD,KALD;;AAOA,QAAI,iBAAiB,CAAC,MAAtB,EAA8B;AAClC;AACM,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAA2C;AACzC,YAAI,EAAE,GAAG,SAAS,CAAC,CAAD,CAAlB;AACA,QAAA,iBAAiB,CAAC,OAAlB,CAA0B,UAAS,IAAT,EAAa;AACrC,UAAA,EAAE,CAAC,IAAD,CAAF,GAAW,YAAY,CAAC,OAAD,EAAU,IAAV,CAAvB;AACD,SAFD;AAGD;AACF;AACF;;AACD,SAAO,SAAP;AACD;;AACD,SAKgB,YALhB,CAK6B,OAL7B,EAK2C,IAL3C,EAKsD,OALtD,EAKkE;AAChE,UAAQ,IAAI,CAAC,IAAb;AACE,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,YAAR,CAAqB,IAArB,EAA2B,OAA3B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB,OAAzB,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,eAAR,CAAwB,IAAxB,EAA8B,OAA9B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,aAAR,CAAsB,IAAtB,EAA4B,OAA5B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB,OAAzB,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,YAAR,CAAqB,IAArB,EAA2B,OAA3B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,cAAR,CAAuB,IAAvB,EAA6B,OAA7B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB,OAAzB,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,cAAR,CAAuB,IAAvB,EAA6B,OAA7B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,iBAAR,CAA0B,IAA1B,EAAgC,OAAhC,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,eAAR,CAAwB,IAAxB,EAA8B,OAA9B,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,UAAR,CAAmB,IAAnB,EAAyB,OAAzB,CAAP;;AACF,SAAA;AAAA;AAAA;AACE,aAAO,OAAO,CAAC,YAAR,CAAqB,IAArB,EAA2B,OAA3B,CAAP;;AACF;AACE,YAAM,IAAI,KAAJ,CAAU,8CAA8C,IAAI,CAAC,IAAI,EAAjE,CAAN;AA5BJ;AA8BD;;AACD,SACgB,YADhB,CAC6B,OAD7B,EAC2C,IAD3C,EACuD;AACrD,SAAa,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAkC,IAAlC,CAAb;AACF;AC7VA;;;;;;;;;AAOO,MAAM,SAAS,GAAG,GAAlB;;AACP,SAGgB,mBAHhB,CAII,eAJJ,EAIiD,MAJjD,EAIiE;AAC/D,QAAM,WAAW,GAA0B,EAA3C;;AACA,MAAI,OAAO,eAAP,IAA0B,QAA9B,EAAwC;AACtC,IAAA,eAAe,CAAC,KAAhB,CAAsB,SAAtB,EAAiC,OAAjC,CACI,GAAG,IAAI,uBAAuB,CAAC,GAAD,EAAM,WAAN,EAAmB,MAAnB,CADlC;AAED,GAHD,MAGO;AACL,IAAA,WAAW,CAAC,IAAZ,CAAsC,eAAtC;AACD;;AACD,SAAO,WAAP;AACD;;AAED,SAAS,uBAAT,CACI,QADJ,EACsB,WADtB,EAC0D,MAD1D,EAC0E;AACxE,MAAI,QAAQ,CAAC,CAAD,CAAR,IAAe,GAAnB,EAAwB;AACtB,UAAM,MAAM,GAAG,mBAAmB,CAAC,QAAD,EAAW,MAAX,CAAlC;;AACA,QAAI,OAAO,MAAP,IAAiB,UAArB,EAAiC;AAC/B,MAAA,WAAW,CAAC,IAAZ,CAAiB,MAAjB;AACA;AACD;;AACD,IAAA,QAAQ,GAAG,MAAX;AACD;;AAED,QAAM,KAAK,GAAG,QAAQ,CAAC,KAAT,CAAe,yCAAf,CAAd;;AACA,MAAI,KAAK,IAAI,IAAT,IAAiB,KAAK,CAAC,MAAN,GAAe,CAApC,EAAuC;AACrC,IAAA,MAAM,CAAC,IAAP,CAAY,uCAAuC,QAAQ,oBAA3D;AACA,WAAO,WAAP;AACD;;AAED,QAAM,SAAS,GAAG,KAAK,CAAC,CAAD,CAAvB;AACA,QAAM,SAAS,GAAG,KAAK,CAAC,CAAD,CAAvB;AACA,QAAM,OAAO,GAAG,KAAK,CAAC,CAAD,CAArB;AACA,EAAA,WAAW,CAAC,IAAZ,CAAiB,oBAAoB,CAAC,SAAD,EAAY,OAAZ,CAArC;AAEA,QAAM,kBAAkB,GAAG,SAAS,IAAI,SAAb,IAA0B,OAAO,IAAI,SAAhE;;AACA,MAAI,SAAS,CAAC,CAAD,CAAT,IAAgB,GAAhB,IAAuB,CAAC,kBAA5B,EAAgD;AAC9C,IAAA,WAAW,CAAC,IAAZ,CAAiB,oBAAoB,CAAC,OAAD,EAAU,SAAV,CAArC;AACD;AACF;;AAED,SAAS,mBAAT,CAA6B,KAA7B,EAA4C,MAA5C,EAA4D;AAC1D,UAAQ,KAAR;AACE,SAAK,QAAL;AACE,aAAO,WAAP;;AACF,SAAK,QAAL;AACE,aAAO,WAAP;;AACF,SAAK,YAAL;AACE,aAAO,CAAC,SAAD,EAAiB,OAAjB,KAA2C,UAAU,CAAC,OAAD,CAAV,GAAsB,UAAU,CAAC,SAAD,CAAlF;;AACF,SAAK,YAAL;AACE,aAAO,CAAC,SAAD,EAAiB,OAAjB,KAA2C,UAAU,CAAC,OAAD,CAAV,GAAsB,UAAU,CAAC,SAAD,CAAlF;;AACF;AACE,MAAA,MAAM,CAAC,IAAP,CAAY,+BAA+B,KAAK,oBAAhD;AACA,aAAO,QAAP;AAXJ;AAaD,C,CAED;AACA;AACA;AACA;;;AACA,MAAM,mBAAmB,GAAG,IAAI,GAAJ,CAAgB,CAAC,MAAD,EAAS,GAAT,CAAhB,CAA5B;AACA,MAAM,oBAAoB,GAAG,IAAI,GAAJ,CAAgB,CAAC,OAAD,EAAU,GAAV,CAAhB,CAA7B;;AAEA,SAAS,oBAAT,CAA8B,GAA9B,EAA2C,GAA3C,EAAsD;AACpD,QAAM,iBAAiB,GAAG,mBAAmB,CAAC,GAApB,CAAwB,GAAxB,KAAgC,oBAAoB,CAAC,GAArB,CAAyB,GAAzB,CAA1D;AACA,QAAM,iBAAiB,GAAG,mBAAmB,CAAC,GAApB,CAAwB,GAAxB,KAAgC,oBAAoB,CAAC,GAArB,CAAyB,GAAzB,CAA1D;AAEA,SAAO,CAAC,SAAD,EAAiB,OAAjB,KAA6B;AAClC,QAAI,QAAQ,GAAG,GAAG,IAAI,SAAP,IAAoB,GAAG,IAAI,SAA1C;AACA,QAAI,QAAQ,GAAG,GAAG,IAAI,SAAP,IAAoB,GAAG,IAAI,OAA1C;;AAEA,QAAI,CAAC,QAAD,IAAa,iBAAb,IAAkC,OAAO,SAAP,KAAqB,SAA3D,EAAsE;AACpE,MAAA,QAAQ,GAAG,SAAS,GAAG,mBAAmB,CAAC,GAApB,CAAwB,GAAxB,CAAH,GAAkC,oBAAoB,CAAC,GAArB,CAAyB,GAAzB,CAAtD;AACD;;AACD,QAAI,CAAC,QAAD,IAAa,iBAAb,IAAkC,OAAO,OAAP,KAAmB,SAAzD,EAAoE;AAClE,MAAA,QAAQ,GAAG,OAAO,GAAG,mBAAmB,CAAC,GAApB,CAAwB,GAAxB,CAAH,GAAkC,oBAAoB,CAAC,GAArB,CAAyB,GAAzB,CAApD;AACD;;AAED,WAAO,QAAQ,IAAI,QAAnB;AACD,GAZD;AAaF;AC3FA;;;;;;;;;AAiBA,MAAM,UAAU,GAAG,OAAnB;AACA,MAAM,gBAAgB,GAAG,IAAI,MAAJ,CAAW,MAAM,UAAU,OAA3B,EAAoC,GAApC,CAAzB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,SAAgB,iBAAhB,CACI,MADJ,EAC6B,QAD7B,EAEI,MAFJ,EAEiB;AACf,SAAO,IAAI,0BAAJ,CAA+B,MAA/B,EAAuC,KAAvC,CAA6C,QAA7C,EAAuD,MAAvD,CAAP;AACD;;AAED,MAAM,aAAa,GAAG,EAAtB;;AACA,MACa,0BADb,CACuC;AACrC,EAAA,WAAA,CAAoB,OAApB,EAA4C;AAAxB,SAAA,OAAA,GAAA,OAAA;AAA4B;;AAEhD,EAAA,KAAK,CAAC,QAAD,EAAkD,MAAlD,EAA+D;AAElE,UAAM,OAAO,GAAG,IAAI,0BAAJ,CAA+B,MAA/B,CAAhB;;AACA,SAAK,6BAAL,CAAmC,OAAnC;;AACA,WAAmC,YAAY,CAC3C,IAD2C,EACrC,uBAAuB,CAAC,QAAD,CADc,EACF,OADE,CAA/C;AAED;;AAEO,EAAA,6BAA6B,CAAC,OAAD,EAAoC;AACvE,IAAA,OAAO,CAAC,oBAAR,GAA+B,aAA/B;AACA,IAAA,OAAO,CAAC,eAAR,GAA0B,EAA1B;AACA,IAAA,OAAO,CAAC,eAAR,CAAwB,aAAxB,IAAyC,EAAzC;AACA,IAAA,OAAO,CAAC,WAAR,GAAsB,CAAtB;AACD;;AAED,EAAA,YAAY,CAAC,QAAD,EAAqC,OAArC,EAAwE;AAElF,QAAI,UAAU,GAAG,OAAO,CAAC,UAAR,GAAqB,CAAtC;AACA,QAAI,QAAQ,GAAG,OAAO,CAAC,QAAR,GAAmB,CAAlC;AACA,UAAM,MAAM,GAAe,EAA3B;AACA,UAAM,WAAW,GAAoB,EAArC;;AACA,QAAI,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAqB,CAArB,KAA2B,GAA/B,EAAoC;AAClC,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CACI,wFADJ;AAED;;AAED,IAAA,QAAQ,CAAC,WAAT,CAAqB,OAArB,CAA6B,GAAG,IAAA;AAC9B,WAAK,6BAAL,CAAmC,OAAnC;;AACA,UAAI,GAAG,CAAC,IAAJ,IAAQ;AAAA;AAAZ,QAA6C;AAC3C,gBAAM,QAAQ,GAAG,GAAjB;AACA,gBAAM,IAAI,GAAG,QAAQ,CAAC,IAAtB;AACA,UAAA,IAAI,CAAC,QAAL,GAAgB,KAAhB,CAAsB,SAAtB,EAAiC,OAAjC,CAAyC,CAAC,IAAA;AACxC,YAAA,QAAQ,CAAC,IAAT,GAAgB,CAAhB;AACA,YAAA,MAAM,CAAC,IAAP,CAAY,KAAK,UAAL,CAAgB,QAAhB,EAA0B,OAA1B,CAAZ;AACD,WAHD;AAIA,UAAA,QAAQ,CAAC,IAAT,GAAgB,IAAhB;AACD,SARD,MAQO,IAAI,GAAG,CAAC,IAAJ,IAAQ;AAAA;AAAZ,QAAkD;AACvD,gBAAM,UAAU,GAAG,KAAK,eAAL,CAAqB,GAArB,EAAyD,OAAzD,CAAnB;AACA,UAAA,UAAU,IAAI,UAAU,CAAC,UAAzB;AACA,UAAA,QAAQ,IAAI,UAAU,CAAC,QAAvB;AACA,UAAA,WAAW,CAAC,IAAZ,CAAiB,UAAjB;AACD,SALM,MAKA;AACL,QAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CACI,yEADJ;AAED;AACF,KAnBD;AAqBA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,IAAI,EAAE,QAAQ,CAAC,IAFV;AAGL,MAAA,MAHK;AAIL,MAAA,WAJK;AAKL,MAAA,UALK;AAML,MAAA,QANK;AAOL,MAAA,OAAO,EAAE;AAPJ,KAAP;AASD;;AAED,EAAA,UAAU,CAAC,QAAD,EAAmC,OAAnC,EAAsE;AAC9E,UAAM,QAAQ,GAAG,KAAK,UAAL,CAAgB,QAAQ,CAAC,MAAzB,EAAiC,OAAjC,CAAjB;AACA,UAAM,SAAS,GAAI,QAAQ,CAAC,OAAT,IAAoB,QAAQ,CAAC,OAAT,CAAiB,MAAtC,IAAiD,IAAnE;;AACA,QAAI,QAAQ,CAAC,qBAAb,EAAoC;AAClC,YAAM,WAAW,GAAG,IAAI,GAAJ,EAApB;AACA,YAAM,MAAM,GAAG,SAAS,IAAI,EAA5B;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAhB,CAAwB,KAAK,IAAA;AAC3B,YAAI,QAAQ,CAAC,KAAD,CAAZ,EAAqB;AACnB,gBAAM,SAAS,GAAG,KAAlB;AACA,UAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,IAAI,IAAA;AACjC,YAAA,kBAAkB,CAAC,SAAS,CAAC,IAAD,CAAV,CAAlB,CAAoC,OAApC,CAA4C,GAAG,IAAA;AAC7C,kBAAI,CAAC,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAL,EAAiC;AAC/B,gBAAA,WAAW,CAAC,GAAZ,CAAgB,GAAhB;AACD;AACF,aAJD;AAKD,WAND;AAOD;AACF,OAXD;;AAYA,UAAI,WAAW,CAAC,IAAhB,EAAsB;AACpB,cAAM,cAAc,GAAG,eAAe,CAAC,WAAW,CAAC,MAAZ,EAAD,CAAtC;AACA,QAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,UAChB,QAAQ,CACH,IAAI,iFACT,cAAc,CAAC,IAAf,CAAoB,IAApB,CAAyB,EAH7B;AAID;AACF;;AAED,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,IAAI,EAAE,QAAQ,CAAC,IAFV;AAGL,MAAA,KAAK,EAAE,QAHF;AAIL,MAAA,OAAO,EAAE,SAAS,GAAG;AAAC,QAAA,MAAM,EAAE;AAAT,OAAH,GAAyB;AAJtC,KAAP;AAMD;;AAED,EAAA,eAAe,CAAC,QAAD,EAAwC,OAAxC,EAA2E;AAExF,IAAA,OAAO,CAAC,UAAR,GAAqB,CAArB;AACA,IAAA,OAAO,CAAC,QAAR,GAAmB,CAAnB;AACA,UAAM,SAAS,GAAG,YAAY,CAAC,IAAD,EAAO,uBAAuB,CAAC,QAAQ,CAAC,SAAV,CAA9B,EAAoD,OAApD,CAA9B;AACA,UAAM,QAAQ,GAAG,mBAAmB,CAAC,QAAQ,CAAC,IAAV,EAAgB,OAAO,CAAC,MAAxB,CAApC;AAEA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,QAFK;AAGL,MAAA,SAHK;AAIL,MAAA,UAAU,EAAE,OAAO,CAAC,UAJf;AAKL,MAAA,QAAQ,EAAE,OAAO,CAAC,QALb;AAML,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAN7B,KAAP;AAQD;;AAED,EAAA,aAAa,CAAC,QAAD,EAAsC,OAAtC,EAAyE;AAEpF,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,KAAK,EAAE,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,CAAC,IAAI,YAAY,CAAC,IAAD,EAAO,CAAP,EAAU,OAAV,CAApC,CAFF;AAGL,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAH7B,KAAP;AAKD;;AAED,EAAA,UAAU,CAAC,QAAD,EAAmC,OAAnC,EAAsE;AAC9E,UAAM,WAAW,GAAG,OAAO,CAAC,WAA5B;AACA,QAAI,YAAY,GAAG,CAAnB;AACA,UAAM,KAAK,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,IAAI,IAAA;AACnC,MAAA,OAAO,CAAC,WAAR,GAAsB,WAAtB;AACA,YAAM,QAAQ,GAAG,YAAY,CAAC,IAAD,EAAO,IAAP,EAAa,OAAb,CAA7B;AACA,MAAA,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,YAAT,EAAuB,OAAO,CAAC,WAA/B,CAAf;AACA,aAAO,QAAP;AACD,KALa,CAAd;AAOA,IAAA,OAAO,CAAC,WAAR,GAAsB,YAAtB;AACA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,KAFK;AAGL,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAH7B,KAAP;AAKD;;AAED,EAAA,YAAY,CAAC,QAAD,EAAqC,OAArC,EAAwE;AAElF,UAAM,SAAS,GAAG,kBAAkB,CAAC,QAAQ,CAAC,OAAV,EAAmB,OAAO,CAAC,MAA3B,CAApC;AACA,IAAA,OAAO,CAAC,qBAAR,GAAgC,SAAhC;AAEA,QAAI,QAAJ;AACA,QAAI,aAAa,GAAsB,QAAQ,CAAC,MAAT,GAAkB,QAAQ,CAAC,MAA3B,GAAoC,KAAK,CAAC,EAAD,CAAhF;;AACA,QAAI,aAAa,CAAC,IAAd,IAAkB;AAAA;AAAtB,MAA2D;AACzD,QAAA,QAAQ,GAAG,KAAK,cAAL,CAAoB,aAApB,EAAyE,OAAzE,CAAX;AACD,OAFD,MAEO;AACL,UAAI,aAAa,GAAG,QAAQ,CAAC,MAA7B;AACA,UAAI,OAAO,GAAG,KAAd;;AACA,UAAI,CAAC,aAAL,EAAoB;AAClB,QAAA,OAAO,GAAG,IAAV;AACA,cAAM,YAAY,GAAoC,EAAtD;;AACA,YAAI,SAAS,CAAC,MAAd,EAAsB;AACpB,UAAA,YAAY,CAAC,QAAD,CAAZ,GAAyB,SAAS,CAAC,MAAnC;AACD;;AACD,QAAA,aAAa,GAAG,KAAK,CAAC,YAAD,CAArB;AACD;;AACD,MAAA,OAAO,CAAC,WAAR,IAAuB,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,KAAtD;;AACA,YAAM,SAAS,GAAG,KAAK,UAAL,CAAgB,aAAhB,EAA+B,OAA/B,CAAlB;;AACA,MAAA,SAAS,CAAC,WAAV,GAAwB,OAAxB;AACA,MAAA,QAAQ,GAAG,SAAX;AACD;;AAED,IAAA,OAAO,CAAC,qBAAR,GAAgC,IAAhC;AACA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,OAAO,EAAE,SAFJ;AAGL,MAAA,KAAK,EAAE,QAHF;AAIL,MAAA,OAAO,EAAE;AAJJ,KAAP;AAMD;;AAED,EAAA,UAAU,CAAC,QAAD,EAAmC,OAAnC,EAAsE;AAC9E,UAAM,GAAG,GAAG,KAAK,aAAL,CAAmB,QAAnB,EAA6B,OAA7B,CAAZ;;AACA,SAAK,iBAAL,CAAuB,GAAvB,EAA4B,OAA5B;;AACA,WAAO,GAAP;AACD;;AAEO,EAAA,aAAa,CAAC,QAAD,EAAmC,OAAnC,EAAsE;AAEzF,UAAM,MAAM,GAA0B,EAAtC;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,QAAQ,CAAC,MAAvB,CAAJ,EAAoC;AACjC,MAAA,QAAQ,CAAC,MAAT,CAA4C,OAA5C,CAAoD,UAAU,IAAA;AAC7D,YAAI,OAAO,UAAP,IAAqB,QAAzB,EAAmC;AACjC,cAAI,UAAU,IAAI,UAAlB,EAA8B;AAC5B,YAAA,MAAM,CAAC,IAAP,CAAY,UAAZ;AACD,WAFD,MAEO;AACL,YAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,mCAAmC,UAAU,kBAAjE;AACD;AACF,SAND,MAMO;AACL,UAAA,MAAM,CAAC,IAAP,CAAY,UAAZ;AACD;AACF,OAVA;AAWF,KAZD,MAYO;AACL,MAAA,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,MAArB;AACD;;AAED,QAAI,qBAAqB,GAAG,KAA5B;AACA,QAAI,eAAe,GAAgB,IAAnC;AACA,IAAA,MAAM,CAAC,OAAP,CAAe,SAAS,IAAA;AACtB,UAAI,QAAQ,CAAC,SAAD,CAAZ,EAAyB;AACvB,cAAM,QAAQ,GAAG,SAAjB;AACA,cAAM,MAAM,GAAG,QAAQ,CAAC,QAAD,CAAvB;;AACA,YAAI,MAAJ,EAAY;AACV,UAAA,eAAe,GAAG,MAAlB;AACA,iBAAO,QAAQ,CAAC,QAAD,CAAf;AACD;;AACD,YAAI,CAAC,qBAAL,EAA4B;AAC1B,eAAK,IAAI,IAAT,IAAiB,QAAjB,EAA2B;AACzB,kBAAM,KAAK,GAAG,QAAQ,CAAC,IAAD,CAAtB;;AACA,gBAAI,KAAK,CAAC,QAAN,GAAiB,OAAjB,CAAyB,uBAAzB,KAAqD,CAAzD,EAA4D;AAC1D,cAAA,qBAAqB,GAAG,IAAxB;AACA;AACD;AACF;AACF;AACF;AACF,KAlBD;AAoBA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,MAFK;AAGL,MAAA,MAAM,EAAE,eAHH;AAIL,MAAA,MAAM,EAAE,QAAQ,CAAC,MAJZ;AAKL,MAAA,qBALK;AAML,MAAA,OAAO,EAAE;AANJ,KAAP;AAQD;;AAEO,EAAA,iBAAiB,CAAC,GAAD,EAAgB,OAAhB,EAAmD;AAC1E,UAAM,OAAO,GAAG,OAAO,CAAC,qBAAxB;AACA,QAAI,OAAO,GAAG,OAAO,CAAC,WAAtB;AACA,QAAI,SAAS,GAAG,OAAO,CAAC,WAAxB;;AACA,QAAI,OAAO,IAAI,SAAS,GAAG,CAA3B,EAA8B;AAC5B,MAAA,SAAS,IAAI,OAAO,CAAC,QAAR,GAAmB,OAAO,CAAC,KAAxC;AACD;;AAED,IAAA,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAmB,KAAK,IAAA;AACtB,UAAI,OAAO,KAAP,IAAgB,QAApB,EAA8B;AAE9B,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA2B,IAAI,IAAA;AAC7B,YAAI,CAAC,KAAK,OAAL,CAAa,qBAAb,CAAmC,IAAnC,CAAL,EAA+C;AAC7C,UAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,oCAChB,IAAI,kDADR;AAEA;AACD;;AAED,cAAM,eAAe,GAAG,OAAO,CAAC,eAAR,CAAwB,OAAO,CAAC,oBAAhC,CAAxB;AACA,cAAM,cAAc,GAAG,eAAe,CAAC,IAAD,CAAtC;AACA,YAAI,oBAAoB,GAAG,IAA3B;;AACA,YAAI,cAAJ,EAAoB;AAClB,cAAI,SAAS,IAAI,OAAb,IAAwB,SAAS,IAAI,cAAc,CAAC,SAApD,IACA,OAAO,IAAI,cAAc,CAAC,OAD9B,EACuC;AACrC,YAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,qBAAqB,IAAI,uCACzC,cAAc,CAAC,SAAS,YACxB,cAAc,CACT,OAAO,4EACZ,SAAS,YAAY,OAAO,KAJhC;AAKA,YAAA,oBAAoB,GAAG,KAAvB;AACD,WATiB,CAU5B;AAES;AACU;;;AACT,UAAA,SAAS,GAAG,cAAc,CAAC,SAA3B;AACD;;AAED,YAAI,oBAAJ,EAA0B;AACxB,UAAA,eAAe,CAAC,IAAD,CAAf,GAAwB;AAAC,YAAA,SAAD;AAAY,YAAA;AAAZ,WAAxB;AACD;;AAED,YAAI,OAAO,CAAC,OAAZ,EAAqB;AACnB,UAAA,mBAAmB,CAAC,KAAK,CAAC,IAAD,CAAN,EAAc,OAAO,CAAC,OAAtB,EAA+B,OAAO,CAAC,MAAvC,CAAnB;AACD;AACF,OAlCD;AAmCD,KAtCD;AAuCD;;AAED,EAAA,cAAc,CAAC,QAAD,EAA+C,OAA/C,EAAkF;AAE9F,UAAM,GAAG,GAAiB;AAAC,MAAA,IAAI,EAAA;AAAA;AAAL;AAAwC,MAAA,MAAM,EAAE,EAAhD;AAAoD,MAAA,OAAO,EAAE;AAA7D,KAA1B;;AACA,QAAI,CAAC,OAAO,CAAC,qBAAb,EAAoC;AAClC,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,0DAApB;AACA,aAAO,GAAP;AACD;;AAED,UAAM,mBAAmB,GAAG,CAA5B;AAEA,QAAI,yBAAyB,GAAG,CAAhC;AACA,UAAM,OAAO,GAAa,EAA1B;AACA,QAAI,iBAAiB,GAAG,KAAxB;AACA,QAAI,mBAAmB,GAAG,KAA1B;AACA,QAAI,cAAc,GAAW,CAA7B;AAEA,UAAM,SAAS,GAAe,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAmB,MAAM,IAAA;AACrD,YAAM,KAAK,GAAG,KAAK,aAAL,CAAmB,MAAnB,EAA2B,OAA3B,CAAd;;AACA,UAAI,SAAS,GACT,KAAK,CAAC,MAAN,IAAgB,IAAhB,GAAuB,KAAK,CAAC,MAA7B,GAAsC,aAAa,CAAC,KAAK,CAAC,MAAP,CADvD;AAEA,UAAI,MAAM,GAAW,CAArB;;AACA,UAAI,SAAS,IAAI,IAAjB,EAAuB;AACrB,QAAA,yBAAyB;AACzB,QAAA,MAAM,GAAG,KAAK,CAAC,MAAN,GAAe,SAAxB;AACD;;AACD,MAAA,mBAAmB,GAAG,mBAAmB,IAAI,MAAM,GAAG,CAAhC,IAAqC,MAAM,GAAG,CAApE;AACA,MAAA,iBAAiB,GAAG,iBAAiB,IAAI,MAAM,GAAG,cAAlD;AACA,MAAA,cAAc,GAAG,MAAjB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACA,aAAO,KAAP;AACD,KAd6B,CAA9B;;AAgBA,QAAI,mBAAJ,EAAyB;AACvB,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,6DAApB;AACD;;AAED,QAAI,iBAAJ,EAAuB;AACrB,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,sDAApB;AACD;;AAED,UAAM,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,MAA9B;AACA,QAAI,eAAe,GAAG,CAAtB;;AACA,QAAI,yBAAyB,GAAG,CAA5B,IAAiC,yBAAyB,GAAG,MAAjE,EAAyE;AACvE,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,uEAApB;AACD,KAFD,MAEO,IAAI,yBAAyB,IAAI,CAAjC,EAAoC;AACzC,MAAA,eAAe,GAAG,mBAAmB,IAAI,MAAM,GAAG,CAAb,CAArC;AACD;;AAED,UAAM,KAAK,GAAG,MAAM,GAAG,CAAvB;AACA,UAAM,WAAW,GAAG,OAAO,CAAC,WAA5B;AACA,UAAM,qBAAqB,GAAG,OAAO,CAAC,qBAAtC;AACA,UAAM,eAAe,GAAG,qBAAqB,CAAC,QAA9C;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,CAAC,EAAD,EAAK,CAAL,KAAM;AACtB,YAAM,MAAM,GAAG,eAAe,GAAG,CAAlB,GAAuB,CAAC,IAAI,KAAL,GAAa,CAAb,GAAkB,eAAe,GAAG,CAA3D,GAAiE,OAAO,CAAC,CAAD,CAAvF;AACA,YAAM,qBAAqB,GAAG,MAAM,GAAG,eAAvC;AACA,MAAA,OAAO,CAAC,WAAR,GAAsB,WAAW,GAAG,qBAAqB,CAAC,KAApC,GAA4C,qBAAlE;AACA,MAAA,qBAAqB,CAAC,QAAtB,GAAiC,qBAAjC;;AACA,WAAK,iBAAL,CAAuB,EAAvB,EAA2B,OAA3B;;AACA,MAAA,EAAE,CAAC,MAAH,GAAY,MAAZ;AAEA,MAAA,GAAG,CAAC,MAAJ,CAAW,IAAX,CAAgB,EAAhB;AACD,KATD;AAWA,WAAO,GAAP;AACD;;AAED,EAAA,cAAc,CAAC,QAAD,EAAuC,OAAvC,EAA0E;AAEtF,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,SAAS,EAAE,YAAY,CAAC,IAAD,EAAO,uBAAuB,CAAC,QAAQ,CAAC,SAAV,CAA9B,EAAoD,OAApD,CAFlB;AAGL,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAH7B,KAAP;AAKD;;AAED,EAAA,iBAAiB,CAAC,QAAD,EAA0C,OAA1C,EAA6E;AAE5F,IAAA,OAAO,CAAC,QAAR;AACA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAF7B,KAAP;AAID;;AAED,EAAA,eAAe,CAAC,QAAD,EAAwC,OAAxC,EAA2E;AAExF,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,SAAS,EAAE,KAAK,cAAL,CAAoB,QAAQ,CAAC,SAA7B,EAAwC,OAAxC,CAFN;AAGL,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAH7B,KAAP;AAKD;;AAED,EAAA,UAAU,CAAC,QAAD,EAAmC,OAAnC,EAAsE;AAC9E,UAAM,cAAc,GAAG,OAAO,CAAC,oBAA/B;AACA,UAAM,OAAO,GAAI,QAAQ,CAAC,OAAT,IAAoB,EAArC;AAEA,IAAA,OAAO,CAAC,UAAR;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,QAAvB;AACA,UAAM,CAAC,QAAD,EAAW,WAAX,IAA0B,iBAAiB,CAAC,QAAQ,CAAC,QAAV,CAAjD;AACA,IAAA,OAAO,CAAC,oBAAR,GACI,cAAc,CAAC,MAAf,GAAyB,cAAc,GAAG,GAAjB,GAAuB,QAAhD,GAA4D,QADhE;AAEA,IAAA,eAAe,CAAC,OAAO,CAAC,eAAT,EAA0B,OAAO,CAAC,oBAAlC,EAAwD,EAAxD,CAAf;AAEA,UAAM,SAAS,GAAG,YAAY,CAAC,IAAD,EAAO,uBAAuB,CAAC,QAAQ,CAAC,SAAV,CAA9B,EAAoD,OAApD,CAA9B;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,IAAvB;AACA,IAAA,OAAO,CAAC,oBAAR,GAA+B,cAA/B;AAEA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,QAFK;AAGL,MAAA,KAAK,EAAE,OAAO,CAAC,KAAR,IAAiB,CAHnB;AAIL,MAAA,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAJf;AAKL,MAAA,WALK;AAML,MAAA,SANK;AAOL,MAAA,gBAAgB,EAAE,QAAQ,CAAC,QAPtB;AAQL,MAAA,OAAO,EAAE,yBAAyB,CAAC,QAAQ,CAAC,OAAV;AAR7B,KAAP;AAUD;;AAED,EAAA,YAAY,CAAC,QAAD,EAAqC,OAArC,EAAwE;AAElF,QAAI,CAAC,OAAO,CAAC,YAAb,EAA2B;AACzB,MAAA,OAAO,CAAC,MAAR,CAAe,IAAf,CAAoB,8CAApB;AACD;;AACD,UAAM,OAAO,GAAG,QAAQ,CAAC,OAAT,KAAqB,MAArB,GACZ;AAAC,MAAA,QAAQ,EAAE,CAAX;AAAc,MAAA,KAAK,EAAE,CAArB;AAAwB,MAAA,MAAM,EAAE;AAAhC,KADY,GAEZ,aAAa,CAAC,QAAQ,CAAC,OAAV,EAAmB,OAAO,CAAC,MAA3B,EAAmC,IAAnC,CAFjB;AAIA,WAAO;AACL,MAAA,IAAI,EAAA;AAAA;AADC;AAEL,MAAA,SAAS,EAAE,YAAY,CAAC,IAAD,EAAO,uBAAuB,CAAC,QAAQ,CAAC,SAAV,CAA9B,EAAoD,OAApD,CAFlB;AAGL,MAAA,OAHK;AAIL,MAAA,OAAO,EAAE;AAJJ,KAAP;AAMD;;AAhaoC;;AAmavC,SAAS,iBAAT,CAA2B,QAA3B,EAA2C;AACzC,QAAM,YAAY,GAAG,QAAQ,CAAC,KAAT,CAAe,SAAf,EAA0B,IAA1B,CAA+B,KAAK,IAAI,KAAK,IAAI,UAAjD,IAA+D,IAA/D,GAAsE,KAA3F;;AACA,MAAI,YAAJ,EAAkB;AAChB,IAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,gBAAjB,EAAmC,EAAnC,CAAX;AACD,GAJwC,CAK3C;;;AAEE,EAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,MAAjB,EAAyB,mBAAzB,EACK,OADL,CACa,OADb,EACsB,KAAK,IAAI,mBAAmB,GAAG,GAAtB,GAA4B,KAAK,CAAC,MAAN,CAAa,CAAb,CAD3D,EAEK,OAFL,CAEa,aAFb,EAE4B,qBAF5B,CAAX;AAIA,SAAO,CAAC,QAAD,EAAW,YAAX,CAAP;AACD;;AAGD,SAAS,eAAT,CAAyB,GAAzB,EAAsD;AACpD,SAAO,GAAG,GAAG,OAAO,CAAC,GAAD,CAAV,GAAkB,IAA5B;AACD;;AACD,MAKa,0BALb,CAKuC;AAUrC,EAAA,WAAA,CAAmB,MAAnB,EAAgC;AAAb,SAAA,MAAA,GAAA,MAAA;AATZ,SAAA,UAAA,GAAqB,CAArB;AACA,SAAA,QAAA,GAAmB,CAAnB;AACA,SAAA,iBAAA,GAAsD,IAAtD;AACA,SAAA,YAAA,GAA4C,IAA5C;AACA,SAAA,oBAAA,GAAoC,IAApC;AACA,SAAA,qBAAA,GAAwC,IAAxC;AACA,SAAA,WAAA,GAAsB,CAAtB;AACA,SAAA,eAAA,GAAkF,EAAlF;AACA,SAAA,OAAA,GAAiC,IAAjC;AAC6B;;AAVC;;AAavC,SAAS,aAAT,CAAuB,MAAvB,EAAwE;AACtE,MAAI,OAAO,MAAP,IAAiB,QAArB,EAA+B,OAAO,IAAP;AAE/B,MAAI,MAAM,GAAgB,IAA1B;;AAEA,MAAI,KAAK,CAAC,OAAN,CAAc,MAAd,CAAJ,EAA2B;AACzB,IAAA,MAAM,CAAC,OAAP,CAAe,UAAU,IAAA;AACvB,UAAI,QAAQ,CAAC,UAAD,CAAR,IAAwB,UAAU,CAAC,cAAX,CAA0B,QAA1B,CAA5B,EAAiE;AAC/D,cAAM,GAAG,GAAG,UAAZ;AACA,QAAA,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,QAAD,CAAJ,CAAnB;AACA,eAAO,GAAG,CAAC,QAAD,CAAV;AACD;AACF,KAND;AAOD,GARD,MAQO,IAAI,QAAQ,CAAC,MAAD,CAAR,IAAoB,MAAM,CAAC,cAAP,CAAsB,QAAtB,CAAxB,EAAyD;AAC9D,UAAM,GAAG,GAAG,MAAZ;AACA,IAAA,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,QAAD,CAAJ,CAAnB;AACA,WAAO,GAAG,CAAC,QAAD,CAAV;AACD;;AACD,SAAO,MAAP;AACD;;AAED,SAAS,QAAT,CAAkB,KAAlB,EAA4B;AAC1B,SAAO,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAAD,IAAyB,OAAO,KAAP,IAAgB,QAAhD;AACD;;AAED,SAAS,kBAAT,CAA4B,KAA5B,EAAiE,MAAjE,EAA8E;AAC5E,MAAI,OAAO,GAAwB,IAAnC;;AACA,MAAI,KAAK,CAAC,cAAN,CAAqB,UAArB,CAAJ,EAAsC;AACpC,IAAA,OAAO,GAAG,KAAV;AACD,GAFD,MAEO,IAAI,OAAO,KAAP,IAAgB,QAApB,EAA8B;AACnC,UAAM,QAAQ,GAAG,aAAa,CAAC,KAAD,EAAQ,MAAR,CAAb,CAA6B,QAA9C;AACA,WAAO,aAAa,CAAC,QAAD,EAAW,CAAX,EAAc,EAAd,CAApB;AACD;;AAED,QAAM,QAAQ,GAAG,KAAjB;AACA,QAAM,SAAS,GAAG,QAAQ,CAAC,KAAT,CAAe,KAAf,EAAsB,IAAtB,CAA2B,CAAC,IAAI,CAAC,CAAC,MAAF,CAAS,CAAT,KAAe,GAAf,IAAsB,CAAC,CAAC,MAAF,CAAS,CAAT,KAAe,GAArE,CAAlB;;AACA,MAAI,SAAJ,EAAe;AACb,UAAM,GAAG,GAAG,aAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAzB;AACA,IAAA,GAAG,CAAC,OAAJ,GAAc,IAAd;AACA,IAAA,GAAG,CAAC,QAAJ,GAAe,QAAf;AACA,WAAO,GAAP;AACD;;AAED,EAAA,OAAO,GAAG,OAAO,IAAI,aAAa,CAAC,QAAD,EAAW,MAAX,CAAlC;AACA,SAAO,aAAa,CAAC,OAAO,CAAC,QAAT,EAAmB,OAAO,CAAC,KAA3B,EAAkC,OAAO,CAAC,MAA1C,CAApB;AACD;;AAED,SAAS,yBAAT,CAAmC,OAAnC,EAAiE;AAC/D,MAAI,OAAJ,EAAa;AACX,IAAA,OAAO,GAAG,OAAO,CAAC,OAAD,CAAjB;;AACA,QAAI,OAAO,CAAC,QAAD,CAAX,EAAuB;AACrB,MAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,eAAe,CAAC,OAAO,CAAC,QAAD,CAAR,CAAnC;AACD;AACF,GALD,MAKO;AACL,IAAA,OAAO,GAAG,EAAV;AACD;;AACD,SAAO,OAAP;AACD;;AAED,SAAS,aAAT,CAAuB,QAAvB,EAAyC,KAAzC,EAAwD,MAAxD,EAA2E;AACzE,SAAO;AAAC,IAAA,QAAD;AAAW,IAAA,KAAX;AAAkB,IAAA;AAAlB,GAAP;AACF;;AACC,SC9iBe,yBD8iBf,CC7iBG,OD6iBH,EC7iBiB,SD6iBjB,EC7iB0C,aD6iB1C,EC7iBmE,cD6iBnE,EC5iBG,QD4iBH,EC5iBqB,KD4iBrB,EC5iBoC,MAAA,GAAsB,ID4iB1D,EC3iBG,WAAA,GAAuB,KD2iB1B,EC3iB+B;AAC9B,SAAO;AACL,IAAA,IAAI,EAAA;AAAA;AADC;AAEL,IAAA,OAFK;AAGL,IAAA,SAHK;AAIL,IAAA,aAJK;AAKL,IAAA,cALK;AAML,IAAA,QANK;AAOL,IAAA,KAPK;AAQL,IAAA,SAAS,EAAE,QAAQ,GAAG,KARjB;AASL,IAAA,MATK;AAUL,IAAA;AAVK,GAAP;AAYF;;AACC,MC/BY,qBD+BZ,CC/BiC;AAAlC,EAAA,WAAA,GAAA;AACU,SAAA,IAAA,GAAO,IAAI,GAAJ,EAAP;AA2BT;;AAzBC,EAAA,OAAO,CAAC,OAAD,EAAa;AAClB,QAAI,YAAY,GAAG,KAAK,IAAL,CAAU,GAAV,CAAc,OAAd,CAAnB;;AACA,QAAI,YAAJ,EAAkB;AAChB,WAAK,IAAL,CAAU,MAAV,CAAiB,OAAjB;AACD,KAFD,MAEO;AACL,MAAA,YAAY,GAAG,EAAf;AACD;;AACD,WAAO,YAAP;AACD;;AAED,EAAA,MAAM,CAAC,OAAD,EAAe,YAAf,EAA2D;AAC/D,QAAI,oBAAoB,GAAG,KAAK,IAAL,CAAU,GAAV,CAAc,OAAd,CAA3B;;AACA,QAAI,CAAC,oBAAL,EAA2B;AACzB,WAAK,IAAL,CAAU,GAAV,CAAc,OAAd,EAAuB,oBAAoB,GAAG,EAA9C;AACD;;AACD,IAAA,oBAAoB,CAAC,IAArB,CAA0B,GAAG,YAA7B;AACD;;AAED,EAAA,GAAG,CAAC,OAAD,EAAa;AACd,WAAO,KAAK,IAAL,CAAU,GAAV,CAAc,OAAd,CAAP;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,IAAL,CAAU,KAAV;AACD;;AA3B+B;ACTlC;;;;;;;;;AAgBA,MAAM,yBAAyB,GAAG,CAAlC;AACA,MAAM,WAAW,GAAG,QAApB;AACA,MAAM,iBAAiB,GAAG,IAAI,MAAJ,CAAW,WAAX,EAAwB,GAAxB,CAA1B;AACA,MAAM,WAAW,GAAG,QAApB;AACA,MAAM,iBAAiB,GAAG,IAAI,MAAJ,CAAW,WAAX,EAAwB,GAAxB,CAA1B;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoFA,SAAgB,uBAAhB,CACI,MADJ,EAC6B,WAD7B,EAC+C,GAD/C,EAEI,cAFJ,EAE4B,cAF5B,EAEoD,cAAA,GAA6B,EAFjF,EAGI,WAAA,GAA0B,EAH9B,EAGkC,OAHlC,EAII,eAJJ,EAI6C,MAAA,GAAgB,EAJ7D,EAI+D;AAC7D,SAAO,IAAI,+BAAJ,GAAsC,cAAtC,CACH,MADG,EACK,WADL,EACkB,GADlB,EACuB,cADvB,EACuC,cADvC,EACuD,cADvD,EACuE,WADvE,EAEH,OAFG,EAEM,eAFN,EAEuB,MAFvB,CAAP;AAGD;;AACD,MACa,+BADb,CAC4C;AAC1C,EAAA,cAAc,CACV,MADU,EACe,WADf,EACiC,GADjC,EAEV,cAFU,EAEc,cAFd,EAEsC,cAFtC,EAGV,WAHU,EAGe,OAHf,EAG0C,eAH1C,EAIV,MAAA,GAAgB,EAJN,EAIQ;AACpB,IAAA,eAAe,GAAG,eAAe,IAAI,IAAI,qBAAJ,EAArC;AACA,UAAM,OAAO,GAAG,IAAI,wBAAJ,CACZ,MADY,EACJ,WADI,EACS,eADT,EAC0B,cAD1B,EAC0C,cAD1C,EAC0D,MAD1D,EACkE,EADlE,CAAhB;AAEA,IAAA,OAAO,CAAC,OAAR,GAAkB,OAAlB;AACA,IAAA,OAAO,CAAC,eAAR,CAAwB,SAAxB,CAAkC,CAAC,cAAD,CAAlC,EAAoD,IAApD,EAA0D,OAAO,CAAC,MAAlE,EAA0E,OAA1E;AAEA,IAAA,YAAY,CAAC,IAAD,EAAO,GAAP,EAAY,OAAZ,CAAZ,CAPoB,CAQxB;;AAEI,UAAM,SAAS,GAAG,OAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,QAAQ,IAAI,QAAQ,CAAC,iBAAT,EAArC,CAAlB;;AACA,QAAI,SAAS,CAAC,MAAV,IAAoB,MAAM,CAAC,IAAP,CAAY,WAAZ,EAAyB,MAAjD,EAAyD;AACvD,YAAM,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC,MAAV,GAAmB,CAApB,CAApB;;AACA,UAAI,CAAC,EAAE,CAAC,uBAAH,EAAL,EAAmC;AACjC,QAAA,EAAE,CAAC,SAAH,CAAa,CAAC,WAAD,CAAb,EAA4B,IAA5B,EAAkC,OAAO,CAAC,MAA1C,EAAkD,OAAlD;AACD;AACF;;AAED,WAAO,SAAS,CAAC,MAAV,GAAmB,SAAS,CAAC,GAAV,CAAc,QAAQ,IAAI,QAAQ,CAAC,cAAT,EAA1B,CAAnB,GACmB,CAAC,yBAAyB,CAAC,WAAD,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,KAApC,CAA1B,CAD1B;AAED;;AAED,EAAA,YAAY,CAAC,GAAD,EAAkB,OAAlB,EAAmD,CAAI;AAElE;;AAED,EAAA,UAAU,CAAC,GAAD,EAAgB,OAAhB,EAAiD,CAAI;AAE9D;;AAED,EAAA,eAAe,CAAC,GAAD,EAAqB,OAArB,EAAsD,CAAI;AAExE;;AAED,EAAA,iBAAiB,CAAC,GAAD,EAAuB,OAAvB,EAAwD;AACvE,UAAM,mBAAmB,GAAG,OAAO,CAAC,eAAR,CAAwB,OAAxB,CAAgC,OAAO,CAAC,OAAxC,CAA5B;;AACA,QAAI,mBAAJ,EAAyB;AACvB,YAAM,YAAY,GAAG,OAAO,CAAC,gBAAR,CAAyB,GAAG,CAAC,OAA7B,CAArB;AACA,YAAM,SAAS,GAAG,OAAO,CAAC,eAAR,CAAwB,WAA1C;;AACA,YAAM,OAAO,GAAG,KAAK,qBAAL,CACZ,mBADY,EACS,YADT,EACuB,YAAY,CAAC,OADpC,CAAhB;;AAEA,UAAI,SAAS,IAAI,OAAjB,EAA0B;AAChC;AACQ;AACA,QAAA,OAAO,CAAC,wBAAR,CAAiC,OAAjC;AACD;AACF;;AACD,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,eAAe,CAAC,GAAD,EAAqB,OAArB,EAAsD;AACnE,UAAM,YAAY,GAAG,OAAO,CAAC,gBAAR,CAAyB,GAAG,CAAC,OAA7B,CAArB;AACA,IAAA,YAAY,CAAC,wBAAb;AACA,SAAK,cAAL,CAAoB,GAAG,CAAC,SAAxB,EAAmC,YAAnC;AACA,IAAA,OAAO,CAAC,wBAAR,CAAiC,YAAY,CAAC,eAAb,CAA6B,WAA9D;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAEO,EAAA,qBAAqB,CACzB,YADyB,EACqB,OADrB,EAEzB,OAFyB,EAEG;AAC9B,UAAM,SAAS,GAAG,OAAO,CAAC,eAAR,CAAwB,WAA1C;AACA,QAAI,YAAY,GAAG,SAAnB,CAF8B,CAGlC;AAEG;;AACC,UAAM,QAAQ,GAAG,OAAO,CAAC,QAAR,IAAoB,IAApB,GAA2B,kBAAkB,CAAC,OAAO,CAAC,QAAT,CAA7C,GAAkE,IAAnF;AACA,UAAM,KAAK,GAAG,OAAO,CAAC,KAAR,IAAiB,IAAjB,GAAwB,kBAAkB,CAAC,OAAO,CAAC,KAAT,CAA1C,GAA4D,IAA1E;;AACA,QAAI,QAAQ,KAAK,CAAjB,EAAoB;AAClB,MAAA,YAAY,CAAC,OAAb,CAAqB,WAAW,IAAA;AAC9B,cAAM,kBAAkB,GACpB,OAAO,CAAC,2BAAR,CAAoC,WAApC,EAAiD,QAAjD,EAA2D,KAA3D,CADJ;AAEA,QAAA,YAAY,GACR,IAAI,CAAC,GAAL,CAAS,YAAT,EAAuB,kBAAkB,CAAC,QAAnB,GAA8B,kBAAkB,CAAC,KAAxE,CADJ;AAED,OALD;AAMD;;AAED,WAAO,YAAP;AACD;;AAED,EAAA,cAAc,CAAC,GAAD,EAAoB,OAApB,EAAqD;AACjE,IAAA,OAAO,CAAC,aAAR,CAAsB,GAAG,CAAC,OAA1B,EAAmC,IAAnC;AACA,IAAA,YAAY,CAAC,IAAD,EAAO,GAAG,CAAC,SAAX,EAAsB,OAAtB,CAAZ;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,aAAa,CAAC,GAAD,EAAmB,OAAnB,EAAoD;AAC/D,UAAM,eAAe,GAAG,OAAO,CAAC,eAAhC;AACA,QAAI,GAAG,GAAG,OAAV;AACA,UAAM,OAAO,GAAG,GAAG,CAAC,OAApB;;AAEA,QAAI,OAAO,KAAK,OAAO,CAAC,MAAR,IAAkB,OAAO,CAAC,KAA/B,CAAX,EAAkD;AAChD,MAAA,GAAG,GAAG,OAAO,CAAC,gBAAR,CAAyB,OAAzB,CAAN;AACA,MAAA,GAAG,CAAC,wBAAJ;;AAEA,UAAI,OAAO,CAAC,KAAR,IAAiB,IAArB,EAA2B;AACzB,YAAI,GAAG,CAAC,YAAJ,CAAiB,IAAjB,IAAqB;AAAA;AAAzB,UAA0D;AACxD,YAAA,GAAG,CAAC,eAAJ,CAAoB,qBAApB;AACA,YAAA,GAAG,CAAC,YAAJ,GAAmB,0BAAnB;AACD;;AAED,cAAM,KAAK,GAAG,kBAAkB,CAAC,OAAO,CAAC,KAAT,CAAhC;AACA,QAAA,GAAG,CAAC,aAAJ,CAAkB,KAAlB;AACD;AACF;;AAED,QAAI,GAAG,CAAC,KAAJ,CAAU,MAAd,EAAsB;AACpB,MAAA,GAAG,CAAC,KAAJ,CAAU,OAAV,CAAkB,CAAC,IAAI,YAAY,CAAC,IAAD,EAAO,CAAP,EAAU,GAAV,CAAnC,EADoB,CAE1B;;AAEM,MAAA,GAAG,CAAC,eAAJ,CAAoB,qBAApB,GAJoB,CAK1B;AAEK;AACM;;AACL,UAAI,GAAG,CAAC,eAAJ,GAAsB,eAA1B,EAA2C;AACzC,QAAA,GAAG,CAAC,wBAAJ;AACD;AACF;;AAED,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,UAAU,CAAC,GAAD,EAAgB,OAAhB,EAAiD;AACzD,UAAM,cAAc,GAAsB,EAA1C;AACA,QAAI,YAAY,GAAG,OAAO,CAAC,eAAR,CAAwB,WAA3C;AACA,UAAM,KAAK,GAAG,GAAG,CAAC,OAAJ,IAAe,GAAG,CAAC,OAAJ,CAAY,KAA3B,GAAmC,kBAAkB,CAAC,GAAG,CAAC,OAAJ,CAAY,KAAb,CAArD,GAA2E,CAAzF;AAEA,IAAA,GAAG,CAAC,KAAJ,CAAU,OAAV,CAAkB,CAAC,IAAA;AACjB,YAAM,YAAY,GAAG,OAAO,CAAC,gBAAR,CAAyB,GAAG,CAAC,OAA7B,CAArB;;AACA,UAAI,KAAJ,EAAW;AACT,QAAA,YAAY,CAAC,aAAb,CAA2B,KAA3B;AACD;;AAED,MAAA,YAAY,CAAC,IAAD,EAAO,CAAP,EAAU,YAAV,CAAZ;AACA,MAAA,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,YAAT,EAAuB,YAAY,CAAC,eAAb,CAA6B,WAApD,CAAf;AACA,MAAA,cAAc,CAAC,IAAf,CAAoB,YAAY,CAAC,eAAjC;AACD,KATD,EALyD,CAe7D;AAEG;AACI;;AACH,IAAA,cAAc,CAAC,OAAf,CACI,QAAQ,IAAI,OAAO,CAAC,eAAR,CAAwB,4BAAxB,CAAqD,QAArD,CADhB;AAEA,IAAA,OAAO,CAAC,wBAAR,CAAiC,YAAjC;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAEO,EAAA,YAAY,CAAC,GAAD,EAAiB,OAAjB,EAAkD;AACpE,QAAK,GAAwB,CAAC,OAA9B,EAAuC;AACrC,YAAM,QAAQ,GAAI,GAAwB,CAAC,QAA3C;AACA,YAAM,WAAW,GACb,OAAO,CAAC,MAAR,GAAiB,iBAAiB,CAAC,QAAD,EAAW,OAAO,CAAC,MAAnB,EAA2B,OAAO,CAAC,MAAnC,CAAlC,GAA+E,QADnF;AAEA,aAAO,aAAa,CAAC,WAAD,EAAc,OAAO,CAAC,MAAtB,CAApB;AACD,KALD,MAKO;AACL,aAAO;AAAC,QAAA,QAAQ,EAAE,GAAG,CAAC,QAAf;AAAyB,QAAA,KAAK,EAAE,GAAG,CAAC,KAApC;AAA2C,QAAA,MAAM,EAAE,GAAG,CAAC;AAAvD,OAAP;AACD;AACF;;AAED,EAAA,YAAY,CAAC,GAAD,EAAkB,OAAlB,EAAmD;AAC7D,UAAM,OAAO,GAAG,OAAO,CAAC,qBAAR,GAAgC,KAAK,YAAL,CAAkB,GAAG,CAAC,OAAtB,EAA+B,OAA/B,CAAhD;;AACA,UAAM,QAAQ,GAAG,OAAO,CAAC,eAAzB;;AACA,QAAI,OAAO,CAAC,KAAZ,EAAmB;AACjB,MAAA,OAAO,CAAC,aAAR,CAAsB,OAAO,CAAC,KAA9B;AACA,MAAA,QAAQ,CAAC,qBAAT;AACD;;AAED,UAAM,KAAK,GAAG,GAAG,CAAC,KAAlB;;AACA,QAAI,KAAK,CAAC,IAAN,IAAU;AAAA;AAAd,MAAmD;AACjD,aAAK,cAAL,CAAoB,KAApB,EAA2B,OAA3B;AACD,OAFD,MAEO;AACL,MAAA,OAAO,CAAC,aAAR,CAAsB,OAAO,CAAC,QAA9B;AACA,WAAK,UAAL,CAAgB,KAAhB,EAAmC,OAAnC;AACA,MAAA,QAAQ,CAAC,qBAAT;AACD;;AAED,IAAA,OAAO,CAAC,qBAAR,GAAgC,IAAhC;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,UAAU,CAAC,GAAD,EAAgB,OAAhB,EAAiD;AACzD,UAAM,QAAQ,GAAG,OAAO,CAAC,eAAzB;AACA,UAAM,OAAO,GAAG,OAAO,CAAC,qBAAxB,CAFyD,CAG7D;AAEG;;AACC,QAAI,CAAC,OAAD,IAAY,QAAQ,CAAC,yBAAT,GAAqC,MAArD,EAA6D;AAC3D,MAAA,QAAQ,CAAC,YAAT;AACD;;AAED,UAAM,MAAM,GAAI,OAAO,IAAI,OAAO,CAAC,MAApB,IAA+B,GAAG,CAAC,MAAlD;;AACA,QAAI,GAAG,CAAC,WAAR,EAAqB;AACnB,MAAA,QAAQ,CAAC,cAAT,CAAwB,MAAxB;AACD,KAFD,MAEO;AACL,MAAA,QAAQ,CAAC,SAAT,CAAmB,GAAG,CAAC,MAAvB,EAA+B,MAA/B,EAAuC,OAAO,CAAC,MAA/C,EAAuD,OAAO,CAAC,OAA/D;AACD;;AAED,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,cAAc,CAAC,GAAD,EAAoB,OAApB,EAAqD;AACjE,UAAM,qBAAqB,GAAG,OAAO,CAAC,qBAAtC;AACA,UAAM,SAAS,GAAI,OAAO,CAAC,eAAT,CAA2B,QAA7C;AACA,UAAM,QAAQ,GAAG,qBAAqB,CAAC,QAAvC;AACA,UAAM,YAAY,GAAG,OAAO,CAAC,gBAAR,EAArB;AACA,UAAM,aAAa,GAAG,YAAY,CAAC,eAAnC;AACA,IAAA,aAAa,CAAC,MAAd,GAAuB,qBAAqB,CAAC,MAA7C;AAEA,IAAA,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAmB,IAAI,IAAA;AACrB,YAAM,MAAM,GAAW,IAAI,CAAC,MAAL,IAAe,CAAtC;AACA,MAAA,aAAa,CAAC,WAAd,CAA0B,MAAM,GAAG,QAAnC;AACA,MAAA,aAAa,CAAC,SAAd,CAAwB,IAAI,CAAC,MAA7B,EAAqC,IAAI,CAAC,MAA1C,EAAkD,OAAO,CAAC,MAA1D,EAAkE,OAAO,CAAC,OAA1E;AACA,MAAA,aAAa,CAAC,qBAAd;AACD,KALD,EARiE,CAcrE;AAEG;;AACC,IAAA,OAAO,CAAC,eAAR,CAAwB,4BAAxB,CAAqD,aAArD,EAjBiE,CAkBrE;AAEG;;AACC,IAAA,OAAO,CAAC,wBAAR,CAAiC,SAAS,GAAG,QAA7C;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,UAAU,CAAC,GAAD,EAAgB,OAAhB,EAAiD;AAC7D;AACI;AACA,UAAM,SAAS,GAAG,OAAO,CAAC,eAAR,CAAwB,WAA1C;AACA,UAAM,OAAO,GAAI,GAAG,CAAC,OAAJ,IAAe,EAAhC;AACA,UAAM,KAAK,GAAG,OAAO,CAAC,KAAR,GAAgB,kBAAkB,CAAC,OAAO,CAAC,KAAT,CAAlC,GAAoD,CAAlE;;AAEA,QAAI,KAAK,KACJ,OAAO,CAAC,YAAR,CAAqB,IAArB,KAAyB;AAAA;AAAzB,OACC,SAAS,IAAI,CAAb,IAAkB,OAAO,CAAC,eAAR,CAAwB,yBAAxB,GAAoD,MAFnE,CAAT,EAEsF;AACpF,MAAA,OAAO,CAAC,eAAR,CAAwB,qBAAxB;AACA,MAAA,OAAO,CAAC,YAAR,GAAuB,0BAAvB;AACD;;AAED,QAAI,YAAY,GAAG,SAAnB;AACA,UAAM,IAAI,GAAG,OAAO,CAAC,WAAR,CACT,GAAG,CAAC,QADK,EACK,GAAG,CAAC,gBADT,EAC2B,GAAG,CAAC,KAD/B,EACsC,GAAG,CAAC,WAD1C,EAET,OAAO,CAAC,QAAR,GAAmB,IAAnB,GAA0B,KAFjB,EAEwB,OAAO,CAAC,MAFhC,CAAb;AAIA,IAAA,OAAO,CAAC,iBAAR,GAA4B,IAAI,CAAC,MAAjC;AACA,QAAI,mBAAmB,GAAyB,IAAhD;AACA,IAAA,IAAI,CAAC,OAAL,CAAa,CAAC,OAAD,EAAU,CAAV,KAAW;AACtB,MAAA,OAAO,CAAC,iBAAR,GAA4B,CAA5B;AACA,YAAM,YAAY,GAAG,OAAO,CAAC,gBAAR,CAAyB,GAAG,CAAC,OAA7B,EAAsC,OAAtC,CAArB;;AACA,UAAI,KAAJ,EAAW;AACT,QAAA,YAAY,CAAC,aAAb,CAA2B,KAA3B;AACD;;AAED,UAAI,OAAO,KAAK,OAAO,CAAC,OAAxB,EAAiC;AAC/B,QAAA,mBAAmB,GAAG,YAAY,CAAC,eAAnC;AACD;;AAED,MAAA,YAAY,CAAC,IAAD,EAAO,GAAG,CAAC,SAAX,EAAsB,YAAtB,CAAZ,CAXsB,CAY5B;AAEK;AACM;;AACL,MAAA,YAAY,CAAC,eAAb,CAA6B,qBAA7B;AAEA,YAAM,OAAO,GAAG,YAAY,CAAC,eAAb,CAA6B,WAA7C;AACA,MAAA,YAAY,GAAG,IAAI,CAAC,GAAL,CAAS,YAAT,EAAuB,OAAvB,CAAf;AACD,KApBD;AAsBA,IAAA,OAAO,CAAC,iBAAR,GAA4B,CAA5B;AACA,IAAA,OAAO,CAAC,iBAAR,GAA4B,CAA5B;AACA,IAAA,OAAO,CAAC,wBAAR,CAAiC,YAAjC;;AAEA,QAAI,mBAAJ,EAAyB;AACvB,MAAA,OAAO,CAAC,eAAR,CAAwB,4BAAxB,CAAqD,mBAArD;AACA,MAAA,OAAO,CAAC,eAAR,CAAwB,qBAAxB;AACD;;AAED,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB;AACD;;AAED,EAAA,YAAY,CAAC,GAAD,EAAkB,OAAlB,EAAmD;AAC7D,UAAM,aAAa,GAAG,OAAO,CAAC,aAA9B;AACA,UAAM,EAAE,GAAG,OAAO,CAAC,eAAnB;AACA,UAAM,OAAO,GAAG,GAAG,CAAC,OAApB;AACA,UAAM,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,QAAjB,CAAjB;AACA,UAAM,OAAO,GAAG,QAAQ,IAAI,OAAO,CAAC,iBAAR,GAA4B,CAAhC,CAAxB;AACA,QAAI,KAAK,GAAG,QAAQ,GAAG,OAAO,CAAC,iBAA/B;AAEA,QAAI,kBAAkB,GAAG,OAAO,CAAC,QAAR,GAAmB,CAAnB,GAAuB,SAAvB,GAAmC,OAAO,CAAC,MAApE;;AACA,YAAQ,kBAAR;AACE,WAAK,SAAL;AACE,QAAA,KAAK,GAAG,OAAO,GAAG,KAAlB;AACA;;AACF,WAAK,MAAL;AACE,QAAA,KAAK,GAAG,aAAa,CAAC,kBAAtB;AACA;AANJ;;AASA,UAAM,QAAQ,GAAG,OAAO,CAAC,eAAzB;;AACA,QAAI,KAAJ,EAAW;AACT,MAAA,QAAQ,CAAC,aAAT,CAAuB,KAAvB;AACD;;AAED,UAAM,YAAY,GAAG,QAAQ,CAAC,WAA9B;AACA,IAAA,YAAY,CAAC,IAAD,EAAO,GAAG,CAAC,SAAX,EAAsB,OAAtB,CAAZ;AACA,IAAA,OAAO,CAAC,YAAR,GAAuB,GAAvB,CAzB6D,CA0BjE;AAEG;AACI;AACI;;AACP,IAAA,aAAa,CAAC,kBAAd,GACK,EAAE,CAAC,WAAH,GAAiB,YAAlB,IAAmC,EAAE,CAAC,SAAH,GAAe,aAAa,CAAC,eAAd,CAA8B,SAAhF,CADJ;AAED;;AA9TyC;;AAqU5C,MAAM,0BAA0B,GAA+B,EAA/D;;AACA,MAAa,wBAAb,CAAqC;AAWnC,EAAA,WAAA,CACY,OADZ,EAC6C,OAD7C,EAEW,eAFX,EAE2D,eAF3D,EAGY,eAHZ,EAG4C,MAH5C,EAGkE,SAHlE,EAII,eAJJ,EAIqC;AAHzB,SAAA,OAAA,GAAA,OAAA;AAAiC,SAAA,OAAA,GAAA,OAAA;AAClC,SAAA,eAAA,GAAA,eAAA;AAAgD,SAAA,eAAA,GAAA,eAAA;AAC/C,SAAA,eAAA,GAAA,eAAA;AAAgC,SAAA,MAAA,GAAA,MAAA;AAAsB,SAAA,SAAA,GAAA,SAAA;AAb3D,SAAA,aAAA,GAA+C,IAA/C;AAEA,SAAA,qBAAA,GAA6C,IAA7C;AACA,SAAA,YAAA,GAA2C,0BAA3C;AACA,SAAA,eAAA,GAAkB,CAAlB;AACA,SAAA,OAAA,GAA4B,EAA5B;AACA,SAAA,iBAAA,GAA4B,CAA5B;AACA,SAAA,iBAAA,GAA4B,CAA5B;AACA,SAAA,kBAAA,GAA6B,CAA7B;AAOL,SAAK,eAAL,GAAuB,eAAe,IAAI,IAAI,eAAJ,CAAoB,KAAK,OAAzB,EAAkC,OAAlC,EAA2C,CAA3C,CAA1C;AACA,IAAA,SAAS,CAAC,IAAV,CAAe,KAAK,eAApB;AACD;;AAED,MAAI,MAAJ,GAAU;AACR,WAAO,KAAK,OAAL,CAAa,MAApB;AACD;;AAED,EAAA,aAAa,CAAC,OAAD,EAAiC,YAAjC,EAAuD;AAClE,QAAI,CAAC,OAAL,EAAc;AAEd,UAAM,UAAU,GAAG,OAAnB;AACA,QAAI,eAAe,GAAG,KAAK,OAA3B,CAJkE,CAKtE;;AAEI,QAAI,UAAU,CAAC,QAAX,IAAuB,IAA3B,EAAiC;AAC9B,MAAA,eAAuB,CAAC,QAAxB,GAAmC,kBAAkB,CAAC,UAAU,CAAC,QAAZ,CAArD;AACF;;AAED,QAAI,UAAU,CAAC,KAAX,IAAoB,IAAxB,EAA8B;AAC5B,MAAA,eAAe,CAAC,KAAhB,GAAwB,kBAAkB,CAAC,UAAU,CAAC,KAAZ,CAA1C;AACD;;AAED,UAAM,SAAS,GAAG,UAAU,CAAC,MAA7B;;AACA,QAAI,SAAJ,EAAe;AACb,UAAI,cAAc,GAA0B,eAAe,CAAC,MAA5D;;AACA,UAAI,CAAC,cAAL,EAAqB;AACnB,QAAA,cAAc,GAAG,KAAK,OAAL,CAAa,MAAb,GAAsB,EAAvC;AACD;;AAED,MAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,IAAI,IAAA;AACjC,YAAI,CAAC,YAAD,IAAiB,CAAC,cAAc,CAAC,cAAf,CAA8B,IAA9B,CAAtB,EAA2D;AACzD,UAAA,cAAc,CAAC,IAAD,CAAd,GAAuB,iBAAiB,CAAC,SAAS,CAAC,IAAD,CAAV,EAAkB,cAAlB,EAAkC,KAAK,MAAvC,CAAxC;AACD;AACF,OAJD;AAKD;AACF;;AAEO,EAAA,YAAY,GAAA;AAClB,UAAM,OAAO,GAAqB,EAAlC;;AACA,QAAI,KAAK,OAAT,EAAkB;AAChB,YAAM,SAAS,GAAG,KAAK,OAAL,CAAa,MAA/B;;AACA,UAAI,SAAJ,EAAe;AACb,cAAM,MAAM,GAA0B,OAAO,CAAC,QAAD,CAAP,GAAoB,EAA1D;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,IAAI,IAAA;AACjC,UAAA,MAAM,CAAC,IAAD,CAAN,GAAe,SAAS,CAAC,IAAD,CAAxB;AACD,SAFD;AAGD;AACF;;AACD,WAAO,OAAP;AACD;;AAED,EAAA,gBAAgB,CAAC,OAAA,GAAiC,IAAlC,EAAwC,OAAxC,EAAuD,OAAvD,EAAuE;AAErF,UAAM,MAAM,GAAG,OAAO,IAAI,KAAK,OAA/B;AACA,UAAM,OAAO,GAAG,IAAI,wBAAJ,CACZ,KAAK,OADO,EACE,MADF,EACU,KAAK,eADf,EACgC,KAAK,eADrC,EACsD,KAAK,eAD3D,EAEZ,KAAK,MAFO,EAEC,KAAK,SAFN,EAEiB,KAAK,eAAL,CAAqB,IAArB,CAA0B,MAA1B,EAAkC,OAAO,IAAI,CAA7C,CAFjB,CAAhB;AAGA,IAAA,OAAO,CAAC,YAAR,GAAuB,KAAK,YAA5B;AACA,IAAA,OAAO,CAAC,qBAAR,GAAgC,KAAK,qBAArC;AAEA,IAAA,OAAO,CAAC,OAAR,GAAkB,KAAK,YAAL,EAAlB;AACA,IAAA,OAAO,CAAC,aAAR,CAAsB,OAAtB;AAEA,IAAA,OAAO,CAAC,iBAAR,GAA4B,KAAK,iBAAjC;AACA,IAAA,OAAO,CAAC,iBAAR,GAA4B,KAAK,iBAAjC;AACA,IAAA,OAAO,CAAC,aAAR,GAAwB,IAAxB;AACA,SAAK,eAAL;AACA,WAAO,OAAP;AACD;;AAED,EAAA,wBAAwB,CAAC,OAAD,EAAiB;AACvC,SAAK,YAAL,GAAoB,0BAApB;AACA,SAAK,eAAL,GAAuB,KAAK,eAAL,CAAqB,IAArB,CAA0B,KAAK,OAA/B,EAAwC,OAAxC,CAAvB;AACA,SAAK,SAAL,CAAe,IAAf,CAAoB,KAAK,eAAzB;AACA,WAAO,KAAK,eAAZ;AACD;;AAED,EAAA,2BAA2B,CACvB,WADuB,EACoB,QADpB,EAEvB,KAFuB,EAEL;AACpB,UAAM,cAAc,GAAmB;AACrC,MAAA,QAAQ,EAAE,QAAQ,IAAI,IAAZ,GAAmB,QAAnB,GAA8B,WAAW,CAAC,QADf;AAErC,MAAA,KAAK,EAAE,KAAK,eAAL,CAAqB,WAArB,IAAoC,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,CAA5D,IAAiE,WAAW,CAAC,KAF/C;AAGrC,MAAA,MAAM,EAAE;AAH6B,KAAvC;AAKA,UAAM,OAAO,GAAG,IAAI,kBAAJ,CACZ,KAAK,OADO,EACE,WAAW,CAAC,OADd,EACuB,WAAW,CAAC,SADnC,EAC8C,WAAW,CAAC,aAD1D,EAEZ,WAAW,CAAC,cAFA,EAEgB,cAFhB,EAEgC,WAAW,CAAC,uBAF5C,CAAhB;AAGA,SAAK,SAAL,CAAe,IAAf,CAAoB,OAApB;AACA,WAAO,cAAP;AACD;;AAED,EAAA,aAAa,CAAC,IAAD,EAAa;AACxB,SAAK,eAAL,CAAqB,WAArB,CAAiC,KAAK,eAAL,CAAqB,QAArB,GAAgC,IAAjE;AACD;;AAED,EAAA,aAAa,CAAC,KAAD,EAAc;AAC7B;AACI,QAAI,KAAK,GAAG,CAAZ,EAAe;AACb,WAAK,eAAL,CAAqB,aAArB,CAAmC,KAAnC;AACD;AACF;;AAED,EAAA,WAAW,CACP,QADO,EACW,gBADX,EACqC,KADrC,EACoD,WADpD,EAEP,QAFO,EAEY,MAFZ,EAEyB;AAClC,QAAI,OAAO,GAAU,EAArB;;AACA,QAAI,WAAJ,EAAiB;AACf,MAAA,OAAO,CAAC,IAAR,CAAa,KAAK,OAAlB;AACD;;AACD,QAAI,QAAQ,CAAC,MAAT,GAAkB,CAAtB,EAAyB;AAAA;AACvB,MAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,iBAAjB,EAAoC,MAAM,KAAK,eAA/C,CAAX;AACA,MAAA,QAAQ,GAAG,QAAQ,CAAC,OAAT,CAAiB,iBAAjB,EAAoC,MAAM,KAAK,eAA/C,CAAX;AACA,YAAM,KAAK,GAAG,KAAK,IAAI,CAAvB;;AACA,UAAI,QAAQ,GAAG,KAAK,OAAL,CAAa,KAAb,CAAmB,KAAK,OAAxB,EAAiC,QAAjC,EAA2C,KAA3C,CAAf;;AACA,UAAI,KAAK,KAAK,CAAd,EAAiB;AACf,QAAA,QAAQ,GAAG,KAAK,GAAG,CAAR,GAAY,QAAQ,CAAC,KAAT,CAAe,QAAQ,CAAC,MAAT,GAAkB,KAAjC,EAAwC,QAAQ,CAAC,MAAjD,CAAZ,GACY,QAAQ,CAAC,KAAT,CAAe,CAAf,EAAkB,KAAlB,CADvB;AAED;;AACD,MAAA,OAAO,CAAC,IAAR,CAAa,GAAG,QAAhB;AACD;;AAED,QAAI,CAAC,QAAD,IAAa,OAAO,CAAC,MAAR,IAAkB,CAAnC,EAAsC;AACpC,MAAA,MAAM,CAAC,IAAP,CAAY,YAAY,gBAAgB,8CACpC,gBAAgB,sDADpB;AAED;;AACD,WAAO,OAAP;AACD;;AAhJkC;;AAkJrC,MAEa,eAFb,CAE4B;AAc1B,EAAA,WAAA,CACY,OADZ,EAC6C,OAD7C,EACkE,SADlE,EAEY,4BAFZ,EAE+D;AADnD,SAAA,OAAA,GAAA,OAAA;AAAiC,SAAA,OAAA,GAAA,OAAA;AAAqB,SAAA,SAAA,GAAA,SAAA;AACtD,SAAA,4BAAA,GAAA,4BAAA;AAfL,SAAA,QAAA,GAAmB,CAAnB;AAGC,SAAA,iBAAA,GAAgC,EAAhC;AACA,SAAA,gBAAA,GAA+B,EAA/B;AACA,SAAA,UAAA,GAAa,IAAI,GAAJ,EAAb;AACA,SAAA,aAAA,GAA+C,EAA/C;AAGA,SAAA,cAAA,GAA6B,EAA7B;AACA,SAAA,SAAA,GAAwB,EAAxB;AACA,SAAA,yBAAA,GAA6C,IAA7C;;AAKN,QAAI,CAAC,KAAK,4BAAV,EAAwC;AACtC,WAAK,4BAAL,GAAoC,IAAI,GAAJ,EAApC;AACD;;AAED,SAAK,oBAAL,GAA4B,MAAM,CAAC,MAAP,CAAc,KAAK,SAAnB,EAA8B,EAA9B,CAA5B;AACA,SAAK,qBAAL,GAA6B,KAAK,4BAAL,CAAkC,GAAlC,CAAsC,OAAtC,CAA7B;;AACA,QAAI,CAAC,KAAK,qBAAV,EAAiC;AAC/B,WAAK,qBAAL,GAA6B,KAAK,oBAAlC;;AACA,WAAK,4BAAL,CAAkC,GAAlC,CAAsC,OAAtC,EAA+C,KAAK,oBAApD;AACD;;AACD,SAAK,aAAL;AACD;;AAED,EAAA,iBAAiB,GAAA;AACf,YAAQ,KAAK,UAAL,CAAgB,IAAxB;AACE,WAAK,CAAL;AACE,eAAO,KAAP;;AACF,WAAK,CAAL;AACE,eAAO,KAAK,yBAAL,GAAiC,MAAjC,GAA0C,CAAjD;;AACF;AACE,eAAO,IAAP;AANJ;AAQD;;AAED,EAAA,yBAAyB,GAAA;AACvB,WAAO,MAAM,CAAC,IAAP,CAAY,KAAK,gBAAjB,CAAP;AACD;;AAED,MAAI,WAAJ,GAAe;AACb,WAAO,KAAK,SAAL,GAAiB,KAAK,QAA7B;AACD;;AAED,EAAA,aAAa,CAAC,KAAD,EAAc;AAC7B;AACI;AACI;AACI;AACR,UAAM,eAAe,GAAG,KAAK,UAAL,CAAgB,IAAhB,IAAwB,CAAxB,IAA6B,MAAM,CAAC,IAAP,CAAY,KAAK,cAAjB,EAAiC,MAAtF;;AAEA,QAAI,KAAK,QAAL,IAAiB,eAArB,EAAsC;AACpC,WAAK,WAAL,CAAiB,KAAK,WAAL,GAAmB,KAApC;;AACA,UAAI,eAAJ,EAAqB;AACnB,aAAK,qBAAL;AACD;AACF,KALD,MAKO;AACL,WAAK,SAAL,IAAkB,KAAlB;AACD;AACF;;AAED,EAAA,IAAI,CAAC,OAAD,EAAe,WAAf,EAAmC;AACrC,SAAK,qBAAL;AACA,WAAO,IAAI,eAAJ,CACH,KAAK,OADF,EACW,OADX,EACoB,WAAW,IAAI,KAAK,WADxC,EACqD,KAAK,4BAD1D,CAAP;AAED;;AAEO,EAAA,aAAa,GAAA;AACnB,QAAI,KAAK,gBAAT,EAA2B;AACzB,WAAK,iBAAL,GAAyB,KAAK,gBAA9B;AACD;;AACD,SAAK,gBAAL,GAAwB,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAAK,QAAzB,CAAxB;;AACA,QAAI,CAAC,KAAK,gBAAV,EAA4B;AAC1B,WAAK,gBAAL,GAAwB,MAAM,CAAC,MAAP,CAAc,KAAK,SAAnB,EAA8B,EAA9B,CAAxB;;AACA,WAAK,UAAL,CAAgB,GAAhB,CAAoB,KAAK,QAAzB,EAAmC,KAAK,gBAAxC;AACD;AACF;;AAED,EAAA,YAAY,GAAA;AACV,SAAK,QAAL,IAAiB,yBAAjB;;AACA,SAAK,aAAL;AACD;;AAED,EAAA,WAAW,CAAC,IAAD,EAAa;AACtB,SAAK,qBAAL;AACA,SAAK,QAAL,GAAgB,IAAhB;;AACA,SAAK,aAAL;AACD;;AAEO,EAAA,YAAY,CAAC,IAAD,EAAe,KAAf,EAAmC;AACrD,SAAK,oBAAL,CAA0B,IAA1B,IAAkC,KAAlC;AACA,SAAK,qBAAL,CAA2B,IAA3B,IAAmC,KAAnC;AACA,SAAK,aAAL,CAAmB,IAAnB,IAA2B;AAAC,MAAA,IAAI,EAAE,KAAK,WAAZ;AAAyB,MAAA;AAAzB,KAA3B;AACD;;AAED,EAAA,uBAAuB,GAAA;AACrB,WAAO,KAAK,yBAAL,KAAmC,KAAK,gBAA/C;AACD;;AAED,EAAA,cAAc,CAAC,MAAD,EAAoB;AAChC,QAAI,MAAJ,EAAY;AACV,WAAK,iBAAL,CAAuB,QAAvB,IAAmC,MAAnC;AACD,KAH+B,CAIpC;AAEG;AACI;AACI;AACI;AACI;;;AACf,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,qBAAjB,EAAwC,OAAxC,CAAgD,IAAI,IAAA;AAClD,WAAK,SAAL,CAAe,IAAf,IAAuB,KAAK,qBAAL,CAA2B,IAA3B,KAAoC,UAA3D;AACA,WAAK,gBAAL,CAAsB,IAAtB,IAA8B,UAA9B;AACD,KAHD;AAIA,SAAK,yBAAL,GAAiC,KAAK,gBAAtC;AACD;;AAED,EAAA,SAAS,CACL,KADK,EACyB,MADzB,EAC8C,MAD9C,EAEL,OAFK,EAEqB;AAC5B,QAAI,MAAJ,EAAY;AACV,WAAK,iBAAL,CAAuB,QAAvB,IAAmC,MAAnC;AACD;;AAED,UAAM,MAAM,GAAI,OAAO,IAAI,OAAO,CAAC,MAApB,IAA+B,EAA9C;AACA,UAAM,MAAM,GAAG,aAAa,CAAC,KAAD,EAAQ,KAAK,qBAAb,CAA5B;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAA;AAC9B,YAAM,GAAG,GAAG,iBAAiB,CAAC,MAAM,CAAC,IAAD,CAAP,EAAe,MAAf,EAAuB,MAAvB,CAA7B;AACA,WAAK,cAAL,CAAoB,IAApB,IAA4B,GAA5B;;AACA,UAAI,CAAC,KAAK,oBAAL,CAA0B,cAA1B,CAAyC,IAAzC,CAAL,EAAqD;AACnD,aAAK,SAAL,CAAe,IAAf,IAAuB,KAAK,qBAAL,CAA2B,cAA3B,CAA0C,IAA1C,IACnB,KAAK,qBAAL,CAA2B,IAA3B,CADmB,GAEnB,UAFJ;AAGD;;AACD,WAAK,YAAL,CAAkB,IAAlB,EAAwB,GAAxB;AACD,KATD;AAUD;;AAED,EAAA,qBAAqB,GAAA;AACnB,UAAM,MAAM,GAAG,KAAK,cAApB;AACA,UAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAd;AACA,QAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB;AAEvB,SAAK,cAAL,GAAsB,EAAtB;AAEA,IAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAA;AAChB,YAAM,GAAG,GAAG,MAAM,CAAC,IAAD,CAAlB;AACA,WAAK,gBAAL,CAAsB,IAAtB,IAA8B,GAA9B;AACD,KAHD;AAKA,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,oBAAjB,EAAuC,OAAvC,CAA+C,IAAI,IAAA;AACjD,UAAI,CAAC,KAAK,gBAAL,CAAsB,cAAtB,CAAqC,IAArC,CAAL,EAAiD;AAC/C,aAAK,gBAAL,CAAsB,IAAtB,IAA8B,KAAK,oBAAL,CAA0B,IAA1B,CAA9B;AACD;AACF,KAJD;AAKD;;AAED,EAAA,qBAAqB,GAAA;AACnB,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,oBAAjB,EAAuC,OAAvC,CAA+C,IAAI,IAAA;AACjD,YAAM,GAAG,GAAG,KAAK,oBAAL,CAA0B,IAA1B,CAAZ;AACA,WAAK,cAAL,CAAoB,IAApB,IAA4B,GAA5B;;AACA,WAAK,YAAL,CAAkB,IAAlB,EAAwB,GAAxB;AACD,KAJD;AAKD;;AAED,EAAA,gBAAgB,GAAA;AACd,WAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,KAAK,QAAzB,CAAP;AACD;;AAED,MAAI,UAAJ,GAAc;AACZ,UAAM,UAAU,GAAa,EAA7B;;AACA,SAAK,IAAI,IAAT,IAAiB,KAAK,gBAAtB,EAAwC;AACtC,MAAA,UAAU,CAAC,IAAX,CAAgB,IAAhB;AACD;;AACD,WAAO,UAAP;AACD;;AAED,EAAA,4BAA4B,CAAC,QAAD,EAA0B;AACpD,IAAA,MAAM,CAAC,IAAP,CAAY,QAAQ,CAAC,aAArB,EAAoC,OAApC,CAA4C,IAAI,IAAA;AAC9C,YAAM,QAAQ,GAAG,KAAK,aAAL,CAAmB,IAAnB,CAAjB;AACA,YAAM,QAAQ,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAjB;;AACA,UAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,IAAT,GAAgB,QAAQ,CAAC,IAA1C,EAAgD;AAC9C,aAAK,YAAL,CAAkB,IAAlB,EAAwB,QAAQ,CAAC,KAAjC;AACD;AACF,KAND;AAOD;;AAED,EAAA,cAAc,GAAA;AACZ,SAAK,qBAAL;AACA,UAAM,aAAa,GAAG,IAAI,GAAJ,EAAtB;AACA,UAAM,cAAc,GAAG,IAAI,GAAJ,EAAvB;AACA,UAAM,OAAO,GAAG,KAAK,UAAL,CAAgB,IAAhB,KAAyB,CAAzB,IAA8B,KAAK,QAAL,KAAkB,CAAhE;AAEA,QAAI,cAAc,GAAiB,EAAnC;;AACA,SAAK,UAAL,CAAgB,OAAhB,CAAwB,CAAC,QAAD,EAAW,IAAX,KAAe;AACrC,YAAM,aAAa,GAAG,UAAU,CAAC,QAAD,EAAW,IAAX,CAAhC;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,aAAZ,EAA2B,OAA3B,CAAmC,IAAI,IAAA;AACrC,cAAM,KAAK,GAAG,aAAa,CAAC,IAAD,CAA3B;;AACA,YAAI,KAAK,IAAIA,UAAb,EAAwB;AACtB,UAAA,aAAa,CAAC,GAAd,CAAkB,IAAlB;AACD,SAFD,MAEO,IAAI,KAAK,IAAI,UAAb,EAAyB;AAC9B,UAAA,cAAc,CAAC,GAAf,CAAmB,IAAnB;AACD;AACF,OAPD;;AAQA,UAAI,CAAC,OAAL,EAAc;AACZ,QAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,IAAI,GAAG,KAAK,QAAtC;AACD;;AACD,MAAA,cAAc,CAAC,IAAf,CAAoB,aAApB;AACD,KAdD;;AAgBA,UAAM,QAAQ,GAAa,aAAa,CAAC,IAAd,GAAqB,eAAe,CAAC,aAAa,CAAC,MAAd,EAAD,CAApC,GAA+D,EAA1F;AACA,UAAM,SAAS,GAAa,cAAc,CAAC,IAAf,GAAsB,eAAe,CAAC,cAAc,CAAC,MAAf,EAAD,CAArC,GAAiE,EAA7F,CAxBY,CAyBhB;;AAEI,QAAI,OAAJ,EAAa;AACX,YAAM,GAAG,GAAG,cAAc,CAAC,CAAD,CAA1B;AACA,YAAM,GAAG,GAAG,OAAO,CAAC,GAAD,CAAnB;AACA,MAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,CAAhB;AACA,MAAA,GAAG,CAAC,QAAD,CAAH,GAAgB,CAAhB;AACA,MAAA,cAAc,GAAG,CAAC,GAAD,EAAM,GAAN,CAAjB;AACD;;AAED,WAAO,yBAAyB,CAC5B,KAAK,OADuB,EACd,cADc,EACE,QADF,EACY,SADZ,EACuB,KAAK,QAD5B,EACsC,KAAK,SAD3C,EAE5B,KAAK,MAFuB,EAEf,KAFe,CAAhC;AAGD;;AAtOyB;;AAyO5B,MAAM,kBAAN,SAAiC,eAAjC,CAAgD;AAG9C,EAAA,WAAA,CACI,MADJ,EACoC,OADpC,EACyD,SADzD,EAEW,aAFX,EAE2C,cAF3C,EAEqE,OAFrE,EAGY,wBAAA,GAAoC,KAHhD,EAGqD;AACnD,UAAM,MAAN,EAAc,OAAd,EAAuB,OAAO,CAAC,KAA/B;AAHkC,SAAA,OAAA,GAAA,OAAA;AAAqB,SAAA,SAAA,GAAA,SAAA;AAC9C,SAAA,aAAA,GAAA,aAAA;AAAgC,SAAA,cAAA,GAAA,cAAA;AAC/B,SAAA,wBAAA,GAAA,wBAAA;AAEV,SAAK,OAAL,GAAe;AAAC,MAAA,QAAQ,EAAE,OAAO,CAAC,QAAnB;AAA6B,MAAA,KAAK,EAAE,OAAO,CAAC,KAA5C;AAAmD,MAAA,MAAM,EAAE,OAAO,CAAC;AAAnE,KAAf;AACD;;AAED,EAAA,iBAAiB,GAAA;AACf,WAAO,KAAK,SAAL,CAAe,MAAf,GAAwB,CAA/B;AACD;;AAED,EAAA,cAAc,GAAA;AACZ,QAAI,SAAS,GAAG,KAAK,SAArB;AACA,QAAI;AAAC,MAAA,KAAD;AAAQ,MAAA,QAAR;AAAkB,MAAA;AAAlB,QAA4B,KAAK,OAArC;;AACA,QAAI,KAAK,wBAAL,IAAiC,KAArC,EAA4C;AAC1C,YAAM,YAAY,GAAiB,EAAnC;AACA,YAAM,SAAS,GAAG,QAAQ,GAAG,KAA7B;AACA,YAAM,WAAW,GAAG,KAAK,GAAG,SAA5B,CAH0C,CAIhD;;AAEM,YAAM,gBAAgB,GAAG,UAAU,CAAC,SAAS,CAAC,CAAD,CAAV,EAAe,KAAf,CAAnC;AACA,MAAA,gBAAgB,CAAC,QAAD,CAAhB,GAA6B,CAA7B;AACA,MAAA,YAAY,CAAC,IAAb,CAAkB,gBAAlB;AAEA,YAAM,gBAAgB,GAAG,UAAU,CAAC,SAAS,CAAC,CAAD,CAAV,EAAe,KAAf,CAAnC;AACA,MAAA,gBAAgB,CAAC,QAAD,CAAhB,GAA6B,WAAW,CAAC,WAAD,CAAxC;AACA,MAAA,YAAY,CAAC,IAAb,CAAkB,gBAAlB;AACN;;;;;;;;;;;AAiBO;;AAAD,YAAM,KAAK,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAjC;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,KAArB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,YAAI,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC,CAAD,CAAV,EAAe,KAAf,CAAnB;AACA,cAAM,SAAS,GAAG,EAAE,CAAC,QAAD,CAApB;AACA,cAAM,cAAc,GAAG,KAAK,GAAG,SAAS,GAAG,QAA3C;AACA,QAAA,EAAE,CAAC,QAAD,CAAF,GAAe,WAAW,CAAC,cAAc,GAAG,SAAlB,CAA1B;AACA,QAAA,YAAY,CAAC,IAAb,CAAkB,EAAlB;AACD,OArCyC,CAsChD;;;AAEM,MAAA,QAAQ,GAAG,SAAX;AACA,MAAA,KAAK,GAAG,CAAR;AACA,MAAA,MAAM,GAAG,EAAT;AAEA,MAAA,SAAS,GAAG,YAAZ;AACD;;AAED,WAAO,yBAAyB,CAC5B,KAAK,OADuB,EACd,SADc,EACH,KAAK,aADF,EACiB,KAAK,cADtB,EACsC,QADtC,EACgD,KADhD,EACuD,MADvD,EAE5B,IAF4B,CAAhC;AAGD;;AApE6C;;AAuEhD,SAAS,WAAT,CAAqB,MAArB,EAAqC,aAAa,GAAG,CAArD,EAAsD;AACpD,QAAM,IAAI,GAAG,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,aAAa,GAAG,CAA7B,CAAb;AACA,SAAO,IAAI,CAAC,KAAL,CAAW,MAAM,GAAG,IAApB,IAA4B,IAAnC;AACD;;AAED,SAAS,aAAT,CAAuB,KAAvB,EAAqD,SAArD,EAA0E;AACxE,QAAM,MAAM,GAAe,EAA3B;AACA,MAAI,aAAJ;AACA,EAAA,KAAK,CAAC,OAAN,CAAc,KAAK,IAAA;AACjB,QAAI,KAAK,KAAK,GAAd,EAAmB;AACjB,MAAA,aAAa,GAAG,aAAa,IAAI,MAAM,CAAC,IAAP,CAAY,SAAZ,CAAjC;AACA,MAAA,aAAa,CAAC,OAAd,CAAsB,IAAI,IAAA;AACxB,QAAA,MAAM,CAAC,IAAD,CAAN,GAAe,UAAf;AACD,OAFD;AAGD,KALD,MAKO;AACL,MAAA,UAAU,CAAC,KAAD,EAAsB,KAAtB,EAA6B,MAA7B,CAAV;AACD;AACF,GATD;AAUA,SAAO,MAAP;AACF;;AACC,MCh4BY,SDg4BZ,CCh4BqB;AAEpB,EAAA,WAAA,CAAoB,OAApB,EAA8C,KAA9C,EAA0F;AAAtE,SAAA,OAAA,GAAA,OAAA;AAClB,UAAM,MAAM,GAAU,EAAtB;AACA,UAAM,GAAG,GAAG,iBAAiB,CAAC,OAAD,EAAU,KAAV,EAAiB,MAAjB,CAA7B;;AACA,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,YAAM,YAAY,GAAG,iCAAiC,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,EAAvE;AACA,YAAM,IAAI,KAAJ,CAAU,YAAV,CAAN;AACD;;AACD,SAAK,aAAL,GAAqB,GAArB;AACD;;AAED,EAAA,cAAc,CACV,OADU,EACI,cADJ,EAEV,iBAFU,EAEkC,OAFlC,EAGV,eAHU,EAG6B;AACzC,UAAM,KAAK,GAAG,KAAK,CAAC,OAAN,CAAc,cAAd,IAAgC,eAAe,CAAC,cAAD,CAA/C,GAC4C,cAD1D;AAEA,UAAM,IAAI,GAAG,KAAK,CAAC,OAAN,CAAc,iBAAd,IAAmC,eAAe,CAAC,iBAAD,CAAlD,GAC+C,iBAD5D;AAEA,UAAM,MAAM,GAAQ,EAApB;AACA,IAAA,eAAe,GAAG,eAAe,IAAI,IAAI,qBAAJ,EAArC;AACA,UAAM,MAAM,GAAG,uBAAuB,CAClC,KAAK,OAD6B,EACpB,OADoB,EACX,KAAK,aADM,EACS,eADT,EAC0B,eAD1B,EAC2C,KAD3C,EACkD,IADlD,EAElC,OAFkC,EAEzB,eAFyB,EAER,MAFQ,CAAtC;;AAGA,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,YAAM,YAAY,GAAG,+BAA+B,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,EAArE;AACA,YAAM,IAAI,KAAJ,CAAU,YAAV,CAAN;AACD;;AACD,WAAO,MAAP;AACD;;AA9BmB;AClBtB;;;;;;;;AAQA;;;;;AAGA,MAAsB,wBAAtB,CAA8C;AAO9C;;;;;AAGA,MAAa,4BAAb,CAAyC;AACvC,EAAA,qBAAqB,CAAC,YAAD,EAAuB,MAAvB,EAAuC;AAC1D,WAAO,YAAP;AACD;;AAED,EAAA,mBAAmB,CACf,oBADe,EACe,kBADf,EAC2C,KAD3C,EAEf,MAFe,EAEC;AAClB,WAAY,KAAZ;AACD;;AATsC;ACrBzC;;;;;;;;;AAOA,MAIa,4BAJb,SAIkD,wBAJlD,CAI0E;AACxE,EAAA,qBAAqB,CAAC,YAAD,EAAuB,MAAvB,EAAuC;AAC1D,WAAO,mBAAmB,CAAC,YAAD,CAA1B;AACD;;AAED,EAAA,mBAAmB,CACf,oBADe,EACe,kBADf,EAC2C,KAD3C,EAEf,MAFe,EAEC;AAClB,QAAI,IAAI,GAAW,EAAnB;AACA,UAAM,MAAM,GAAG,KAAK,CAAC,QAAN,GAAiB,IAAjB,EAAf;;AAEA,QAAI,oBAAoB,CAAC,kBAAD,CAApB,IAA4C,KAAK,KAAK,CAAtD,IAA2D,KAAK,KAAK,GAAzE,EAA8E;AAC5E,UAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,QAAA,IAAI,GAAG,IAAP;AACD,OAFD,MAEO;AACL,cAAM,iBAAiB,GAAG,KAAK,CAAC,KAAN,CAAY,wBAAZ,CAA1B;;AACA,YAAI,iBAAiB,IAAI,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,MAArB,IAA+B,CAAxD,EAA2D;AACzD,UAAA,MAAM,CAAC,IAAP,CAAY,uCAAuC,oBAAoB,IAAI,KAAK,EAAhF;AACD;AACF;AACF;;AACD,WAAO,MAAM,GAAG,IAAhB;AACD;;AAtBuE;;AAwB1E,MAAA,IAAA,GAEK,MAAM,cAAc,CAChB,iUACK,KADL,CACW,GADX,CADgB,CAFzB;;AACA,MAAM,oBAAoB,GACtB,IAAA,EADJ;;AAKA,SAAS,cAAT,CAAwB,IAAxB,EAAsC;AACpC,QAAM,GAAG,GAA6B,EAAtC;AACA,EAAA,IAAI,CAAC,OAAL,CAAa,GAAG,IAAI,GAAG,CAAC,GAAD,CAAH,GAAW,IAA/B;AACA,SAAO,GAAP;AACF;;AACC,SCnBe,2BDmBf,CClBG,ODkBH,EClBiB,WDkBjB,EClBsC,SDkBtC,EClByD,ODkBzD,ECjBG,mBDiBH,ECjBiC,UDiBjC,ECjByD,QDiBzD,EChBG,SDgBH,EChB8C,eDgB9C,ECfG,aDeH,ECdG,cDcH,ECdwD,SDcxD,ECbG,MDaH,ECbiB;AAChB,SAAO;AACL,IAAA,IAAI,EAAA;AAAA;AADC;AAEL,IAAA,OAFK;AAGL,IAAA,WAHK;AAIL,IAAA,mBAJK;AAKL,IAAA,SALK;AAML,IAAA,UANK;AAOL,IAAA,OAPK;AAQL,IAAA,QARK;AASL,IAAA,SATK;AAUL,IAAA,eAVK;AAWL,IAAA,aAXK;AAYL,IAAA,cAZK;AAaL,IAAA,SAbK;AAcL,IAAA;AAdK,GAAP;AAgBF;;AC/BA,MAAM,YAAY,GAAG,EAArB;;AACA,MACa,0BADb,CACuC;AACrC,EAAA,WAAA,CACY,YADZ,EACyC,GADzC,EAEY,YAFZ,EAEqE;AADzD,SAAA,YAAA,GAAA,YAAA;AAA6B,SAAA,GAAA,GAAA,GAAA;AAC7B,SAAA,YAAA,GAAA,YAAA;AAA6D;;AAEzE,EAAA,KAAK,CAAC,YAAD,EAAoB,SAApB,EAAoC,OAApC,EAAkD,MAAlD,EAA8E;AACjF,WAAO,yBAAyB,CAAC,KAAK,GAAL,CAAS,QAAV,EAAoB,YAApB,EAAkC,SAAlC,EAA6C,OAA7C,EAAsD,MAAtD,CAAhC;AACD;;AAED,EAAA,WAAW,CAAC,SAAD,EAAoB,MAApB,EAAkD,MAAlD,EAA+D;AACxE,UAAM,iBAAiB,GAAG,KAAK,YAAL,CAAkB,GAAlB,CAA1B;AACA,UAAM,WAAW,GAAG,KAAK,YAAL,CAAkB,SAAlB,CAApB;AACA,UAAM,YAAY,GAAG,iBAAiB,GAAG,iBAAiB,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,MAAtC,CAAH,GAAmD,EAAzF;AACA,WAAO,WAAW,GAAG,WAAW,CAAC,WAAZ,CAAwB,MAAxB,EAAgC,MAAhC,CAAH,GAA6C,YAA/D;AACD;;AAED,EAAA,KAAK,CACD,MADC,EACwB,OADxB,EACsC,YADtC,EACyD,SADzD,EAED,cAFC,EAEuB,cAFvB,EAE+C,cAF/C,EAGD,WAHC,EAG+B,eAH/B,EAID,YAJC,EAIqB;AACxB,UAAM,MAAM,GAAU,EAAtB;AAEA,UAAM,yBAAyB,GAAG,KAAK,GAAL,CAAS,OAAT,IAAoB,KAAK,GAAL,CAAS,OAAT,CAAiB,MAArC,IAA+C,YAAjF;AACA,UAAM,sBAAsB,GAAG,cAAc,IAAI,cAAc,CAAC,MAAjC,IAA2C,YAA1E;AACA,UAAM,kBAAkB,GAAG,KAAK,WAAL,CAAiB,YAAjB,EAA+B,sBAA/B,EAAuD,MAAvD,CAA3B;AACA,UAAM,mBAAmB,GAAG,WAAW,IAAI,WAAW,CAAC,MAA3B,IAAqC,YAAjE;AACA,UAAM,eAAe,GAAG,KAAK,WAAL,CAAiB,SAAjB,EAA4B,mBAA5B,EAAiD,MAAjD,CAAxB;AAEA,UAAM,eAAe,GAAG,IAAI,GAAJ,EAAxB;AACA,UAAM,WAAW,GAAG,IAAI,GAAJ,EAApB;AACA,UAAM,YAAY,GAAG,IAAI,GAAJ,EAArB;AACA,UAAM,SAAS,GAAG,SAAS,KAAK,MAAhC;AAEA,UAAM,gBAAgB,GAAG;AAAC,MAAA,MAAM,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAM,yBAAN,CAAA,EAAoC,mBAApC;AAAP,KAAzB;AAEA,UAAM,SAAS,GAAG,YAAY,GAC1B,EAD0B,GAE1B,uBAAuB,CACnB,MADmB,EACX,OADW,EACF,KAAK,GAAL,CAAS,SADP,EACkB,cADlB,EACkC,cADlC,EACkD,kBADlD,EAEnB,eAFmB,EAEF,gBAFE,EAEgB,eAFhB,EAEiC,MAFjC,CAF3B;AAMA,QAAI,SAAS,GAAG,CAAhB;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,EAAE,IAAA;AAClB,MAAA,SAAS,GAAG,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,QAAH,GAAc,EAAE,CAAC,KAA1B,EAAiC,SAAjC,CAAZ;AACD,KAFD;;AAIA,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,aAAO,2BAA2B,CAC9B,OAD8B,EACrB,KAAK,YADgB,EACF,YADE,EACY,SADZ,EACuB,SADvB,EACkC,kBADlC,EAE9B,eAF8B,EAEb,EAFa,EAET,EAFS,EAEL,WAFK,EAEQ,YAFR,EAEsB,SAFtB,EAEiC,MAFjC,CAAlC;AAGD;;AAED,IAAA,SAAS,CAAC,OAAV,CAAkB,EAAE,IAAA;AAClB,YAAM,GAAG,GAAG,EAAE,CAAC,OAAf;AACA,YAAM,QAAQ,GAAG,eAAe,CAAC,WAAD,EAAc,GAAd,EAAmB,EAAnB,CAAhC;AACA,MAAA,EAAE,CAAC,aAAH,CAAiB,OAAjB,CAAyB,IAAI,IAAI,QAAQ,CAAC,IAAD,CAAR,GAAiB,IAAlD;AAEA,YAAM,SAAS,GAAG,eAAe,CAAC,YAAD,EAAe,GAAf,EAAoB,EAApB,CAAjC;AACA,MAAA,EAAE,CAAC,cAAH,CAAkB,OAAlB,CAA0B,IAAI,IAAI,SAAS,CAAC,IAAD,CAAT,GAAkB,IAApD;;AAEA,UAAI,GAAG,KAAK,OAAZ,EAAqB;AACnB,QAAA,eAAe,CAAC,GAAhB,CAAoB,GAApB;AACD;AACF,KAXD;AAaA,UAAM,mBAAmB,GAAG,eAAe,CAAC,eAAe,CAAC,MAAhB,EAAD,CAA3C;AACA,WAAO,2BAA2B,CAC9B,OAD8B,EACrB,KAAK,YADgB,EACF,YADE,EACY,SADZ,EACuB,SADvB,EACkC,kBADlC,EAE9B,eAF8B,EAEb,SAFa,EAEF,mBAFE,EAEmB,WAFnB,EAEgC,YAFhC,EAE8C,SAF9C,CAAlC;AAGD;;AAtEoC;;AAyEvC,SAAS,yBAAT,CACI,QADJ,EACqC,YADrC,EACwD,SADxD,EACwE,OADxE,EAEI,MAFJ,EAEgC;AAC9B,SAAO,QAAQ,CAAC,IAAT,CAAc,EAAE,IAAI,EAAE,CAAC,YAAD,EAAe,SAAf,EAA0B,OAA1B,EAAmC,MAAnC,CAAtB,CAAP;AACD;;AACD,MACa,oBADb,CACiC;AAC/B,EAAA,WAAA,CAAoB,MAApB,EAA8C,aAA9C,EAAiF;AAA7D,SAAA,MAAA,GAAA,MAAA;AAA0B,SAAA,aAAA,GAAA,aAAA;AAAuC;;AAErF,EAAA,WAAW,CAAC,MAAD,EAA+B,MAA/B,EAA+C;AACxD,UAAM,WAAW,GAAe,EAAhC;AACA,UAAM,cAAc,GAAG,OAAO,CAAC,KAAK,aAAN,CAA9B;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,GAAG,IAAA;AAC7B,YAAM,KAAK,GAAG,MAAM,CAAC,GAAD,CAApB;;AACA,UAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,QAAA,cAAc,CAAC,GAAD,CAAd,GAAsB,KAAtB;AACD;AACF,KALD;AAMA,SAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,CAA2B,KAAK,IAAA;AAC9B,UAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,cAAM,QAAQ,GAAG,KAAjB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,QAAZ,EAAsB,OAAtB,CAA8B,IAAI,IAAA;AAChC,cAAI,GAAG,GAAG,QAAQ,CAAC,IAAD,CAAlB;;AACA,cAAI,GAAG,CAAC,MAAJ,GAAa,CAAjB,EAAoB;AAClB,YAAA,GAAG,GAAG,iBAAiB,CAAC,GAAD,EAAM,cAAN,EAAsB,MAAtB,CAAvB;AACD;;AACD,UAAA,WAAW,CAAC,IAAD,CAAX,GAAoB,GAApB;AACD,SAND;AAOD;AACF,KAXD;AAYA,WAAO,WAAP;AACD;;AAzB8B;ACpFjC;;;;;AAGA,SAAgB,YAAhB,CAA6B,IAA7B,EAA2C,GAA3C,EAA0D;AACxD,SAAO,IAAI,gBAAJ,CAAqB,IAArB,EAA2B,GAA3B,CAAP;AACD;AAED;;;;;AAGA,MAAa,gBAAb,CAA6B;AAK3B,EAAA,WAAA,CAAmB,IAAnB,EAAwC,GAAxC,EAAuD;AAApC,SAAA,IAAA,GAAA,IAAA;AAAqB,SAAA,GAAA,GAAA,GAAA;AAJjC,SAAA,mBAAA,GAAoD,EAApD;AAEA,SAAA,MAAA,GAAsD,EAAtD;AAGL,IAAA,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAmB,GAAG,IAAA;AACpB,YAAM,aAAa,GAAI,GAAG,CAAC,OAAJ,IAAe,GAAG,CAAC,OAAJ,CAAY,MAA5B,IAAuC,EAA7D;AACA,WAAK,MAAL,CAAY,GAAG,CAAC,IAAhB,IAAwB,IAAI,oBAAJ,CAAyB,GAAG,CAAC,KAA7B,EAAoC,aAApC,CAAxB;AACD,KAHD;AAKA,IAAA,iBAAiB,CAAC,KAAK,MAAN,EAAc,MAAd,EAAsB,GAAtB,CAAjB;AACA,IAAA,iBAAiB,CAAC,KAAK,MAAN,EAAc,OAAd,EAAuB,GAAvB,CAAjB;AAEA,IAAA,GAAG,CAAC,WAAJ,CAAgB,OAAhB,CAAwB,GAAG,IAAA;AACzB,WAAK,mBAAL,CAAyB,IAAzB,CAA8B,IAAI,0BAAJ,CAA+B,IAA/B,EAAqC,GAArC,EAA0C,KAAK,MAA/C,CAA9B;AACD,KAFD;AAIA,SAAK,kBAAL,GAA0B,wBAAwB,CAAC,IAAD,EAAO,KAAK,MAAZ,CAAlD;AACD;;AAED,MAAI,eAAJ,GAAmB;AACjB,WAAO,KAAK,GAAL,CAAS,UAAT,GAAsB,CAA7B;AACD;;AAED,EAAA,eAAe,CAAC,YAAD,EAAoB,SAApB,EAAoC,OAApC,EAAkD,MAAlD,EAA8E;AAE3F,UAAM,KAAK,GACP,KAAK,mBAAL,CAAyB,IAAzB,CAA8B,CAAC,IAAI,CAAC,CAAC,KAAF,CAAQ,YAAR,EAAsB,SAAtB,EAAiC,OAAjC,EAA0C,MAA1C,CAAnC,CADJ;AAEA,WAAO,KAAK,IAAI,IAAhB;AACD;;AAED,EAAA,WAAW,CAAC,YAAD,EAAoB,MAApB,EAAkD,MAAlD,EAA+D;AACxE,WAAO,KAAK,kBAAL,CAAwB,WAAxB,CAAoC,YAApC,EAAkD,MAAlD,EAA0D,MAA1D,CAAP;AACD;;AAlC0B;;AAqC7B,SAAS,wBAAT,CACI,WADJ,EAEI,MAFJ,EAEuD;AACrD,QAAM,QAAQ,GAAG,CAAC,CAAC,SAAD,EAAiB,OAAjB,KAAkC,IAAnC,CAAjB;AACA,QAAM,SAAS,GAAgB;AAAC,IAAA,IAAI,EAAA;AAAA;AAAL;AAAuC,IAAA,KAAK,EAAE,EAA9C;AAAkD,IAAA,OAAO,EAAE;AAA3D,GAA/B;AACA,QAAM,UAAU,GAAkB;AAChC,IAAA,IAAI,EAAA;AAAA;AAD4B;AAEhC,IAAA,SAFgC;AAGhC,IAAA,QAHgC;AAIhC,IAAA,OAAO,EAAE,IAJuB;AAKhC,IAAA,UAAU,EAAE,CALoB;AAMhC,IAAA,QAAQ,EAAE;AANsB,GAAlC;AAQA,SAAO,IAAI,0BAAJ,CAA+B,WAA/B,EAA4C,UAA5C,EAAwD,MAAxD,CAAP;AACD;;AAED,SAAS,iBAAT,CAA2B,GAA3B,EAAsD,IAAtD,EAAoE,IAApE,EAAgF;AAC9E,MAAI,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAJ,EAA8B;AAC5B,QAAI,CAAC,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAL,EAA+B;AAC7B,MAAA,GAAG,CAAC,IAAD,CAAH,GAAY,GAAG,CAAC,IAAD,CAAf;AACD;AACF,GAJD,MAIO,IAAI,GAAG,CAAC,cAAJ,CAAmB,IAAnB,CAAJ,EAA8B;AACnC,IAAA,GAAG,CAAC,IAAD,CAAH,GAAY,GAAG,CAAC,IAAD,CAAf;AACD;AACH;ACvFA;;;;;;;;;AAoBA,MAAM,qBAAqB,GAAG,IAAI,qBAAJ,EAA9B;;AACA,MACa,uBADb,CACoC;AAKlC,EAAA,WAAA,CACW,QADX,EACkC,OADlC,EAEY,WAFZ,EAEiD;AADtC,SAAA,QAAA,GAAA,QAAA;AAAuB,SAAA,OAAA,GAAA,OAAA;AACtB,SAAA,WAAA,GAAA,WAAA;AANJ,SAAA,WAAA,GAA0D,EAA1D;AACA,SAAA,YAAA,GAAgD,EAAhD;AACD,SAAA,OAAA,GAA6B,EAA7B;AAI8C;;AAErD,EAAA,QAAQ,CAAC,EAAD,EAAa,QAAb,EAA4D;AAClE,UAAM,MAAM,GAAU,EAAtB;AACA,UAAM,GAAG,GAAG,iBAAiB,CAAC,KAAK,OAAN,EAAe,QAAf,EAAyB,MAAzB,CAA7B;;AACA,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,YAAM,IAAI,KAAJ,CACF,8DAA8D,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,EAD7E,CAAN;AAED,KAHD,MAGO;AACL,WAAK,WAAL,CAAiB,EAAjB,IAAuB,GAAvB;AACD;AACF;;AAEO,EAAA,YAAY,CAChB,CADgB,EACiB,SADjB,EAEhB,UAFgB,EAEO;AACzB,UAAM,OAAO,GAAG,CAAC,CAAC,OAAlB;AACA,UAAM,SAAS,GAAG,kBAAkB,CAChC,KAAK,OAD2B,EAClB,KAAK,WADa,EACA,OADA,EACS,CAAC,CAAC,SADX,EACsB,SADtB,EACiC,UADjC,CAApC;AAEA,WAAO,KAAK,OAAL,CAAa,OAAb,CAAqB,OAArB,EAA8B,SAA9B,EAAyC,CAAC,CAAC,QAA3C,EAAqD,CAAC,CAAC,KAAvD,EAA8D,CAAC,CAAC,MAAhE,EAAwE,EAAxE,EAA4E,IAA5E,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAa,OAAb,EAA2B,OAAA,GAA4B,EAAvD,EAAyD;AAC7D,UAAM,MAAM,GAAU,EAAtB;AACA,UAAM,GAAG,GAAG,KAAK,WAAL,CAAiB,EAAjB,CAAZ;AACA,QAAI,YAAJ;AAEA,UAAM,aAAa,GAAG,IAAI,GAAJ,EAAtB;;AAEA,QAAI,GAAJ,EAAS;AACP,MAAA,YAAY,GAAG,uBAAuB,CAClC,KAAK,OAD6B,EACpB,OADoB,EACX,GADW,EACN,eADM,EACW,eADX,EAC4B,EAD5B,EACgC,EADhC,EACoC,OADpC,EAElC,qBAFkC,EAEX,MAFW,CAAtC;AAGA,MAAA,YAAY,CAAC,OAAb,CAAqB,IAAI,IAAA;AACvB,cAAM,MAAM,GAAG,eAAe,CAAC,aAAD,EAAgB,IAAI,CAAC,OAArB,EAA8B,EAA9B,CAA9B;AACA,QAAA,IAAI,CAAC,cAAL,CAAoB,OAApB,CAA4B,IAAI,IAAI,MAAM,CAAC,IAAD,CAAN,GAAe,IAAnD;AACD,OAHD;AAID,KARD,MAQO;AACL,MAAA,MAAM,CAAC,IAAP,CAAY,sEAAZ;AACA,MAAA,YAAY,GAAG,EAAf;AACD;;AAED,QAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,YAAM,IAAI,KAAJ,CACF,+DAA+D,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,EAD9E,CAAN;AAED;;AAED,IAAA,aAAa,CAAC,OAAd,CAAsB,CAAC,MAAD,EAAS,OAAT,KAAgB;AACpC,MAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAA;AAC9B,QAAA,MAAM,CAAC,IAAD,CAAN,GAAe,KAAK,OAAL,CAAa,YAAb,CAA0B,OAA1B,EAAmC,IAAnC,EAAyC,UAAzC,CAAf;AACD,OAFD;AAGD,KAJD;AAMA,UAAM,OAAO,GAAG,YAAY,CAAC,GAAb,CAAiB,CAAC,IAAA;AAChC,YAAM,MAAM,GAAG,aAAa,CAAC,GAAd,CAAkB,CAAC,CAAC,OAApB,CAAf;AACA,aAAO,KAAK,YAAL,CAAkB,CAAlB,EAAqB,EAArB,EAAyB,MAAzB,CAAP;AACD,KAHe,CAAhB;AAIA,UAAM,MAAM,GAAG,mBAAmB,CAAC,OAAD,CAAlC;AACA,SAAK,YAAL,CAAkB,EAAlB,IAAwB,MAAxB;AACA,IAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,KAAK,OAAL,CAAa,EAAb,CAAvB;AAEA,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB;AACA,WAAO,MAAP;AACD;;AAED,EAAA,OAAO,CAAC,EAAD,EAAW;AAChB,UAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,EAAhB,CAAf;;AACA,IAAA,MAAM,CAAC,OAAP;AACA,WAAO,KAAK,YAAL,CAAkB,EAAlB,CAAP;AACA,UAAM,KAAK,GAAG,KAAK,OAAL,CAAa,OAAb,CAAqB,MAArB,CAAd;;AACA,QAAI,KAAK,IAAI,CAAb,EAAgB;AACd,WAAK,OAAL,CAAa,MAAb,CAAoB,KAApB,EAA2B,CAA3B;AACD;AACF;;AAEO,EAAA,UAAU,CAAC,EAAD,EAAW;AAC3B,UAAM,MAAM,GAAG,KAAK,YAAL,CAAkB,EAAlB,CAAf;;AACA,QAAI,CAAC,MAAL,EAAa;AACX,YAAM,IAAI,KAAJ,CAAU,oDAAoD,EAAE,EAAhE,CAAN;AACD;;AACD,WAAO,MAAP;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAa,OAAb,EAA8B,SAA9B,EAAiD,QAAjD,EAA8E;AACrF;AAEG,UAAM,SAAS,GAAG,kBAAkB,CAAC,OAAD,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,CAApC;AACA,IAAA,cAAc,CAAC,KAAK,UAAL,CAAgB,EAAhB,CAAD,EAAsB,SAAtB,EAAiC,SAAjC,EAA4C,QAA5C,CAAd;AACA,WAAO,MAAA,CAAQ,CAAf;AACD;;AAED,EAAA,OAAO,CAAC,EAAD,EAAa,OAAb,EAA2B,OAA3B,EAA4C,IAA5C,EAAuD;AAC5D,QAAI,OAAO,IAAI,UAAf,EAA2B;AACzB,WAAK,QAAL,CAAc,EAAd,EAAkB,IAAI,CAAC,CAAD,CAAtB;AACA;AACD;;AAED,QAAI,OAAO,IAAI,QAAf,EAAyB;AACvB,YAAM,OAAO,GAAI,IAAI,CAAC,CAAD,CAAJ,IAAW,EAA5B;AACA,WAAK,MAAL,CAAY,EAAZ,EAAgB,OAAhB,EAAyB,OAAzB;AACA;AACD;;AAED,UAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,EAAhB,CAAf;;AACA,YAAQ,OAAR;AACE,WAAK,MAAL;AACE,QAAA,MAAM,CAAC,IAAP;AACA;;AACF,WAAK,OAAL;AACE,QAAA,MAAM,CAAC,KAAP;AACA;;AACF,WAAK,OAAL;AACE,QAAA,MAAM,CAAC,KAAP;AACA;;AACF,WAAK,SAAL;AACE,QAAA,MAAM,CAAC,OAAP;AACA;;AACF,WAAK,QAAL;AACE,QAAA,MAAM,CAAC,MAAP;AACA;;AACF,WAAK,MAAL;AACE,QAAA,MAAM,CAAC,IAAP;AACA;;AACF,WAAK,aAAL;AACE,QAAA,MAAM,CAAC,WAAP,CAAmB,UAAU,CAAC,IAAI,CAAC,CAAD,CAAL,CAA7B;AACA;;AACF,WAAK,SAAL;AACE,aAAK,OAAL,CAAa,EAAb;AACA;AAxBJ;AA0BD;;AAzIiC;ACtBpC;;;;;;;;;AAoBA,MAAM,gBAAgB,GAAG,mBAAzB;AACA,MAAM,eAAe,GAAG,oBAAxB;AACA,MAAM,kBAAkB,GAAG,qBAA3B;AACA,MAAM,iBAAiB,GAAG,sBAA1B;AACA,MAAM,cAAc,GAAG,kBAAvB;AACA,MAAM,aAAa,GAAG,mBAAtB;AAEA,MAAM,kBAAkB,GAAgC,EAAxD;AACA,MAAM,kBAAkB,GAA0B;AAChD,EAAA,WAAW,EAAE,EADmC;AAEhD,EAAA,aAAa,EAAE,KAFiC;AAGhD,EAAA,UAAU,EAAE,KAHoC;AAIhD,EAAA,YAAY,EAAE,KAJkC;AAKhD,EAAA,oBAAoB,EAAE;AAL0B,CAAlD;AAOA,MAAM,0BAA0B,GAA0B;AACxD,EAAA,WAAW,EAAE,EAD2C;AAExD,EAAA,UAAU,EAAE,KAF4C;AAGxD,EAAA,aAAa,EAAE,KAHyC;AAIxD,EAAA,YAAY,EAAE,KAJ0C;AAKxD,EAAA,oBAAoB,EAAE;AALkC,CAA1D;AAwBO,MAAM,YAAY,GAAG,cAArB;;AACP,MASa,UATb,CASuB;AAQrB,EAAA,WAAA,CAAY,KAAZ,EAA+B,WAAA,GAAsB,EAArD,EAAuD;AAAxB,SAAA,WAAA,GAAA,WAAA;AAC7B,UAAM,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,cAAN,CAAqB,OAArB,CAAvB;AACA,UAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,OAAD,CAAR,GAAoB,KAAvC;AACA,SAAK,KAAL,GAAa,qBAAqB,CAAC,KAAD,CAAlC;;AACA,QAAI,KAAJ,EAAW;AACT,YAAM,OAAO,GAAG,OAAO,CAAC,KAAD,CAAvB;AACA,aAAO,OAAO,CAAC,OAAD,CAAd;AACA,WAAK,OAAL,GAAe,OAAf;AACD,KAJD,MAIO;AACL,WAAK,OAAL,GAAe,EAAf;AACD;;AACD,QAAI,CAAC,KAAK,OAAL,CAAa,MAAlB,EAA0B;AACxB,WAAK,OAAL,CAAa,MAAb,GAAsB,EAAtB;AACD;AACF;;AAlBD,MAAI,MAAJ,GAAU;AACR,WAAO,KAAK,OAAL,CAAa,MAApB;AACD;;AAkBD,EAAA,aAAa,CAAC,OAAD,EAA0B;AACrC,UAAM,SAAS,GAAG,OAAO,CAAC,MAA1B;;AACA,QAAI,SAAJ,EAAe;AACb,YAAM,SAAS,GAAG,KAAK,OAAL,CAAa,MAA/B;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,SAAZ,EAAuB,OAAvB,CAA+B,IAAI,IAAA;AACjC,YAAI,SAAS,CAAC,IAAD,CAAT,IAAmB,IAAvB,EAA6B;AAC3B,UAAA,SAAS,CAAC,IAAD,CAAT,GAAkB,SAAS,CAAC,IAAD,CAA3B;AACD;AACF,OAJD;AAKD;AACF;;AAlCoB;;AAqChB,MAAM,UAAU,GAAG,MAAnB;AACA,MAAM,mBAAmB,GAAG,IAAI,UAAJ,CAAe,UAAf,CAA5B;;AACP,MACa,4BADb,CACyC;AAUvC,EAAA,WAAA,CACW,EADX,EAC8B,WAD9B,EACwD,OADxD,EAC0F;AAA/E,SAAA,EAAA,GAAA,EAAA;AAAmB,SAAA,WAAA,GAAA,WAAA;AAA0B,SAAA,OAAA,GAAA,OAAA;AAVjD,SAAA,OAAA,GAAuC,EAAvC;AAEC,SAAA,SAAA,GAAuD,EAAvD;AACA,SAAA,MAAA,GAA6B,EAA7B;AAEA,SAAA,iBAAA,GAAoB,IAAI,GAAJ,EAApB;AAMN,SAAK,cAAL,GAAsB,YAAY,EAAlC;AACA,IAAA,QAAQ,CAAC,WAAD,EAAc,KAAK,cAAnB,CAAR;AACD;;AAED,EAAA,MAAM,CAAC,OAAD,EAAe,IAAf,EAA6B,KAA7B,EAA4C,QAA5C,EAA6E;AACjF,QAAI,CAAC,KAAK,SAAL,CAAe,cAAf,CAA8B,IAA9B,CAAL,EAA0C;AACxC,YAAM,IAAI,KAAJ,CAAU,oDACZ,KAAK,oCAAoC,IAAI,mBAD3C,CAAN;AAED;;AAED,QAAI,KAAK,IAAI,IAAT,IAAiB,KAAK,CAAC,MAAN,IAAgB,CAArC,EAAwC;AACtC,YAAM,IAAI,KAAJ,CAAU,8CACZ,IAAI,4CADF,CAAN;AAED;;AAED,QAAI,CAAC,mBAAmB,CAAC,KAAD,CAAxB,EAAiC;AAC/B,YAAM,IAAI,KAAJ,CAAU,yCAAyC,KAAK,gCAC1D,IAAI,qBADF,CAAN;AAED;;AAED,UAAM,SAAS,GAAG,eAAe,CAAC,KAAK,iBAAN,EAAyB,OAAzB,EAAkC,EAAlC,CAAjC;AACA,UAAM,IAAI,GAAG;AAAC,MAAA,IAAD;AAAO,MAAA,KAAP;AAAc,MAAA;AAAd,KAAb;AACA,IAAA,SAAS,CAAC,IAAV,CAAe,IAAf;AAEA,UAAM,kBAAkB,GAAG,eAAe,CAAC,KAAK,OAAL,CAAa,eAAd,EAA+B,OAA/B,EAAwC,EAAxC,CAA1C;;AACA,QAAI,CAAC,kBAAkB,CAAC,cAAnB,CAAkC,IAAlC,CAAL,EAA8C;AAC5C,MAAA,QAAQ,CAAC,OAAD,EAAU,oBAAV,CAAR;AACA,MAAA,QAAQ,CAAC,OAAD,EAAU,oBAAoB,GAAG,GAAvB,GAA6B,IAAvC,CAAR;AACA,MAAA,kBAAkB,CAAC,IAAD,CAAlB,GAA2B,mBAA3B;AACD;;AAED,WAAO,MAAA;AACX;AACM;AACM;AACN,WAAK,OAAL,CAAa,UAAb,CAAwB,MAAA;AACtB,cAAM,KAAK,GAAG,SAAS,CAAC,OAAV,CAAkB,IAAlB,CAAd;;AACA,YAAI,KAAK,IAAI,CAAb,EAAgB;AACd,UAAA,SAAS,CAAC,MAAV,CAAiB,KAAjB,EAAwB,CAAxB;AACD;;AAED,YAAI,CAAC,KAAK,SAAL,CAAe,IAAf,CAAL,EAA2B;AACzB,iBAAO,kBAAkB,CAAC,IAAD,CAAzB;AACD;AACF,OATD;AAUD,KAdD;AAeD;;AAED,EAAA,QAAQ,CAAC,IAAD,EAAe,GAAf,EAAoC;AAC1C,QAAI,KAAK,SAAL,CAAe,IAAf,CAAJ,EAA0B;AAC9B;AACM,aAAO,KAAP;AACD,KAHD,MAGO;AACL,WAAK,SAAL,CAAe,IAAf,IAAuB,GAAvB;AACA,aAAO,IAAP;AACD;AACF;;AAEO,EAAA,WAAW,CAAC,IAAD,EAAa;AAC9B,UAAM,OAAO,GAAG,KAAK,SAAL,CAAe,IAAf,CAAhB;;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,YAAM,IAAI,KAAJ,CAAU,mCAAmC,IAAI,4BAAjD,CAAN;AACD;;AACD,WAAO,OAAP;AACD;;AAED,EAAA,OAAO,CAAC,OAAD,EAAe,WAAf,EAAoC,KAApC,EAAgD,iBAAA,GAA6B,IAA7E,EAAiF;AAEtF,UAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,WAAjB,CAAhB;;AACA,UAAM,MAAM,GAAG,IAAI,yBAAJ,CAA8B,KAAK,EAAnC,EAAuC,WAAvC,EAAoD,OAApD,CAAf;;AAEA,QAAI,kBAAkB,GAAG,KAAK,OAAL,CAAa,eAAb,CAA6B,GAA7B,CAAiC,OAAjC,CAAzB;;AACA,QAAI,CAAC,kBAAL,EAAyB;AACvB,MAAA,QAAQ,CAAC,OAAD,EAAU,oBAAV,CAAR;AACA,MAAA,QAAQ,CAAC,OAAD,EAAU,oBAAoB,GAAG,GAAvB,GAA6B,WAAvC,CAAR;;AACA,WAAK,OAAL,CAAa,eAAb,CAA6B,GAA7B,CAAiC,OAAjC,EAA0C,kBAAkB,GAAG,EAA/D;AACD;;AAED,QAAI,SAAS,GAAG,kBAAkB,CAAC,WAAD,CAAlC;AACA,UAAM,OAAO,GAAG,IAAI,UAAJ,CAAe,KAAf,EAAsB,KAAK,EAA3B,CAAhB;AAEA,UAAM,KAAK,GAAG,KAAK,IAAI,KAAK,CAAC,cAAN,CAAqB,OAArB,CAAvB;;AACA,QAAI,CAAC,KAAD,IAAU,SAAd,EAAyB;AACvB,MAAA,OAAO,CAAC,aAAR,CAAsB,SAAS,CAAC,OAAhC;AACD;;AAED,IAAA,kBAAkB,CAAC,WAAD,CAAlB,GAAkC,OAAlC;;AAEA,QAAI,CAAC,SAAL,EAAgB;AACd,MAAA,SAAS,GAAG,mBAAZ;AACD;;AAED,UAAM,SAAS,GAAG,OAAO,CAAC,KAAR,KAAkB,UAApC,CA1BsF,CA2B1F;AAEG;AACI;AACI;AACI;AACI;;AACf,QAAI,CAAC,SAAD,IAAc,SAAS,CAAC,KAAV,KAAoB,OAAO,CAAC,KAA9C,EAAqD;AACzD;AACM;AACA,UAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAX,EAAmB,OAAO,CAAC,MAA3B,CAAd,EAAkD;AAChD,cAAM,MAAM,GAAU,EAAtB;AACA,cAAM,UAAU,GAAG,OAAO,CAAC,WAAR,CAAoB,SAAS,CAAC,KAA9B,EAAqC,SAAS,CAAC,MAA/C,EAAuD,MAAvD,CAAnB;AACA,cAAM,QAAQ,GAAG,OAAO,CAAC,WAAR,CAAoB,OAAO,CAAC,KAA5B,EAAmC,OAAO,CAAC,MAA3C,EAAmD,MAAnD,CAAjB;;AACA,YAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,eAAK,OAAL,CAAa,WAAb,CAAyB,MAAzB;AACD,SAFD,MAEO;AACL,eAAK,OAAL,CAAa,UAAb,CAAwB,MAAA;AACtB,YAAA,WAAW,CAAC,OAAD,EAAU,UAAV,CAAX;AACA,YAAA,SAAS,CAAC,OAAD,EAAU,QAAV,CAAT;AACD,WAHD;AAID;AACF;;AACD;AACD;;AAED,UAAM,gBAAgB,GAClB,eAAe,CAAC,KAAK,OAAL,CAAa,gBAAd,EAAgC,OAAhC,EAAyC,EAAzC,CADnB;AAEA,IAAA,gBAAgB,CAAC,OAAjB,CAAyB,MAAM,IAAA;AACnC;AACM;AACM;AACM;AACZ,UAAI,MAAM,CAAC,WAAP,IAAsB,KAAK,EAA3B,IAAiC,MAAM,CAAC,WAAP,IAAsB,WAAvD,IAAsE,MAAM,CAAC,MAAjF,EAAyF;AACvF,QAAA,MAAM,CAAC,OAAP;AACD;AACF,KARD;AAUA,QAAI,UAAU,GACV,OAAO,CAAC,eAAR,CAAwB,SAAS,CAAC,KAAlC,EAAyC,OAAO,CAAC,KAAjD,EAAwD,OAAxD,EAAiE,OAAO,CAAC,MAAzE,CADJ;AAEA,QAAI,oBAAoB,GAAG,KAA3B;;AACA,QAAI,CAAC,UAAL,EAAiB;AACf,UAAI,CAAC,iBAAL,EAAwB;AACxB,MAAA,UAAU,GAAG,OAAO,CAAC,kBAArB;AACA,MAAA,oBAAoB,GAAG,IAAvB;AACD;;AAED,SAAK,OAAL,CAAa,kBAAb;;AACA,SAAK,MAAL,CAAY,IAAZ,CACI;AAAC,MAAA,OAAD;AAAU,MAAA,WAAV;AAAuB,MAAA,UAAvB;AAAmC,MAAA,SAAnC;AAA8C,MAAA,OAA9C;AAAuD,MAAA,MAAvD;AAA+D,MAAA;AAA/D,KADJ;;AAGA,QAAI,CAAC,oBAAL,EAA2B;AACzB,MAAA,QAAQ,CAAC,OAAD,EAAU,gBAAV,CAAR;AACA,MAAA,MAAM,CAAC,OAAP,CAAe,MAAA;AACb,QAAA,WAAW,CAAC,OAAD,EAAU,gBAAV,CAAX;AACD,OAFD;AAGD;;AAED,IAAA,MAAM,CAAC,MAAP,CAAc,MAAA;AACZ,UAAI,KAAK,GAAG,KAAK,OAAL,CAAa,OAAb,CAAqB,MAArB,CAAZ;;AACA,UAAI,KAAK,IAAI,CAAb,EAAgB;AACd,aAAK,OAAL,CAAa,MAAb,CAAoB,KAApB,EAA2B,CAA3B;AACD;;AAED,YAAM,OAAO,GAAG,KAAK,OAAL,CAAa,gBAAb,CAA8B,GAA9B,CAAkC,OAAlC,CAAhB;;AACA,UAAI,OAAJ,EAAa;AACX,YAAI,KAAK,GAAG,OAAO,CAAC,OAAR,CAAgB,MAAhB,CAAZ;;AACA,YAAI,KAAK,IAAI,CAAb,EAAgB;AACd,UAAA,OAAO,CAAC,MAAR,CAAe,KAAf,EAAsB,CAAtB;AACD;AACF;AACF,KAbD;AAeA,SAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB;AACA,IAAA,gBAAgB,CAAC,IAAjB,CAAsB,MAAtB;AAEA,WAAO,MAAP;AACD;;AAED,EAAA,UAAU,CAAC,IAAD,EAAa;AACrB,WAAO,KAAK,SAAL,CAAe,IAAf,CAAP;;AAEA,SAAK,OAAL,CAAa,eAAb,CAA6B,OAA7B,CAAqC,CAAC,QAAD,EAAW,OAAX,KAAkB;AACrD,aAAO,QAAQ,CAAC,IAAD,CAAf;AACD,KAFD;;AAIA,SAAK,iBAAL,CAAuB,OAAvB,CAA+B,CAAC,SAAD,EAAY,OAAZ,KAAmB;AAChD,WAAK,iBAAL,CAAuB,GAAvB,CAA2B,OAA3B,EAAoC,SAAS,CAAC,MAAV,CAAiB,KAAK,IAAA;AACxD,eAAO,KAAK,CAAC,IAAN,IAAc,IAArB;AACD,OAFmC,CAApC;AAGD,KAJD;AAKD;;AAED,EAAA,iBAAiB,CAAC,OAAD,EAAa;AAC5B,SAAK,OAAL,CAAa,eAAb,CAA6B,MAA7B,CAAoC,OAApC;;AACA,SAAK,iBAAL,CAAuB,MAAvB,CAA8B,OAA9B;;AACA,UAAM,cAAc,GAAG,KAAK,OAAL,CAAa,gBAAb,CAA8B,GAA9B,CAAkC,OAAlC,CAAvB;;AACA,QAAI,cAAJ,EAAoB;AAClB,MAAA,cAAc,CAAC,OAAf,CAAuB,MAAM,IAAI,MAAM,CAAC,OAAP,EAAjC;;AACA,WAAK,OAAL,CAAa,gBAAb,CAA8B,MAA9B,CAAqC,OAArC;AACD;AACF;;AAEO,EAAA,8BAA8B,CAAC,WAAD,EAAmB,OAAnB,EAA+B;AACnE,UAAM,QAAQ,GAAG,KAAK,OAAL,CAAa,MAAb,CAAoB,KAApB,CAA0B,WAA1B,EAAuC,mBAAvC,EAA4D,IAA5D,CAAjB,CADmE,CAEvE;AAEG;AACI;;;AACH,IAAA,QAAQ,CAAC,OAAT,CAAiB,GAAG,IAAA;AACxB;AACM;AACA,UAAI,GAAG,CAAC,YAAD,CAAP,EAAuB;;AAEvB,YAAM,UAAU,GAAG,KAAK,OAAL,CAAa,wBAAb,CAAsC,GAAtC,CAAnB;;AACA,UAAI,UAAU,CAAC,IAAf,EAAqB;AACnB,QAAA,UAAU,CAAC,OAAX,CAAmB,EAAE,IAAI,EAAE,CAAC,qBAAH,CAAyB,GAAzB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,IAA9C,CAAzB;AACD,OAFD,MAEO;AACL,aAAK,iBAAL,CAAuB,GAAvB;AACD;AACF,KAXD,EANmE,CAkBvE;AAEG;;AACC,SAAK,OAAL,CAAa,wBAAb,CACI,MAAM,QAAQ,CAAC,OAAT,CAAiB,GAAG,IAAI,KAAK,iBAAL,CAAuB,GAAvB,CAAxB,CADV;AAED;;AAED,EAAA,qBAAqB,CACjB,OADiB,EACH,OADG,EACW,oBADX,EAEjB,iBAFiB,EAEU;AAC7B,UAAM,aAAa,GAAG,KAAK,OAAL,CAAa,eAAb,CAA6B,GAA7B,CAAiC,OAAjC,CAAtB;;AACA,QAAI,aAAJ,EAAmB;AACjB,YAAM,OAAO,GAAgC,EAA7C;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,aAAZ,EAA2B,OAA3B,CAAmC,WAAW,IAAA;AACpD;AACQ;AACA,YAAI,KAAK,SAAL,CAAe,WAAf,CAAJ,EAAiC;AAC/B,gBAAM,MAAM,GAAG,KAAK,OAAL,CAAa,OAAb,EAAsB,WAAtB,EAAmC,UAAnC,EAA+C,iBAA/C,CAAf;;AACA,cAAI,MAAJ,EAAY;AACV,YAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD;AACF;AACF,OATD;;AAWA,UAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,aAAK,OAAL,CAAa,oBAAb,CAAkC,KAAK,EAAvC,EAA2C,OAA3C,EAAoD,IAApD,EAA0D,OAA1D;;AACA,YAAI,oBAAJ,EAA0B;AACxB,UAAA,mBAAmB,CAAC,OAAD,CAAnB,CAA6B,MAA7B,CAAoC,MAAM,KAAK,OAAL,CAAa,gBAAb,CAA8B,OAA9B,CAA1C;AACD;;AACD,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAED,EAAA,8BAA8B,CAAC,OAAD,EAAa;AACzC,UAAM,SAAS,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,OAA3B,CAAlB;;AACA,QAAI,SAAJ,EAAe;AACb,YAAM,eAAe,GAAG,IAAI,GAAJ,EAAxB;AACA,MAAA,SAAS,CAAC,OAAV,CAAkB,QAAQ,IAAA;AACxB,cAAM,WAAW,GAAG,QAAQ,CAAC,IAA7B;AACA,YAAI,eAAe,CAAC,GAAhB,CAAoB,WAApB,CAAJ,EAAsC;AACtC,QAAA,eAAe,CAAC,GAAhB,CAAoB,WAApB;AAEA,cAAM,OAAO,GAAG,KAAK,SAAL,CAAe,WAAf,CAAhB;AACA,cAAM,UAAU,GAAG,OAAO,CAAC,kBAA3B;;AACA,cAAM,aAAa,GAAG,KAAK,OAAL,CAAa,eAAb,CAA6B,GAA7B,CAAiC,OAAjC,CAAtB;;AACA,cAAM,SAAS,GAAG,aAAa,CAAC,WAAD,CAAb,IAA8B,mBAAhD;AACA,cAAM,OAAO,GAAG,IAAI,UAAJ,CAAe,UAAf,CAAhB;AACA,cAAM,MAAM,GAAG,IAAI,yBAAJ,CAA8B,KAAK,EAAnC,EAAuC,WAAvC,EAAoD,OAApD,CAAf;AAEA,aAAK,OAAL,CAAa,kBAAb;;AACA,aAAK,MAAL,CAAY,IAAZ,CAAiB;AACf,UAAA,OADe;AAEf,UAAA,WAFe;AAGf,UAAA,UAHe;AAIf,UAAA,SAJe;AAKf,UAAA,OALe;AAMf,UAAA,MANe;AAOf,UAAA,oBAAoB,EAAE;AAPP,SAAjB;AASD,OAtBD;AAuBD;AACF;;AAED,EAAA,UAAU,CAAC,OAAD,EAAe,OAAf,EAA2B;AACnC,UAAM,MAAM,GAAG,KAAK,OAApB;;AAEA,QAAI,OAAO,CAAC,iBAAZ,EAA+B;AAC7B,WAAK,8BAAL,CAAoC,OAApC,EAA6C,OAA7C;AACD,KALkC,CAMvC;;;AAEI,QAAI,KAAK,qBAAL,CAA2B,OAA3B,EAAoC,OAApC,EAA6C,IAA7C,CAAJ,EAAwD,OARrB,CASvC;AAEG;;AACC,QAAI,iCAAiC,GAAG,KAAxC;;AACA,QAAI,MAAM,CAAC,eAAX,EAA4B;AAC1B,YAAM,cAAc,GAChB,MAAM,CAAC,OAAP,CAAe,MAAf,GAAwB,MAAM,CAAC,uBAAP,CAA+B,GAA/B,CAAmC,OAAnC,CAAxB,GAAsE,EAD1E,CAD0B,CAGhC;AAEK;AACM;AACM;;AACX,UAAI,cAAc,IAAI,cAAc,CAAC,MAArC,EAA6C;AAC3C,QAAA,iCAAiC,GAAG,IAApC;AACD,OAFD,MAEO;AACL,YAAI,MAAM,GAAG,OAAb;;AACA,eAAO,MAAM,GAAG,MAAM,CAAC,UAAvB,EAAmC;AACjC,gBAAM,QAAQ,GAAG,MAAM,CAAC,eAAP,CAAuB,GAAvB,CAA2B,MAA3B,CAAjB;;AACA,cAAI,QAAJ,EAAc;AACZ,YAAA,iCAAiC,GAAG,IAApC;AACA;AACD;AACF;AACF;AACF,KAjCkC,CAkCvC;AAEG;AACI;AACI;;;AACP,SAAK,8BAAL,CAAoC,OAApC,EAvCmC,CAwCvC;AAEG;;AACC,QAAI,iCAAJ,EAAuC;AACrC,MAAA,MAAM,CAAC,oBAAP,CAA4B,KAAK,EAAjC,EAAqC,OAArC,EAA8C,KAA9C,EAAqD,OAArD;AACD,KAFD,MAEO;AACL,YAAM,WAAW,GAAG,OAAO,CAAC,YAAD,CAA3B;;AACA,UAAI,CAAC,WAAD,IAAgB,WAAW,KAAK,kBAApC,EAAwD;AAC9D;AACQ;AACA,QAAA,MAAM,CAAC,UAAP,CAAkB,MAAM,KAAK,iBAAL,CAAuB,OAAvB,CAAxB;AACA,QAAA,MAAM,CAAC,sBAAP,CAA8B,OAA9B;;AACA,QAAA,MAAM,CAAC,kBAAP,CAA0B,OAA1B,EAAmC,OAAnC;AACD;AACF;AACF;;AAED,EAAA,UAAU,CAAC,OAAD,EAAe,MAAf,EAA0B;AAClC,IAAA,QAAQ,CAAC,OAAD,EAAU,KAAK,cAAf,CAAR;AACD;;AAED,EAAA,sBAAsB,CAAC,WAAD,EAAoB;AACxC,UAAM,YAAY,GAAuB,EAAzC;;AACA,SAAK,MAAL,CAAY,OAAZ,CAAoB,KAAK,IAAA;AACvB,YAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,UAAI,MAAM,CAAC,SAAX,EAAsB;AAEtB,YAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AACA,YAAM,SAAS,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,OAA3B,CAAlB;;AACA,UAAI,SAAJ,EAAe;AACb,QAAA,SAAS,CAAC,OAAV,CAAmB,QAAD,IAA0B;AAC1C,cAAI,QAAQ,CAAC,IAAT,IAAiB,KAAK,CAAC,WAA3B,EAAwC;AACtC,kBAAM,SAAS,GAAG,kBAAkB,CAChC,OADgC,EACvB,KAAK,CAAC,WADiB,EACJ,KAAK,CAAC,SAAN,CAAgB,KADZ,EACmB,KAAK,CAAC,OAAN,CAAc,KADjC,CAApC;AAEC,YAAA,SAAiB,CAAC,OAAD,CAAjB,GAA6B,WAA7B;AACD,YAAA,cAAc,CAAC,KAAK,CAAC,MAAP,EAAe,QAAQ,CAAC,KAAxB,EAA+B,SAA/B,EAA0C,QAAQ,CAAC,QAAnD,CAAd;AACD;AACF,SAPD;AAQD;;AAED,UAAI,MAAM,CAAC,gBAAX,EAA6B;AAC3B,aAAK,OAAL,CAAa,UAAb,CAAwB,MAAA;AAChC;AACU;AACA,UAAA,MAAM,CAAC,OAAP;AACD,SAJD;AAKD,OAND,MAMO;AACL,QAAA,YAAY,CAAC,IAAb,CAAkB,KAAlB;AACD;AACF,KA1BD;;AA4BA,SAAK,MAAL,GAAc,EAAd;AAEA,WAAO,YAAY,CAAC,IAAb,CAAkB,CAAC,CAAD,EAAI,CAAJ,KAAK;AAClC;AACM;AACA,YAAM,EAAE,GAAG,CAAC,CAAC,UAAF,CAAa,GAAb,CAAiB,QAA5B;AACA,YAAM,EAAE,GAAG,CAAC,CAAC,UAAF,CAAa,GAAb,CAAiB,QAA5B;;AACA,UAAI,EAAE,IAAI,CAAN,IAAW,EAAE,IAAI,CAArB,EAAwB;AACtB,eAAO,EAAE,GAAG,EAAZ;AACD;;AACD,aAAO,KAAK,OAAL,CAAa,MAAb,CAAoB,eAApB,CAAoC,CAAC,CAAC,OAAtC,EAA+C,CAAC,CAAC,OAAjD,IAA4D,CAA5D,GAAgE,CAAC,CAAxE;AACD,KATM,CAAP;AAUD;;AAED,EAAA,OAAO,CAAC,OAAD,EAAa;AAClB,SAAK,OAAL,CAAa,OAAb,CAAqB,CAAC,IAAI,CAAC,CAAC,OAAF,EAA1B;;AACA,SAAK,8BAAL,CAAoC,KAAK,WAAzC,EAAsD,OAAtD;AACD;;AAED,EAAA,mBAAmB,CAAC,OAAD,EAAa;AAC9B,QAAI,YAAY,GAAG,KAAnB;AACA,QAAI,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,OAA3B,CAAJ,EAAyC,YAAY,GAAG,IAAf;AACzC,IAAA,YAAY,GACR,CAAC,KAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,IAAI,KAAK,CAAC,OAAN,KAAkB,OAA5C,IAAuD,IAAvD,GAA8D,KAA/D,KAAyE,YAD7E;AAEA,WAAO,YAAP;AACD;;AAvZsC;;AAyZzC,MAOa,yBAPb,CAOsC;AA4BpC,EAAA,WAAA,CACW,QADX,EACiC,MADjC,EAEY,WAFZ,EAEiD;AADtC,SAAA,QAAA,GAAA,QAAA;AAAsB,SAAA,MAAA,GAAA,MAAA;AACrB,SAAA,WAAA,GAAA,WAAA;AA7BL,SAAA,OAAA,GAAuC,EAAvC;AACA,SAAA,eAAA,GAAkB,IAAI,GAAJ,EAAlB;AACA,SAAA,gBAAA,GAAmB,IAAI,GAAJ,EAAnB;AACA,SAAA,uBAAA,GAA0B,IAAI,GAAJ,EAA1B;AACA,SAAA,eAAA,GAAkB,IAAI,GAAJ,EAAlB;AACA,SAAA,aAAA,GAAgB,IAAI,GAAJ,EAAhB;AAEA,SAAA,eAAA,GAAkB,CAAlB;AACA,SAAA,kBAAA,GAAqB,CAArB;AAEC,SAAA,gBAAA,GAAiE,EAAjE;AACA,SAAA,cAAA,GAAiD,EAAjD;AACA,SAAA,SAAA,GAA2B,EAA3B;AACA,SAAA,aAAA,GAA+B,EAA/B;AAED,SAAA,uBAAA,GAA0B,IAAI,GAAJ,EAA1B;AACA,SAAA,sBAAA,GAAgC,EAAhC;AACA,SAAA,sBAAA,GAAgC,EAAhC,CAY0C,CAXnD;;AAES,SAAA,iBAAA,GAAoB,CAAC,OAAD,EAAe,OAAf,KAA2B,CAAO,CAAtD;AAS8C;AACvD;;;AAPE,EAAA,kBAAkB,CAAC,OAAD,EAAe,OAAf,EAA2B;AAC3C,SAAK,iBAAL,CAAuB,OAAvB,EAAgC,OAAhC;AACD;;AAMD,MAAI,aAAJ,GAAiB;AACf,UAAM,OAAO,GAAgC,EAA7C;;AACA,SAAK,cAAL,CAAoB,OAApB,CAA4B,EAAE,IAAA;AAC5B,MAAA,EAAE,CAAC,OAAH,CAAW,OAAX,CAAmB,MAAM,IAAA;AACvB,YAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,UAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD;AACF,OAJD;AAKD,KAND;;AAOA,WAAO,OAAP;AACD;;AAED,EAAA,eAAe,CAAC,WAAD,EAAsB,WAAtB,EAAsC;AACnD,UAAM,EAAE,GAAG,IAAI,4BAAJ,CAAiC,WAAjC,EAA8C,WAA9C,EAA2D,IAA3D,CAAX;;AACA,QAAI,WAAW,CAAC,UAAhB,EAA4B;AAC1B,WAAK,qBAAL,CAA2B,EAA3B,EAA+B,WAA/B;AACD,KAFD,MAEO;AACX;AACM;AACM;AACN,WAAK,eAAL,CAAqB,GAArB,CAAyB,WAAzB,EAAsC,EAAtC,EAJK,CAKX;AAEK;AACM;AACM;AACM;;AACjB,WAAK,mBAAL,CAAyB,WAAzB;AACD;;AACD,WAAO,KAAK,gBAAL,CAAsB,WAAtB,IAAqC,EAA5C;AACD;;AAEO,EAAA,qBAAqB,CAAC,EAAD,EAAmC,WAAnC,EAAmD;AAC9E,UAAM,KAAK,GAAG,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAA3C;;AACA,QAAI,KAAK,IAAI,CAAb,EAAgB;AACd,UAAI,KAAK,GAAG,KAAZ;;AACA,WAAK,IAAI,CAAC,GAAG,KAAb,EAAoB,CAAC,IAAI,CAAzB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,cAAM,aAAa,GAAG,KAAK,cAAL,CAAoB,CAApB,CAAtB;;AACA,YAAI,KAAK,MAAL,CAAY,eAAZ,CAA4B,aAAa,CAAC,WAA1C,EAAuD,WAAvD,CAAJ,EAAyE;AACvE,eAAK,cAAL,CAAoB,MAApB,CAA2B,CAAC,GAAG,CAA/B,EAAkC,CAAlC,EAAqC,EAArC;;AACA,UAAA,KAAK,GAAG,IAAR;AACA;AACD;AACF;;AACD,UAAI,CAAC,KAAL,EAAY;AACV,aAAK,cAAL,CAAoB,MAApB,CAA2B,CAA3B,EAA8B,CAA9B,EAAiC,EAAjC;AACD;AACF,KAbD,MAaO;AACL,WAAK,cAAL,CAAoB,IAApB,CAAyB,EAAzB;AACD;;AAED,SAAK,uBAAL,CAA6B,GAA7B,CAAiC,WAAjC,EAA8C,EAA9C;AACA,WAAO,EAAP;AACD;;AAED,EAAA,QAAQ,CAAC,WAAD,EAAsB,WAAtB,EAAsC;AAC5C,QAAI,EAAE,GAAG,KAAK,gBAAL,CAAsB,WAAtB,CAAT;;AACA,QAAI,CAAC,EAAL,EAAS;AACP,MAAA,EAAE,GAAG,KAAK,eAAL,CAAqB,WAArB,EAAkC,WAAlC,CAAL;AACD;;AACD,WAAO,EAAP;AACD;;AAED,EAAA,eAAe,CAAC,WAAD,EAAsB,IAAtB,EAAoC,OAApC,EAA6D;AAC1E,QAAI,EAAE,GAAG,KAAK,gBAAL,CAAsB,WAAtB,CAAT;;AACA,QAAI,EAAE,IAAI,EAAE,CAAC,QAAH,CAAY,IAAZ,EAAkB,OAAlB,CAAV,EAAsC;AACpC,WAAK,eAAL;AACD;AACF;;AAED,EAAA,OAAO,CAAC,WAAD,EAAsB,OAAtB,EAAkC;AACvC,QAAI,CAAC,WAAL,EAAkB;;AAElB,UAAM,EAAE,GAAG,KAAK,eAAL,CAAqB,WAArB,CAAX;;AAEA,SAAK,UAAL,CAAgB,MAAA;AACd,WAAK,uBAAL,CAA6B,MAA7B,CAAoC,EAAE,CAAC,WAAvC;AACA,aAAO,KAAK,gBAAL,CAAsB,WAAtB,CAAP;;AACA,YAAM,KAAK,GAAG,KAAK,cAAL,CAAoB,OAApB,CAA4B,EAA5B,CAAd;;AACA,UAAI,KAAK,IAAI,CAAb,EAAgB;AACd,aAAK,cAAL,CAAoB,MAApB,CAA2B,KAA3B,EAAkC,CAAlC;AACD;AACF,KAPD;AASA,SAAK,wBAAL,CAA8B,MAAM,EAAE,CAAC,OAAH,CAAW,OAAX,CAApC;AACD;;AAEO,EAAA,eAAe,CAAC,EAAD,EAAW;AAChC,WAAO,KAAK,gBAAL,CAAsB,EAAtB,CAAP;AACD;;AAED,EAAA,wBAAwB,CAAC,OAAD,EAAa;AAAI;AACF;AACE;AACK;AACI;AAEhD,UAAM,UAAU,GAAG,IAAI,GAAJ,EAAnB;AACA,UAAM,aAAa,GAAG,KAAK,eAAL,CAAqB,GAArB,CAAyB,OAAzB,CAAtB;;AACA,QAAI,aAAJ,EAAmB;AACjB,YAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,aAAZ,CAAb;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAAI,CAAC,MAAzB,EAAiC,CAAC,EAAlC,EAAsC;AACpC,cAAM,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,CAAD,CAAL,CAAb,CAAuB,WAApC;;AACA,YAAI,IAAJ,EAAU;AACR,gBAAM,EAAE,GAAG,KAAK,eAAL,CAAqB,IAArB,CAAX;;AACA,cAAI,EAAJ,EAAQ;AACN,YAAA,UAAU,CAAC,GAAX,CAAe,EAAf;AACD;AACF;AACF;AACF;;AACD,WAAO,UAAP;AACD;;AAED,EAAA,OAAO,CAAC,WAAD,EAAsB,OAAtB,EAAoC,IAApC,EAAkD,KAAlD,EAA4D;AACjE,QAAI,aAAa,CAAC,OAAD,CAAjB,EAA4B;AAC1B,YAAM,EAAE,GAAG,KAAK,eAAL,CAAqB,WAArB,CAAX;;AACA,UAAI,EAAJ,EAAQ;AACN,QAAA,EAAE,CAAC,OAAH,CAAW,OAAX,EAAoB,IAApB,EAA0B,KAA1B;AACA,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AAED,EAAA,UAAU,CAAC,WAAD,EAAsB,OAAtB,EAAoC,MAApC,EAAiD,YAAjD,EAAsE;AAC9E,QAAI,CAAC,aAAa,CAAC,OAAD,CAAlB,EAA6B,OADiD,CAElF;AAEG;;AACC,UAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB;;AACA,QAAI,OAAO,IAAI,OAAO,CAAC,aAAvB,EAAsC;AACpC,MAAA,OAAO,CAAC,aAAR,GAAwB,KAAxB;AACA,MAAA,OAAO,CAAC,UAAR,GAAqB,IAArB;AACA,YAAM,KAAK,GAAG,KAAK,sBAAL,CAA4B,OAA5B,CAAoC,OAApC,CAAd;;AACA,UAAI,KAAK,IAAI,CAAb,EAAgB;AACd,aAAK,sBAAL,CAA4B,MAA5B,CAAmC,KAAnC,EAA0C,CAA1C;AACD;AACF,KAb6E,CAclF;AAEG;AACI;;;AACH,QAAI,WAAJ,EAAiB;AACf,YAAM,EAAE,GAAG,KAAK,eAAL,CAAqB,WAArB,CAAX,CADe,CAErB;AACM;AACM;AACM;AACM;AACM;;;AACxB,UAAI,EAAJ,EAAQ;AACN,QAAA,EAAE,CAAC,UAAH,CAAc,OAAd,EAAuB,MAAvB;AACD;AACF,KA7B6E,CA8BlF;;;AAEI,QAAI,YAAJ,EAAkB;AAChB,WAAK,mBAAL,CAAyB,OAAzB;AACD;AACF;;AAED,EAAA,mBAAmB,CAAC,OAAD,EAAa;AAC9B,SAAK,sBAAL,CAA4B,IAA5B,CAAiC,OAAjC;AACD;;AAED,EAAA,qBAAqB,CAAC,OAAD,EAAe,KAAf,EAA6B;AAChD,QAAI,KAAJ,EAAW;AACT,UAAI,CAAC,KAAK,aAAL,CAAmB,GAAnB,CAAuB,OAAvB,CAAL,EAAsC;AACpC,aAAK,aAAL,CAAmB,GAAnB,CAAuB,OAAvB;AACA,QAAA,QAAQ,CAAC,OAAD,EAAU,kBAAV,CAAR;AACD;AACF,KALD,MAKO,IAAI,KAAK,aAAL,CAAmB,GAAnB,CAAuB,OAAvB,CAAJ,EAAqC;AAC1C,WAAK,aAAL,CAAmB,MAAnB,CAA0B,OAA1B;AACA,MAAA,WAAW,CAAC,OAAD,EAAU,kBAAV,CAAX;AACD;AACF;;AAED,EAAA,UAAU,CAAC,WAAD,EAAsB,OAAtB,EAAoC,aAApC,EAA4D,OAA5D,EAAwE;AAChF,QAAI,aAAa,CAAC,OAAD,CAAjB,EAA4B;AAC1B,YAAM,EAAE,GAAG,WAAW,GAAG,KAAK,eAAL,CAAqB,WAArB,CAAH,GAAuC,IAA7D;;AACA,UAAI,EAAJ,EAAQ;AACN,QAAA,EAAE,CAAC,UAAH,CAAc,OAAd,EAAuB,OAAvB;AACD,OAFD,MAEO;AACL,aAAK,oBAAL,CAA0B,WAA1B,EAAuC,OAAvC,EAAgD,KAAhD,EAAuD,OAAvD;AACD;;AAED,UAAI,aAAJ,EAAmB;AACjB,cAAM,MAAM,GAAG,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,CAAf;;AACA,YAAI,MAAM,IAAI,MAAM,CAAC,EAAP,KAAc,WAA5B,EAAyC;AACvC,UAAA,MAAM,CAAC,UAAP,CAAkB,OAAlB,EAA2B,OAA3B;AACD;AACF;AACF,KAdD,MAcO;AACL,WAAK,kBAAL,CAAwB,OAAxB,EAAiC,OAAjC;AACD;AACF;;AAED,EAAA,oBAAoB,CAAC,WAAD,EAAsB,OAAtB,EAAoC,YAApC,EAA4D,OAA5D,EAAyE;AAC3F,SAAK,sBAAL,CAA4B,IAA5B,CAAiC,OAAjC;AACA,IAAA,OAAO,CAAC,YAAD,CAAP,GACI;AAAC,MAAA,WAAD;AAAc,MAAA,aAAa,EAAE,OAA7B;AAAsC,MAAA,YAAtC;AAAoD,MAAA,oBAAoB,EAAE;AAA1E,KADJ;AAED;;AAED,EAAA,MAAM,CACF,WADE,EACmB,OADnB,EACiC,IADjC,EAC+C,KAD/C,EAEF,QAFE,EAE+B;AACnC,QAAI,aAAa,CAAC,OAAD,CAAjB,EAA4B;AAC1B,aAAO,KAAK,eAAL,CAAqB,WAArB,EAAkC,MAAlC,CAAyC,OAAzC,EAAkD,IAAlD,EAAwD,KAAxD,EAA+D,QAA/D,CAAP;AACD;;AACD,WAAO,MAAA,CAAQ,CAAf;AACD;;AAEO,EAAA,iBAAiB,CACrB,KADqB,EACI,YADJ,EACyC,cADzC,EAErB,cAFqB,EAEG,YAFH,EAEyB;AAChD,WAAO,KAAK,CAAC,UAAN,CAAiB,KAAjB,CACH,KAAK,MADF,EACU,KAAK,CAAC,OADhB,EACyB,KAAK,CAAC,SAAN,CAAgB,KADzC,EACgD,KAAK,CAAC,OAAN,CAAc,KAD9D,EACqE,cADrE,EAEH,cAFG,EAEa,KAAK,CAAC,SAAN,CAAgB,OAF7B,EAEsC,KAAK,CAAC,OAAN,CAAc,OAFpD,EAE6D,YAF7D,EAE2E,YAF3E,CAAP;AAGD;;AAED,EAAA,sBAAsB,CAAC,gBAAD,EAAsB;AAC1C,QAAI,QAAQ,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,gBAAlB,EAAoC,mBAApC,EAAyD,IAAzD,CAAf;AACA,IAAA,QAAQ,CAAC,OAAT,CAAiB,OAAO,IAAI,KAAK,iCAAL,CAAuC,OAAvC,CAA5B;AAEA,QAAI,KAAK,uBAAL,CAA6B,IAA7B,IAAqC,CAAzC,EAA4C;AAE5C,IAAA,QAAQ,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,gBAAlB,EAAoC,qBAApC,EAA2D,IAA3D,CAAX;AACA,IAAA,QAAQ,CAAC,OAAT,CAAiB,OAAO,IAAI,KAAK,qCAAL,CAA2C,OAA3C,CAA5B;AACD;;AAED,EAAA,iCAAiC,CAAC,OAAD,EAAa;AAC5C,UAAM,OAAO,GAAG,KAAK,gBAAL,CAAsB,GAAtB,CAA0B,OAA1B,CAAhB;;AACA,QAAI,OAAJ,EAAa;AACX,MAAA,OAAO,CAAC,OAAR,CAAgB,MAAM,IAAA;AAC5B;AACQ;AACQ;AACR,YAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,UAAA,MAAM,CAAC,gBAAP,GAA0B,IAA1B;AACD,SAFD,MAEO;AACL,UAAA,MAAM,CAAC,OAAP;AACD;AACF,OATD;AAUD;AACF;;AAED,EAAA,qCAAqC,CAAC,OAAD,EAAa;AAChD,UAAM,OAAO,GAAG,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,CAAhB;;AACA,QAAI,OAAJ,EAAa;AACX,MAAA,OAAO,CAAC,OAAR,CAAgB,MAAM,IAAI,MAAM,CAAC,MAAP,EAA1B;AACD;AACF;;AAED,EAAA,iBAAiB,GAAA;AACf,WAAO,IAAI,OAAJ,CAAY,OAAO,IAAA;AACxB,UAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;AACvB,eAAO,mBAAmB,CAAC,KAAK,OAAN,CAAnB,CAAkC,MAAlC,CAAyC,MAAM,OAAO,EAAtD,CAAP;AACD,OAFD,MAEO;AACL,QAAA,OAAO;AACR;AACF,KANM,CAAP;AAOD;;AAED,EAAA,gBAAgB,CAAC,OAAD,EAAa;AAC3B,UAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB;;AACA,QAAI,OAAO,IAAI,OAAO,CAAC,aAAvB,EAAsC;AAC1C;AACM,MAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,kBAAxB;;AACA,UAAI,OAAO,CAAC,WAAZ,EAAyB;AACvB,aAAK,sBAAL,CAA4B,OAA5B;;AACA,cAAM,EAAE,GAAG,KAAK,eAAL,CAAqB,OAAO,CAAC,WAA7B,CAAX;;AACA,YAAI,EAAJ,EAAQ;AACN,UAAA,EAAE,CAAC,iBAAH,CAAqB,OAArB;AACD;AACF;;AACD,WAAK,kBAAL,CAAwB,OAAxB,EAAiC,OAAO,CAAC,aAAzC;AACD;;AAED,QAAI,KAAK,MAAL,CAAY,cAAZ,CAA2B,OAA3B,EAAoC,iBAApC,CAAJ,EAA4D;AAC1D,WAAK,qBAAL,CAA2B,OAA3B,EAAoC,KAApC;AACD;;AAED,SAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,iBAA3B,EAA8C,IAA9C,EAAoD,OAApD,CAA4D,IAAI,IAAA;AAC9D,WAAK,qBAAL,CAA2B,IAA3B,EAAiC,KAAjC;AACD,KAFD;AAGD;;AAED,EAAA,KAAK,CAAC,WAAA,GAAsB,CAAC,CAAxB,EAAyB;AAC5B,QAAI,OAAO,GAAsB,EAAjC;;AACA,QAAI,KAAK,eAAL,CAAqB,IAAzB,EAA+B;AAC7B,WAAK,eAAL,CAAqB,OAArB,CAA6B,CAAC,EAAD,EAAK,OAAL,KAAiB,KAAK,qBAAL,CAA2B,EAA3B,EAA+B,OAA/B,CAA9C;AACA,WAAK,eAAL,CAAqB,KAArB;AACD;;AAED,QAAI,KAAK,eAAL,IAAwB,KAAK,sBAAL,CAA4B,MAAxD,EAAgE;AAC9D,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,sBAAL,CAA4B,MAAhD,EAAwD,CAAC,EAAzD,EAA6D;AAC3D,cAAM,GAAG,GAAG,KAAK,sBAAL,CAA4B,CAA5B,CAAZ;AACA,QAAA,QAAQ,CAAC,GAAD,EAAM,cAAN,CAAR;AACD;AACF;;AAED,QAAI,KAAK,cAAL,CAAoB,MAApB,KACC,KAAK,kBAAL,IAA2B,KAAK,sBAAL,CAA4B,MADxD,CAAJ,EACqE;AACnE,YAAM,UAAU,GAAe,EAA/B;;AACA,UAAI;AACF,QAAA,OAAO,GAAG,KAAK,gBAAL,CAAsB,UAAtB,EAAkC,WAAlC,CAAV;AACD,OAFD,SAEU;AACR,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,CAAC,MAA/B,EAAuC,CAAC,EAAxC,EAA4C;AAC1C,UAAA,UAAU,CAAC,CAAD,CAAV;AACD;AACF;AACF,KAVD,MAUO;AACL,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,sBAAL,CAA4B,MAAhD,EAAwD,CAAC,EAAzD,EAA6D;AAC3D,cAAM,OAAO,GAAG,KAAK,sBAAL,CAA4B,CAA5B,CAAhB;AACA,aAAK,gBAAL,CAAsB,OAAtB;AACD;AACF;;AAED,SAAK,kBAAL,GAA0B,CAA1B;AACA,SAAK,sBAAL,CAA4B,MAA5B,GAAqC,CAArC;AACA,SAAK,sBAAL,CAA4B,MAA5B,GAAqC,CAArC;;AACA,SAAK,SAAL,CAAe,OAAf,CAAuB,EAAE,IAAI,EAAE,EAA/B;;AACA,SAAK,SAAL,GAAiB,EAAjB;;AAEA,QAAI,KAAK,aAAL,CAAmB,MAAvB,EAA+B;AACnC;AACM;AACM;AACN,YAAM,QAAQ,GAAG,KAAK,aAAtB;AACA,WAAK,aAAL,GAAqB,EAArB;;AAEA,UAAI,OAAO,CAAC,MAAZ,EAAoB;AAClB,QAAA,mBAAmB,CAAC,OAAD,CAAnB,CAA6B,MAA7B,CAAoC,MAAA;AAClC,UAAA,QAAQ,CAAC,OAAT,CAAiB,EAAE,IAAI,EAAE,EAAzB;AACD,SAFD;AAGD,OAJD,MAIO;AACL,QAAA,QAAQ,CAAC,OAAT,CAAiB,EAAE,IAAI,EAAE,EAAzB;AACD;AACF;AACF;;AAED,EAAA,WAAW,CAAC,MAAD,EAAiB;AAC1B,UAAM,IAAI,KAAJ,CACF,kFACI,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,EAFnB,CAAN;AAGD;;AAEO,EAAA,gBAAgB,CAAC,UAAD,EAAyB,WAAzB,EAA4C;AAElE,UAAM,YAAY,GAAG,IAAI,qBAAJ,EAArB;AACA,UAAM,cAAc,GAAgC,EAApD;AACA,UAAM,iBAAiB,GAAG,IAAI,GAAJ,EAA1B;AACA,UAAM,kBAAkB,GAAuB,EAA/C;AACA,UAAM,eAAe,GAAG,IAAI,GAAJ,EAAxB;AACA,UAAM,mBAAmB,GAAG,IAAI,GAAJ,EAA5B;AACA,UAAM,oBAAoB,GAAG,IAAI,GAAJ,EAA7B;AAEA,UAAM,mBAAmB,GAAG,IAAI,GAAJ,EAA5B;AACA,SAAK,aAAL,CAAmB,OAAnB,CAA2B,IAAI,IAAA;AAC7B,MAAA,mBAAmB,CAAC,GAApB,CAAwB,IAAxB;AACA,YAAM,oBAAoB,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,IAAlB,EAAwB,eAAxB,EAAyC,IAAzC,CAA7B;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,oBAAoB,CAAC,MAAzC,EAAiD,CAAC,EAAlD,EAAsD;AACpD,QAAA,mBAAmB,CAAC,GAApB,CAAwB,oBAAoB,CAAC,CAAD,CAA5C;AACD;AACF,KAND;AAQA,UAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,UAAM,kBAAkB,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,eAAL,CAAqB,IAArB,EAAX,CAA3B;AACA,UAAM,YAAY,GAAG,YAAY,CAAC,kBAAD,EAAqB,KAAK,sBAA1B,CAAjC,CArBkE,CAsBtE;AAEG;AACI;;AACH,UAAM,eAAe,GAAG,IAAI,GAAJ,EAAxB;AACA,QAAI,CAAC,GAAG,CAAR;AACA,IAAA,YAAY,CAAC,OAAb,CAAqB,CAAC,KAAD,EAAQ,IAAR,KAAY;AAC/B,YAAM,SAAS,GAAG,eAAe,GAAG,CAAC,EAArC;AACA,MAAA,eAAe,CAAC,GAAhB,CAAoB,IAApB,EAA0B,SAA1B;AACA,MAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,QAAQ,CAAC,IAAD,EAAO,SAAP,CAA9B;AACD,KAJD;AAMA,UAAM,aAAa,GAAU,EAA7B;AACA,UAAM,gBAAgB,GAAG,IAAI,GAAJ,EAAzB;AACA,UAAM,2BAA2B,GAAG,IAAI,GAAJ,EAApC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,sBAAL,CAA4B,MAAhD,EAAwD,CAAC,EAAzD,EAA6D;AAC3D,YAAM,OAAO,GAAG,KAAK,sBAAL,CAA4B,CAA5B,CAAhB;AACA,YAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB;;AACA,UAAI,OAAO,IAAI,OAAO,CAAC,aAAvB,EAAsC;AACpC,QAAA,aAAa,CAAC,IAAd,CAAmB,OAAnB;AACA,QAAA,gBAAgB,CAAC,GAAjB,CAAqB,OAArB;;AACA,YAAI,OAAO,CAAC,YAAZ,EAA0B;AACxB,eAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,aAA3B,EAA0C,IAA1C,EAAgD,OAAhD,CAAwD,GAAG,IAAI,gBAAgB,CAAC,GAAjB,CAAqB,GAArB,CAA/D;AACD,SAFD,MAEO;AACL,UAAA,2BAA2B,CAAC,GAA5B,CAAgC,OAAhC;AACD;AACF;AACF;;AAED,UAAM,eAAe,GAAG,IAAI,GAAJ,EAAxB;AACA,UAAM,YAAY,GAAG,YAAY,CAAC,kBAAD,EAAqB,KAAK,CAAC,IAAN,CAAW,gBAAX,CAArB,CAAjC;AACA,IAAA,YAAY,CAAC,OAAb,CAAqB,CAAC,KAAD,EAAQ,IAAR,KAAY;AAC/B,YAAM,SAAS,GAAG,eAAe,GAAG,CAAC,EAArC;AACA,MAAA,eAAe,CAAC,GAAhB,CAAoB,IAApB,EAA0B,SAA1B;AACA,MAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,QAAQ,CAAC,IAAD,EAAO,SAAP,CAA9B;AACD,KAJD;AAMA,IAAA,UAAU,CAAC,IAAX,CAAgB,MAAA;AACd,MAAA,YAAY,CAAC,OAAb,CAAqB,CAAC,KAAD,EAAQ,IAAR,KAAY;AAC/B,cAAM,SAAS,GAAG,eAAe,CAAC,GAAhB,CAAoB,IAApB,CAAlB;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,WAAW,CAAC,IAAD,EAAO,SAAP,CAAjC;AACD,OAHD;AAKA,MAAA,YAAY,CAAC,OAAb,CAAqB,CAAC,KAAD,EAAQ,IAAR,KAAY;AAC/B,cAAM,SAAS,GAAG,eAAe,CAAC,GAAhB,CAAoB,IAApB,CAAlB;AACA,QAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,WAAW,CAAC,IAAD,EAAO,SAAP,CAAjC;AACD,OAHD;AAKA,MAAA,aAAa,CAAC,OAAd,CAAsB,OAAO,IAAA;AAC3B,aAAK,gBAAL,CAAsB,OAAtB;AACD,OAFD;AAGD,KAdD;AAgBA,UAAM,UAAU,GAAgC,EAAhD;AACA,UAAM,oBAAoB,GAAqC,EAA/D;;AACA,SAAK,IAAI,CAAC,GAAG,KAAK,cAAL,CAAoB,MAApB,GAA6B,CAA1C,EAA6C,CAAC,IAAI,CAAlD,EAAqD,CAAC,EAAtD,EAA0D;AACxD,YAAM,EAAE,GAAG,KAAK,cAAL,CAAoB,CAApB,CAAX;AACA,MAAA,EAAE,CAAC,sBAAH,CAA0B,WAA1B,EAAuC,OAAvC,CAA+C,KAAK,IAAA;AAClD,cAAM,MAAM,GAAG,KAAK,CAAC,MAArB;AACA,cAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;AACA,QAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB;;AAEA,YAAI,KAAK,sBAAL,CAA4B,MAAhC,EAAwC;AACtC,gBAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB,CADsC,CAEhD;;AACU,cAAI,OAAO,IAAI,OAAO,CAAC,UAAvB,EAAmC;AACjC,YAAA,MAAM,CAAC,OAAP;AACA;AACD;AACF;;AAED,cAAM,cAAc,GAAG,CAAC,QAAD,IAAa,CAAC,KAAK,MAAL,CAAY,eAAZ,CAA4B,QAA5B,EAAsC,OAAtC,CAArC;AACA,cAAM,cAAc,GAAG,eAAe,CAAC,GAAhB,CAAoB,OAApB,CAAvB;AACA,cAAM,cAAc,GAAG,eAAe,CAAC,GAAhB,CAAoB,OAApB,CAAvB;;AACA,cAAM,WAAW,GAAG,KAAK,iBAAL,CAChB,KADgB,EACT,YADS,EACK,cADL,EACqB,cADrB,EACqC,cADrC,CAApB;;AAEA,YAAI,WAAW,CAAC,MAAZ,IAAsB,WAAW,CAAC,MAAZ,CAAmB,MAA7C,EAAqD;AACnD,UAAA,oBAAoB,CAAC,IAArB,CAA0B,WAA1B;AACA;AACD,SAtBiD,CAuB1D;AAEO;AACQ;AACQ;;;AACf,YAAI,cAAJ,EAAoB;AAClB,UAAA,MAAM,CAAC,OAAP,CAAe,MAAM,WAAW,CAAC,OAAD,EAAU,WAAW,CAAC,UAAtB,CAAhC;AACA,UAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,SAAS,CAAC,OAAD,EAAU,WAAW,CAAC,QAAtB,CAAhC;AACA,UAAA,cAAc,CAAC,IAAf,CAAoB,MAApB;AACA;AACD,SAjCiD,CAkC1D;AAEO;;;AACC,YAAI,KAAK,CAAC,oBAAV,EAAgC;AAC9B,UAAA,MAAM,CAAC,OAAP,CAAe,MAAM,WAAW,CAAC,OAAD,EAAU,WAAW,CAAC,UAAtB,CAAhC;AACA,UAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,SAAS,CAAC,OAAD,EAAU,WAAW,CAAC,QAAtB,CAAhC;AACA,UAAA,cAAc,CAAC,IAAf,CAAoB,MAApB;AACA;AACD,SA1CiD,CA2C1D;AAEO;AACQ;AACQ;AACQ;;;AACvB,QAAA,WAAW,CAAC,SAAZ,CAAsB,OAAtB,CAA8B,EAAE,IAAI,EAAE,CAAC,uBAAH,GAA6B,IAAjE;AAEA,QAAA,YAAY,CAAC,MAAb,CAAoB,OAApB,EAA6B,WAAW,CAAC,SAAzC;AAEA,cAAM,KAAK,GAAG;AAAC,UAAA,WAAD;AAAc,UAAA,MAAd;AAAsB,UAAA;AAAtB,SAAd;AAEA,QAAA,kBAAkB,CAAC,IAAnB,CAAwB,KAAxB;AAEA,QAAA,WAAW,CAAC,eAAZ,CAA4B,OAA5B,CACI,OAAO,IAAI,eAAe,CAAC,eAAD,EAAkB,OAAlB,EAA2B,EAA3B,CAAf,CAA8C,IAA9C,CAAmD,MAAnD,CADf;AAGA,QAAA,WAAW,CAAC,aAAZ,CAA0B,OAA1B,CAAkC,CAAC,SAAD,EAAY,OAAZ,KAAmB;AACnD,gBAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,SAAZ,CAAd;;AACA,cAAI,KAAK,CAAC,MAAV,EAAkB;AAChB,gBAAI,MAAM,GAAgB,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,CAA1B;;AACA,gBAAI,CAAC,MAAL,EAAa;AACX,cAAA,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,EAAiC,MAAM,GAAG,IAAI,GAAJ,EAA1C;AACD;;AACD,YAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,MAAM,CAAC,GAAP,CAAW,IAAX,CAAtB;AACD;AACF,SATD;AAWA,QAAA,WAAW,CAAC,cAAZ,CAA2B,OAA3B,CAAmC,CAAC,SAAD,EAAY,OAAZ,KAAmB;AACpD,gBAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,SAAZ,CAAd;AACA,cAAI,MAAM,GAAgB,oBAAoB,CAAC,GAArB,CAAyB,OAAzB,CAA1B;;AACA,cAAI,CAAC,MAAL,EAAa;AACX,YAAA,oBAAoB,CAAC,GAArB,CAAyB,OAAzB,EAAkC,MAAM,GAAG,IAAI,GAAJ,EAA3C;AACD;;AACD,UAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,MAAM,CAAC,GAAP,CAAW,IAAX,CAAtB;AACD,SAPD;AAQD,OA/ED;AAgFD;;AAED,QAAI,oBAAoB,CAAC,MAAzB,EAAiC;AAC/B,YAAM,MAAM,GAAa,EAAzB;AACA,MAAA,oBAAoB,CAAC,OAArB,CAA6B,WAAW,IAAA;AACtC,QAAA,MAAM,CAAC,IAAP,CAAY,IAAI,WAAW,CAAC,WAAW,uBAAvC;AACA,QAAA,WAAW,CAAC,MAAZ,CAAoB,OAApB,CAA4B,KAAK,IAAI,MAAM,CAAC,IAAP,CAAY,KAAK,KAAK,IAAtB,CAArC;AACD,OAHD;AAKA,MAAA,UAAU,CAAC,OAAX,CAAmB,MAAM,IAAI,MAAM,CAAC,OAAP,EAA7B;AACA,WAAK,WAAL,CAAiB,MAAjB;AACD;;AAED,UAAM,qBAAqB,GAAG,IAAI,GAAJ,EAA9B,CA5KkE,CA6KtE;AACI;AACI;AACI;;AACR,UAAM,mBAAmB,GAAG,IAAI,GAAJ,EAA5B;AACA,IAAA,kBAAkB,CAAC,OAAnB,CAA2B,KAAK,IAAA;AAC9B,YAAM,OAAO,GAAG,KAAK,CAAC,OAAtB;;AACA,UAAI,YAAY,CAAC,GAAb,CAAiB,OAAjB,CAAJ,EAA+B;AAC7B,QAAA,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,EAAiC,OAAjC;;AACA,aAAK,qBAAL,CACI,KAAK,CAAC,MAAN,CAAa,WADjB,EAC8B,KAAK,CAAC,WADpC,EACiD,qBADjD;AAED;AACF,KAPD;AASA,IAAA,cAAc,CAAC,OAAf,CAAuB,MAAM,IAAA;AAC3B,YAAM,OAAO,GAAG,MAAM,CAAC,OAAvB;;AACA,YAAM,eAAe,GACjB,KAAK,mBAAL,CAAyB,OAAzB,EAAkC,KAAlC,EAAyC,MAAM,CAAC,WAAhD,EAA6D,MAAM,CAAC,WAApE,EAAiF,IAAjF,CADJ;;AAEA,MAAA,eAAe,CAAC,OAAhB,CAAwB,UAAU,IAAA;AAChC,QAAA,eAAe,CAAC,qBAAD,EAAwB,OAAxB,EAAiC,EAAjC,CAAf,CAAoD,IAApD,CAAyD,UAAzD;AACA,QAAA,UAAU,CAAC,OAAX;AACD,OAHD;AAID,KARD,EA3LkE,CAoMtE;AAEG;AACI;AACI;AACI;AACI;AACI;;AACnB,UAAM,YAAY,GAAG,aAAa,CAAC,MAAd,CAAqB,IAAI,IAAA;AAC5C,aAAO,sBAAsB,CAAC,IAAD,EAAO,mBAAP,EAA4B,oBAA5B,CAA7B;AACD,KAFoB,CAArB,CA5MkE,CA+MtE;;AAEI,UAAM,aAAa,GAAG,IAAI,GAAJ,EAAtB;AACA,UAAM,oBAAoB,GAAG,qBAAqB,CAC9C,aAD8C,EAC/B,KAAK,MAD0B,EAClB,2BADkB,EACW,oBADX,EACiC,UADjC,CAAlD;AAGA,IAAA,oBAAoB,CAAC,OAArB,CAA6B,IAAI,IAAA;AAC/B,UAAI,sBAAsB,CAAC,IAAD,EAAO,mBAAP,EAA4B,oBAA5B,CAA1B,EAA6E;AAC3E,QAAA,YAAY,CAAC,IAAb,CAAkB,IAAlB;AACD;AACF,KAJD,EArNkE,CA0NtE;;AAEI,UAAM,YAAY,GAAG,IAAI,GAAJ,EAArB;AACA,IAAA,YAAY,CAAC,OAAb,CAAqB,CAAC,KAAD,EAAQ,IAAR,KAAY;AAC/B,MAAA,qBAAqB,CACjB,YADiB,EACH,KAAK,MADF,EACU,IAAI,GAAJ,CAAQ,KAAR,CADV,EAC0B,mBAD1B,EAC+CA,UAD/C,CAArB;AAED,KAHD;AAKA,IAAA,YAAY,CAAC,OAAb,CAAqB,IAAI,IAAA;AACvB,YAAM,IAAI,GAAG,aAAa,CAAC,GAAd,CAAkB,IAAlB,CAAb;AACA,YAAM,GAAG,GAAG,YAAY,CAAC,GAAb,CAAiB,IAAjB,CAAZ;AACA,MAAA,aAAa,CAAC,GAAd,CAAkB,IAAlB,EAAwB,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAI,IAAJ,CAAA,EAAa,GAAb,CAAxB;AACD,KAJD;AAMA,UAAM,WAAW,GAAgC,EAAjD;AACA,UAAM,UAAU,GAAgC,EAAhD;AACA,UAAM,oCAAoC,GAAG,EAA7C;AACA,IAAA,kBAAkB,CAAC,OAAnB,CAA2B,KAAK,IAAA;AAC9B,YAAM;AAAC,QAAA,OAAD;AAAU,QAAA,MAAV;AAAkB,QAAA;AAAlB,UAAiC,KAAvC,CAD8B,CAEpC;AACM;;AACA,UAAI,YAAY,CAAC,GAAb,CAAiB,OAAjB,CAAJ,EAA+B;AAC7B,YAAI,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,CAAJ,EAAsC;AACpC,UAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,SAAS,CAAC,OAAD,EAAU,WAAW,CAAC,QAAtB,CAAhC;AACA,UAAA,MAAM,CAAC,QAAP,GAAkB,IAAlB;AACA,UAAA,MAAM,CAAC,iBAAP,CAAyB,WAAW,CAAC,SAArC;AACA,UAAA,cAAc,CAAC,IAAf,CAAoB,MAApB;AACA;AACD,SAP4B,CAQrC;AAEO;AACQ;AACQ;AACQ;AACQ;;;AAC/B,YAAI,mBAAmB,GAAQ,oCAA/B;;AACA,YAAI,mBAAmB,CAAC,IAApB,GAA2B,CAA/B,EAAkC;AAChC,cAAI,GAAG,GAAG,OAAV;AACA,gBAAM,YAAY,GAAU,EAA5B;;AACA,iBAAO,GAAG,GAAG,GAAG,CAAC,UAAjB,EAA6B;AAC3B,kBAAM,cAAc,GAAG,mBAAmB,CAAC,GAApB,CAAwB,GAAxB,CAAvB;;AACA,gBAAI,cAAJ,EAAoB;AAClB,cAAA,mBAAmB,GAAG,cAAtB;AACA;AACD;;AACD,YAAA,YAAY,CAAC,IAAb,CAAkB,GAAlB;AACD;;AACD,UAAA,YAAY,CAAC,OAAb,CAAqB,MAAM,IAAI,mBAAmB,CAAC,GAApB,CAAwB,MAAxB,EAAgC,mBAAhC,CAA/B;AACD;;AAED,cAAM,WAAW,GAAG,KAAK,eAAL,CAChB,MAAM,CAAC,WADS,EACI,WADJ,EACiB,qBADjB,EACwC,iBADxC,EAC2D,YAD3D,EAEhB,aAFgB,CAApB;;AAIA,QAAA,MAAM,CAAC,aAAP,CAAqB,WAArB;;AAEA,YAAI,mBAAmB,KAAK,oCAA5B,EAAkE;AAChE,UAAA,WAAW,CAAC,IAAZ,CAAiB,MAAjB;AACD,SAFD,MAEO;AACL,gBAAM,aAAa,GAAG,KAAK,gBAAL,CAAsB,GAAtB,CAA0B,mBAA1B,CAAtB;;AACA,cAAI,aAAa,IAAI,aAAa,CAAC,MAAnC,EAA2C;AACzC,YAAA,MAAM,CAAC,YAAP,GAAsB,mBAAmB,CAAC,aAAD,CAAzC;AACD;;AACD,UAAA,cAAc,CAAC,IAAf,CAAoB,MAApB;AACD;AACF,OA7CD,MA6CO;AACL,QAAA,WAAW,CAAC,OAAD,EAAU,WAAW,CAAC,UAAtB,CAAX;AACA,QAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,SAAS,CAAC,OAAD,EAAU,WAAW,CAAC,QAAtB,CAAhC,EAFK,CAGb;AACQ;AACQ;;AACR,QAAA,UAAU,CAAC,IAAX,CAAgB,MAAhB;;AACA,YAAI,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,CAAJ,EAAsC;AACpC,UAAA,cAAc,CAAC,IAAf,CAAoB,MAApB;AACD;AACF;AACF,KA5DD,EA3OkE,CAwStE;;AAEI,IAAA,UAAU,CAAC,OAAX,CAAmB,MAAM,IAAA;AAC7B;AACM;AACA,YAAM,iBAAiB,GAAG,iBAAiB,CAAC,GAAlB,CAAsB,MAAM,CAAC,OAA7B,CAA1B;;AACA,UAAI,iBAAiB,IAAI,iBAAiB,CAAC,MAA3C,EAAmD;AACjD,cAAM,WAAW,GAAG,mBAAmB,CAAC,iBAAD,CAAvC;AACA,QAAA,MAAM,CAAC,aAAP,CAAqB,WAArB;AACD;AACF,KARD,EA1SkE,CAmTtE;AAEG;AACI;;AACH,IAAA,cAAc,CAAC,OAAf,CAAuB,MAAM,IAAA;AAC3B,UAAI,MAAM,CAAC,YAAX,EAAyB;AACvB,QAAA,MAAM,CAAC,gBAAP,CAAwB,MAAM,CAAC,YAA/B;AACD,OAFD,MAEO;AACL,QAAA,MAAM,CAAC,OAAP;AACD;AACF,KAND,EAvTkE,CA8TtE;AAEG;AACI;;AACH,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAAa,CAAC,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC7C,YAAM,OAAO,GAAG,aAAa,CAAC,CAAD,CAA7B;AACA,YAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB;AACA,MAAA,WAAW,CAAC,OAAD,EAAU,eAAV,CAAX,CAH6C,CAInD;AAEK;AACM;;AACL,UAAI,OAAO,IAAI,OAAO,CAAC,YAAvB,EAAqC;AAErC,UAAI,OAAO,GAAgC,EAA3C,CAV6C,CAWnD;AAEK;AACM;;AACL,UAAI,eAAe,CAAC,IAApB,EAA0B;AACxB,YAAI,oBAAoB,GAAG,eAAe,CAAC,GAAhB,CAAoB,OAApB,CAA3B;;AACA,YAAI,oBAAoB,IAAI,oBAAoB,CAAC,MAAjD,EAAyD;AACvD,UAAA,OAAO,CAAC,IAAR,CAAa,GAAG,oBAAhB;AACD;;AAED,YAAI,oBAAoB,GAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,qBAA3B,EAAkD,IAAlD,CAA3B;;AACA,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,oBAAoB,CAAC,MAAzC,EAAiD,CAAC,EAAlD,EAAsD;AACpD,cAAI,cAAc,GAAG,eAAe,CAAC,GAAhB,CAAoB,oBAAoB,CAAC,CAAD,CAAxC,CAArB;;AACA,cAAI,cAAc,IAAI,cAAc,CAAC,MAArC,EAA6C;AAC3C,YAAA,OAAO,CAAC,IAAR,CAAa,GAAG,cAAhB;AACD;AACF;AACF;;AAED,YAAM,aAAa,GAAG,OAAO,CAAC,MAAR,CAAe,CAAC,IAAI,CAAC,CAAC,CAAC,SAAvB,CAAtB;;AACA,UAAI,aAAa,CAAC,MAAlB,EAA0B;AACxB,QAAA,6BAA6B,CAAC,IAAD,EAAO,OAAP,EAAgB,aAAhB,CAA7B;AACD,OAFD,MAEO;AACL,aAAK,gBAAL,CAAsB,OAAtB;AACD;AACF,KAtWiE,CAuWtE;;;AAEI,IAAA,aAAa,CAAC,MAAd,GAAuB,CAAvB;AAEA,IAAA,WAAW,CAAC,OAAZ,CAAoB,MAAM,IAAA;AACxB,WAAK,OAAL,CAAa,IAAb,CAAkB,MAAlB;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,MAAA;AACZ,QAAA,MAAM,CAAC,OAAP;AAEA,cAAM,KAAK,GAAG,KAAK,OAAL,CAAa,OAAb,CAAqB,MAArB,CAAd;AACA,aAAK,OAAL,CAAa,MAAb,CAAoB,KAApB,EAA2B,CAA3B;AACD,OALD;AAMA,MAAA,MAAM,CAAC,IAAP;AACD,KATD;AAWA,WAAO,WAAP;AACD;;AAED,EAAA,mBAAmB,CAAC,WAAD,EAAsB,OAAtB,EAAkC;AACnD,QAAI,YAAY,GAAG,KAAnB;AACA,UAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB;AACA,QAAI,OAAO,IAAI,OAAO,CAAC,aAAvB,EAAsC,YAAY,GAAG,IAAf;AACtC,QAAI,KAAK,gBAAL,CAAsB,GAAtB,CAA0B,OAA1B,CAAJ,EAAwC,YAAY,GAAG,IAAf;AACxC,QAAI,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,CAAJ,EAA+C,YAAY,GAAG,IAAf;AAC/C,QAAI,KAAK,eAAL,CAAqB,GAArB,CAAyB,OAAzB,CAAJ,EAAuC,YAAY,GAAG,IAAf;AACvC,WAAO,KAAK,eAAL,CAAqB,WAArB,EAAkC,mBAAlC,CAAsD,OAAtD,KAAkE,YAAzE;AACD;;AAED,EAAA,UAAU,CAAC,QAAD,EAAoB;AAC5B,SAAK,SAAL,CAAe,IAAf,CAAoB,QAApB;AACD;;AAED,EAAA,wBAAwB,CAAC,QAAD,EAAoB;AAC1C,SAAK,aAAL,CAAmB,IAAnB,CAAwB,QAAxB;AACD;;AAEO,EAAA,mBAAmB,CACvB,OADuB,EACN,gBADM,EACqB,WADrB,EAC2C,WAD3C,EAEvB,YAFuB,EAEL;AACpB,QAAI,OAAO,GAAgC,EAA3C;;AACA,QAAI,gBAAJ,EAAsB;AACpB,YAAM,qBAAqB,GAAG,KAAK,uBAAL,CAA6B,GAA7B,CAAiC,OAAjC,CAA9B;;AACA,UAAI,qBAAJ,EAA2B;AACzB,QAAA,OAAO,GAAG,qBAAV;AACD;AACF,KALD,MAKO;AACL,YAAM,cAAc,GAAG,KAAK,gBAAL,CAAsB,GAAtB,CAA0B,OAA1B,CAAvB;;AACA,UAAI,cAAJ,EAAoB;AAClB,cAAM,kBAAkB,GAAG,CAAC,YAAD,IAAiB,YAAY,IAAI,UAA5D;AACA,QAAA,cAAc,CAAC,OAAf,CAAuB,MAAM,IAAA;AAC3B,cAAI,MAAM,CAAC,MAAX,EAAmB;AACnB,cAAI,CAAC,kBAAD,IAAuB,MAAM,CAAC,WAAP,IAAsB,WAAjD,EAA8D;AAC9D,UAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD,SAJD;AAKD;AACF;;AACD,QAAI,WAAW,IAAI,WAAnB,EAAgC;AAC9B,MAAA,OAAO,GAAG,OAAO,CAAC,MAAR,CAAe,MAAM,IAAA;AAC7B,YAAI,WAAW,IAAI,WAAW,IAAI,MAAM,CAAC,WAAzC,EAAsD,OAAO,KAAP;AACtD,YAAI,WAAW,IAAI,WAAW,IAAI,MAAM,CAAC,WAAzC,EAAsD,OAAO,KAAP;AACtD,eAAO,IAAP;AACD,OAJS,CAAV;AAKD;;AACD,WAAO,OAAP;AACD;;AAEO,EAAA,qBAAqB,CACzB,WADyB,EACJ,WADI,EAEzB,qBAFyB,EAEmC;AAC9D,UAAM,WAAW,GAAG,WAAW,CAAC,WAAhC;AACA,UAAM,WAAW,GAAG,WAAW,CAAC,OAAhC,CAF8D,CAGlE;AAEG;;AACC,UAAM,iBAAiB,GACnB,WAAW,CAAC,mBAAZ,GAAkC,SAAlC,GAA8C,WADlD;AAEA,UAAM,iBAAiB,GACnB,WAAW,CAAC,mBAAZ,GAAkC,SAAlC,GAA8C,WADlD;;AAGA,SAAK,MAAM,mBAAX,IAAkC,WAAW,CAAC,SAA9C,EAAyD;AACvD,YAAM,OAAO,GAAG,mBAAmB,CAAC,OAApC;AACA,YAAM,gBAAgB,GAAG,OAAO,KAAK,WAArC;AACA,YAAM,OAAO,GAAG,eAAe,CAAC,qBAAD,EAAwB,OAAxB,EAAiC,EAAjC,CAA/B;;AACA,YAAM,eAAe,GAAG,KAAK,mBAAL,CACpB,OADoB,EACX,gBADW,EACO,iBADP,EAC0B,iBAD1B,EAC6C,WAAW,CAAC,OADzD,CAAxB;;AAEA,MAAA,eAAe,CAAC,OAAhB,CAAwB,MAAM,IAAA;AAC5B,cAAM,UAAU,GAAI,MAAoC,CAAC,aAArC,EAApB;;AACA,YAAI,UAAU,CAAC,aAAf,EAA8B;AAC5B,UAAA,UAAU,CAAC,aAAX;AACD;;AACD,QAAA,MAAM,CAAC,OAAP;AACA,QAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD,OAPD;AAQD,KAzB6D,CA0BlE;AAEG;;;AACC,IAAA,WAAW,CAAC,WAAD,EAAc,WAAW,CAAC,UAA1B,CAAX;AACD;;AAEO,EAAA,eAAe,CACnB,WADmB,EACE,WADF,EAEnB,qBAFmB,EAGnB,iBAHmB,EAG6B,YAH7B,EAInB,aAJmB,EAIgB;AACrC,UAAM,WAAW,GAAG,WAAW,CAAC,WAAhC;AACA,UAAM,WAAW,GAAG,WAAW,CAAC,OAAhC,CAFqC,CAGzC;AAEG;;AACC,UAAM,iBAAiB,GAAgC,EAAvD;AACA,UAAM,mBAAmB,GAAG,IAAI,GAAJ,EAA5B;AACA,UAAM,cAAc,GAAG,IAAI,GAAJ,EAAvB;AACA,UAAM,aAAa,GAAG,WAAW,CAAC,SAAZ,CAAsB,GAAtB,CAA0B,mBAAmB,IAAA;AACjE,YAAM,OAAO,GAAG,mBAAmB,CAAC,OAApC;AACA,MAAA,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,EAFiE,CAGvE;;AAEM,YAAM,OAAO,GAAG,OAAO,CAAC,YAAD,CAAvB;AACA,UAAI,OAAO,IAAI,OAAO,CAAC,oBAAvB,EACE,OAAO,IAAI,mBAAJ,CAAwB,mBAAmB,CAAC,QAA5C,EAAsD,mBAAmB,CAAC,KAA1E,CAAP;AAEF,YAAM,gBAAgB,GAAG,OAAO,KAAK,WAArC;AACA,YAAM,eAAe,GACjB,mBAAmB,CAAC,CAAC,qBAAqB,CAAC,GAAtB,CAA0B,OAA1B,KAAsC,kBAAvC,EACK,GADL,CACS,CAAC,IAAI,CAAC,CAAC,aAAF,EADd,CAAD,CAAnB,CAEK,MAFL,CAEY,CAAC,IAAA;AACvB;AACA;AACA;AACA;AACgB,cAAM,EAAE,GAAG,CAAX;AACA,eAAO,EAAE,CAAC,OAAH,GAAa,EAAE,CAAC,OAAH,KAAe,OAA5B,GAAsC,KAA7C;AACD,OATL,CADJ;AAYA,YAAM,SAAS,GAAG,YAAY,CAAC,GAAb,CAAiB,OAAjB,CAAlB;AACA,YAAM,UAAU,GAAG,aAAa,CAAC,GAAd,CAAkB,OAAlB,CAAnB;AACA,YAAM,SAAS,GAAG,kBAAkB,CAChC,KAAK,MAD2B,EACnB,KAAK,WADc,EACD,OADC,EACQ,mBAAmB,CAAC,SAD5B,EACuC,SADvC,EAEhC,UAFgC,CAApC;;AAGA,YAAM,MAAM,GAAG,KAAK,YAAL,CAAkB,mBAAlB,EAAuC,SAAvC,EAAkD,eAAlD,CAAf,CA3BiE,CA4BvE;AAEK;;;AACC,UAAI,mBAAmB,CAAC,WAApB,IAAmC,iBAAvC,EAA0D;AACxD,QAAA,cAAc,CAAC,GAAf,CAAmB,OAAnB;AACD;;AAED,UAAI,gBAAJ,EAAsB;AACpB,cAAM,aAAa,GAAG,IAAI,yBAAJ,CAA8B,WAA9B,EAA2C,WAA3C,EAAwD,OAAxD,CAAtB;AACA,QAAA,aAAa,CAAC,aAAd,CAA4B,MAA5B;AACA,QAAA,iBAAiB,CAAC,IAAlB,CAAuB,aAAvB;AACD;;AAED,aAAO,MAAP;AACD,KA1CqB,CAAtB;AA4CA,IAAA,iBAAiB,CAAC,OAAlB,CAA0B,MAAM,IAAA;AAC9B,MAAA,eAAe,CAAC,KAAK,uBAAN,EAA+B,MAAM,CAAC,OAAtC,EAA+C,EAA/C,CAAf,CAAkE,IAAlE,CAAuE,MAAvE;AACA,MAAA,MAAM,CAAC,MAAP,CAAc,MAAM,kBAAkB,CAAC,KAAK,uBAAN,EAA+B,MAAM,CAAC,OAAtC,EAA+C,MAA/C,CAAtC;AACD,KAHD;AAKA,IAAA,mBAAmB,CAAC,OAApB,CAA4B,OAAO,IAAI,QAAQ,CAAC,OAAD,EAAU,sBAAV,CAA/C;AACA,UAAM,MAAM,GAAG,mBAAmB,CAAC,aAAD,CAAlC;AACA,IAAA,MAAM,CAAC,SAAP,CAAiB,MAAA;AACf,MAAA,mBAAmB,CAAC,OAApB,CAA4B,OAAO,IAAI,WAAW,CAAC,OAAD,EAAU,sBAAV,CAAlD;AACA,MAAA,SAAS,CAAC,WAAD,EAAc,WAAW,CAAC,QAA1B,CAAT;AACD,KAHD,EA5DqC,CAgEzC;AAEG;;AACC,IAAA,cAAc,CAAC,OAAf,CAAuB,OAAO,IAAA;AAC5B,MAAA,eAAe,CAAC,iBAAD,EAAoB,OAApB,EAA6B,EAA7B,CAAf,CAAgD,IAAhD,CAAqD,MAArD;AACD,KAFD;AAIA,WAAO,MAAP;AACD;;AAEO,EAAA,YAAY,CAChB,WADgB,EAC2B,SAD3B,EAEhB,eAFgB,EAEkB;AACpC,QAAI,SAAS,CAAC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,aAAO,KAAK,MAAL,CAAY,OAAZ,CACH,WAAW,CAAC,OADT,EACkB,SADlB,EAC6B,WAAW,CAAC,QADzC,EACmD,WAAW,CAAC,KAD/D,EAEH,WAAW,CAAC,MAFT,EAEiB,eAFjB,CAAP;AAGD,KALmC,CAMxC;AAEG;;;AACC,WAAO,IAAI,mBAAJ,CAAwB,WAAW,CAAC,QAApC,EAA8C,WAAW,CAAC,KAA1D,CAAP;AACD;;AAj6BmC;;AAm6BtC,MACa,yBADb,CACsC;AAepC,EAAA,WAAA,CAAmB,WAAnB,EAA+C,WAA/C,EAA2E,OAA3E,EAAuF;AAApE,SAAA,WAAA,GAAA,WAAA;AAA4B,SAAA,WAAA,GAAA,WAAA;AAA4B,SAAA,OAAA,GAAA,OAAA;AAdnE,SAAA,OAAA,GAA2B,IAAI,mBAAJ,EAA3B;AACA,SAAA,mBAAA,GAAsB,KAAtB;AAEA,SAAA,gBAAA,GAAoD,EAApD;AACQ,SAAA,SAAA,GAAY,KAAZ;AAIT,SAAA,gBAAA,GAA4B,KAA5B;AACA,SAAA,QAAA,GAAW,KAAX;AAEE,SAAA,MAAA,GAAkB,IAAlB;AACO,SAAA,SAAA,GAAoB,CAApB;AAE2E;;AAE3F,EAAA,aAAa,CAAC,MAAD,EAAwB;AACnC,QAAI,KAAK,mBAAT,EAA8B;AAE9B,SAAK,OAAL,GAAe,MAAf;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,gBAAjB,EAAmC,OAAnC,CAA2C,KAAK,IAAA;AAC9C,WAAK,gBAAL,CAAsB,KAAtB,EAA6B,OAA7B,CACI,QAAQ,IAAI,cAAc,CAAC,MAAD,EAAS,KAAT,EAAgB,SAAhB,EAA2B,QAA3B,CAD9B;AAED,KAHD;AAIA,SAAK,gBAAL,GAAwB,EAAxB;AACA,SAAK,mBAAL,GAA2B,IAA3B;AACA,SAAK,iBAAL,CAAuB,MAAM,CAAC,SAA9B;AACC,SAA2B,MAA3B,GAAoC,KAApC;AACF;;AAED,EAAA,aAAa,GAAA;AACX,WAAO,KAAK,OAAZ;AACD;;AAED,EAAA,iBAAiB,CAAC,SAAD,EAAkB;AAChC,SAAa,SAAb,GAAyB,SAAzB;AACF;;AAED,EAAA,gBAAgB,CAAC,MAAD,EAAwB;AACtC,UAAM,CAAC,GAAG,KAAK,OAAf;;AACA,QAAI,CAAC,CAAC,eAAN,EAAuB;AACrB,MAAA,MAAM,CAAC,OAAP,CAAe,MAAM,CAAC,CAAC,eAAF,CAAmB,OAAnB,CAArB;AACD;;AACD,IAAA,MAAM,CAAC,MAAP,CAAc,MAAM,KAAK,MAAL,EAApB;AACA,IAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,KAAK,OAAL,EAAvB;AACD;;AAEO,EAAA,WAAW,CAAC,IAAD,EAAe,QAAf,EAA4C;AAC7D,IAAA,eAAe,CAAC,KAAK,gBAAN,EAAwB,IAAxB,EAA8B,EAA9B,CAAf,CAAiD,IAAjD,CAAsD,QAAtD;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAe;AACnB,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,WAAL,CAAiB,MAAjB,EAAyB,EAAzB;AACD;;AACD,SAAK,OAAL,CAAa,MAAb,CAAoB,EAApB;AACD;;AAED,EAAA,OAAO,CAAC,EAAD,EAAe;AACpB,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,WAAL,CAAiB,OAAjB,EAA0B,EAA1B;AACD;;AACD,SAAK,OAAL,CAAa,OAAb,CAAqB,EAArB;AACD;;AAED,EAAA,SAAS,CAAC,EAAD,EAAe;AACtB,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,WAAL,CAAiB,SAAjB,EAA4B,EAA5B;AACD;;AACD,SAAK,OAAL,CAAa,SAAb,CAAuB,EAAvB;AACD;;AAED,EAAA,IAAI,GAAA;AACF,SAAK,OAAL,CAAa,IAAb;AACD;;AAED,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,MAAL,GAAc,KAAd,GAAsB,KAAK,OAAL,CAAa,UAAb,EAA7B;AACD;;AAED,EAAA,IAAI,GAAA;AACF,KAAC,KAAK,MAAN,IAAgB,KAAK,OAAL,CAAa,IAAb,EAAhB;AACD;;AAED,EAAA,KAAK,GAAA;AACH,KAAC,KAAK,MAAN,IAAgB,KAAK,OAAL,CAAa,KAAb,EAAhB;AACD;;AAED,EAAA,OAAO,GAAA;AACL,KAAC,KAAK,MAAN,IAAgB,KAAK,OAAL,CAAa,OAAb,EAAhB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,SAAK,OAAL,CAAa,MAAb;AACD;;AAED,EAAA,OAAO,GAAA;AACJ,SAA8B,SAA9B,GAA0C,IAA1C;;AACD,SAAK,OAAL,CAAa,OAAb;AACD;;AAED,EAAA,KAAK,GAAA;AACH,KAAC,KAAK,MAAN,IAAgB,KAAK,OAAL,CAAa,KAAb,EAAhB;AACD;;AAED,EAAA,WAAW,CAAC,CAAD,EAAO;AAChB,QAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,WAAK,OAAL,CAAa,WAAb,CAAyB,CAAzB;AACD;AACF;;AAED,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,MAAL,GAAc,CAAd,GAAkB,KAAK,OAAL,CAAa,WAAb,EAAzB;AACD;AACH;;;AAEE,EAAA,eAAe,CAAC,SAAD,EAAkB;AAC/B,UAAM,CAAC,GAAG,KAAK,OAAf;;AACA,QAAI,CAAC,CAAC,eAAN,EAAuB;AACrB,MAAA,CAAC,CAAC,eAAF,CAAkB,SAAlB;AACD;AACF;;AA1HmC;;AA6HtC,SAAS,kBAAT,CAA4B,GAA5B,EAAuE,GAAvE,EAAiF,KAAjF,EAA2F;AACzF,MAAI,aAAJ;;AACA,MAAI,GAAG,YAAY,GAAnB,EAAwB;AACtB,IAAA,aAAa,GAAG,GAAG,CAAC,GAAJ,CAAQ,GAAR,CAAhB;;AACA,QAAI,aAAJ,EAAmB;AACjB,UAAI,aAAa,CAAC,MAAlB,EAA0B;AACxB,cAAM,KAAK,GAAG,aAAa,CAAC,OAAd,CAAsB,KAAtB,CAAd;AACA,QAAA,aAAa,CAAC,MAAd,CAAqB,KAArB,EAA4B,CAA5B;AACD;;AACD,UAAI,aAAa,CAAC,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,QAAA,GAAG,CAAC,MAAJ,CAAW,GAAX;AACD;AACF;AACF,GAXD,MAWO;AACL,IAAA,aAAa,GAAG,GAAG,CAAC,GAAD,CAAnB;;AACA,QAAI,aAAJ,EAAmB;AACjB,UAAI,aAAa,CAAC,MAAlB,EAA0B;AACxB,cAAM,KAAK,GAAG,aAAa,CAAC,OAAd,CAAsB,KAAtB,CAAd;AACA,QAAA,aAAa,CAAC,MAAd,CAAqB,KAArB,EAA4B,CAA5B;AACD;;AACD,UAAI,aAAa,CAAC,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,eAAO,GAAG,CAAC,GAAD,CAAV;AACD;AACF;AACF;;AACD,SAAO,aAAP;AACD;;AAED,SAAS,qBAAT,CAA+B,KAA/B,EAAyC;AAAI;AACQ;AACE;AAErD,SAAO,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,IAA/B;AACD;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAAgC;AAC9B,SAAO,IAAI,IAAI,IAAI,CAAC,UAAD,CAAJ,KAAqB,CAApC;AACD;;AAED,SAAS,mBAAT,CAA6B,SAA7B,EAA8C;AAC5C,SAAO,SAAS,IAAI,OAAb,IAAwB,SAAS,IAAI,MAA5C;AACD;;AAED,SAAS,YAAT,CAAsB,OAAtB,EAAoC,KAApC,EAAkD;AAChD,QAAM,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,OAA/B;AACA,EAAA,OAAO,CAAC,KAAR,CAAc,OAAd,GAAwB,KAAK,IAAI,IAAT,GAAgB,KAAhB,GAAwB,MAAhD;AACA,SAAO,QAAP;AACD;;AAED,SAAS,qBAAT,CACI,SADJ,EACqC,MADrC,EAC8D,QAD9D,EAEI,eAFJ,EAE4C,YAF5C,EAEgE;AAC9D,QAAM,SAAS,GAAa,EAA5B;AACA,EAAA,QAAQ,CAAC,OAAT,CAAiB,OAAO,IAAI,SAAS,CAAC,IAAV,CAAe,YAAY,CAAC,OAAD,CAA3B,CAA5B;AAEA,QAAM,cAAc,GAAU,EAA9B;AAEA,EAAA,eAAe,CAAC,OAAhB,CAAwB,CAAC,KAAD,EAAqB,OAArB,KAAiC;AACvD,UAAM,MAAM,GAAe,EAA3B;AACA,IAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAA;AAChB,YAAM,KAAK,GAAG,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,YAAP,CAAoB,OAApB,EAA6B,IAA7B,EAAmC,YAAnC,CAA7B,CADgB,CAEtB;AAEK;;AACC,UAAI,CAAC,KAAD,IAAU,KAAK,CAAC,MAAN,IAAgB,CAA9B,EAAiC;AAC/B,QAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,0BAAxB;AACA,QAAA,cAAc,CAAC,IAAf,CAAoB,OAApB;AACD;AACF,KATD;AAUA,IAAA,SAAS,CAAC,GAAV,CAAc,OAAd,EAAuB,MAAvB;AACD,GAbD,EAN8D,CAoBhE;AAEC;;AACC,MAAI,CAAC,GAAG,CAAR;AACA,EAAA,QAAQ,CAAC,OAAT,CAAiB,OAAO,IAAI,YAAY,CAAC,OAAD,EAAU,SAAS,CAAC,CAAC,EAAF,CAAnB,CAAxC;AAEA,SAAO,cAAP;AACD;AAED;;;;;;;;;;;;AAUA,SAAS,YAAT,CAAsB,KAAtB,EAAoC,KAApC,EAAgD;AAC9C,QAAM,OAAO,GAAG,IAAI,GAAJ,EAAhB;AACA,EAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAI,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAkB,EAAlB,CAAtB;AAEA,MAAI,KAAK,CAAC,MAAN,IAAgB,CAApB,EAAuB,OAAO,OAAP;AAEvB,QAAM,SAAS,GAAG,CAAlB;AACA,QAAM,OAAO,GAAG,IAAI,GAAJ,CAAQ,KAAR,CAAhB;AACA,QAAM,YAAY,GAAG,IAAI,GAAJ,EAArB;;AAEA,WAAS,OAAT,CAAiB,IAAjB,EAA0B;AACxB,QAAI,CAAC,IAAL,EAAW,OAAO,SAAP;AAEX,QAAI,IAAI,GAAG,YAAY,CAAC,GAAb,CAAiB,IAAjB,CAAX;AACA,QAAI,IAAJ,EAAU,OAAO,IAAP;AAEV,UAAM,MAAM,GAAG,IAAI,CAAC,UAApB;;AACA,QAAI,OAAO,CAAC,GAAR,CAAY,MAAZ,CAAJ,EAAyB;AAAA;AACvB,MAAA,IAAI,GAAG,MAAP;AACD,KAFD,MAEO,IAAI,OAAO,CAAC,GAAR,CAAY,MAAZ,CAAJ,EAAyB;AAAA;AAC9B,MAAA,IAAI,GAAG,SAAP;AACD,KAFM,MAEA;AAAA;AACL,MAAA,IAAI,GAAG,OAAO,CAAC,MAAD,CAAd;AACD;;AAED,IAAA,YAAY,CAAC,GAAb,CAAiB,IAAjB,EAAuB,IAAvB;AACA,WAAO,IAAP;AACD;;AAED,EAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAA;AAChB,UAAM,IAAI,GAAG,OAAO,CAAC,IAAD,CAApB;;AACA,QAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAmB,IAAnB,CAAwB,IAAxB;AACD;AACF,GALD;AAOA,SAAO,OAAP;AACD;;AAED,MAAM,iBAAiB,GAAG,WAA1B;;AACA,SAAS,aAAT,CAAuB,OAAvB,EAAqC,SAArC,EAAsD;AACpD,MAAI,OAAO,CAAC,SAAZ,EAAuB;AACrB,WAAO,OAAO,CAAC,SAAR,CAAkB,QAAlB,CAA2B,SAA3B,CAAP;AACD,GAFD,MAEO;AACL,UAAM,OAAO,GAAG,OAAO,CAAC,iBAAD,CAAvB;AACA,WAAO,OAAO,IAAI,OAAO,CAAC,SAAD,CAAzB;AACD;AACF;;AAED,SAAS,QAAT,CAAkB,OAAlB,EAAgC,SAAhC,EAAiD;AAC/C,MAAI,OAAO,CAAC,SAAZ,EAAuB;AACrB,IAAA,OAAO,CAAC,SAAR,CAAkB,GAAlB,CAAsB,SAAtB;AACD,GAFD,MAEO;AACL,QAAI,OAAO,GAAmC,OAAO,CAAC,iBAAD,CAArD;;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,MAAA,OAAO,GAAG,OAAO,CAAC,iBAAD,CAAP,GAA6B,EAAvC;AACD;;AACD,IAAA,OAAO,CAAC,SAAD,CAAP,GAAqB,IAArB;AACD;AACF;;AAED,SAAS,WAAT,CAAqB,OAArB,EAAmC,SAAnC,EAAoD;AAClD,MAAI,OAAO,CAAC,SAAZ,EAAuB;AACrB,IAAA,OAAO,CAAC,SAAR,CAAkB,MAAlB,CAAyB,SAAzB;AACD,GAFD,MAEO;AACL,QAAI,OAAO,GAAmC,OAAO,CAAC,iBAAD,CAArD;;AACA,QAAI,OAAJ,EAAa;AACX,aAAO,OAAO,CAAC,SAAD,CAAd;AACD;AACF;AACF;;AAED,SAAS,6BAAT,CACI,MADJ,EACuC,OADvC,EACqD,OADrD,EAC+E;AAC7E,EAAA,mBAAmB,CAAC,OAAD,CAAnB,CAA6B,MAA7B,CAAoC,MAAM,MAAM,CAAC,gBAAP,CAAwB,OAAxB,CAA1C;AACD;;AAED,SAAS,mBAAT,CAA6B,OAA7B,EAAuD;AACrD,QAAM,YAAY,GAAsB,EAAxC;;AACA,EAAA,yBAAyB,CAAC,OAAD,EAAU,YAAV,CAAzB;;AACA,SAAO,YAAP;AACD;;AAED,SAAS,yBAAT,CAAmC,OAAnC,EAA+D,YAA/D,EAA8F;AAC5F,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,OAAO,CAAC,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,UAAM,MAAM,GAAG,OAAO,CAAC,CAAD,CAAtB;;AACA,QAAI,MAAM,YAAYC,qBAAtB,EAA4C;AAC1C,MAAA,yBAAyB,CAAC,MAAM,CAAC,OAAR,EAAiB,YAAjB,CAAzB;AACD,KAFD,MAEO;AACL,MAAA,YAAY,CAAC,IAAb,CAAkB,MAAlB;AACD;AACF;AACF;;AAED,SAAS,SAAT,CAAmB,CAAnB,EAA4C,CAA5C,EAAmE;AACjE,QAAM,EAAE,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAX;AACA,QAAM,EAAE,GAAG,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAX;AACA,MAAI,EAAE,CAAC,MAAH,IAAa,EAAE,CAAC,MAApB,EAA4B,OAAO,KAAP;;AAC5B,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAAE,CAAC,MAAvB,EAA+B,CAAC,EAAhC,EAAoC;AAClC,UAAM,IAAI,GAAG,EAAE,CAAC,CAAD,CAAf;AACA,QAAI,CAAC,CAAC,CAAC,cAAF,CAAiB,IAAjB,CAAD,IAA2B,CAAC,CAAC,IAAD,CAAD,KAAY,CAAC,CAAC,IAAD,CAA5C,EAAoD,OAAO,KAAP;AACrD;;AACD,SAAO,IAAP;AACD;;AAED,SAAS,sBAAT,CACI,OADJ,EACkB,mBADlB,EAEI,oBAFJ,EAE+C;AAC7C,QAAM,SAAS,GAAG,oBAAoB,CAAC,GAArB,CAAyB,OAAzB,CAAlB;AACA,MAAI,CAAC,SAAL,EAAgB,OAAO,KAAP;AAEhB,MAAI,QAAQ,GAAG,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,CAAf;;AACA,MAAI,QAAJ,EAAc;AACZ,IAAA,SAAS,CAAC,OAAV,CAAkB,IAAI,IAAI,QAAS,CAAC,GAAV,CAAc,IAAd,CAA1B;AACD,GAFD,MAEO;AACL,IAAA,mBAAmB,CAAC,GAApB,CAAwB,OAAxB,EAAiC,SAAjC;AACD;;AAED,EAAA,oBAAoB,CAAC,MAArB,CAA4B,OAA5B;AACA,SAAO,IAAP;AACF;;AACC,MC/uDY,eD+uDZ,CC/uD2B;AAS1B,EAAA,WAAA,CACY,QADZ,EACmC,OADnC,EAEI,UAFJ,EAEwC;AAD5B,SAAA,QAAA,GAAA,QAAA;AAAuB,SAAA,OAAA,GAAA,OAAA;AAN3B,SAAA,aAAA,GAAmD,EAAnD,CAOgC,CAN1C;;AAES,SAAA,iBAAA,GAAoB,CAAC,OAAD,EAAe,OAAf,KAA2B,CAAO,CAAtD;;AAKL,SAAK,iBAAL,GAAyB,IAAI,yBAAJ,CAA8B,QAA9B,EAAwC,OAAxC,EAAiD,UAAjD,CAAzB;AACA,SAAK,eAAL,GAAuB,IAAI,uBAAJ,CAA4B,QAA5B,EAAsC,OAAtC,EAA+C,UAA/C,CAAvB;;AAEA,SAAK,iBAAL,CAAuB,iBAAvB,GAA2C,CAAC,OAAD,EAAe,OAAf,KACvC,KAAK,iBAAL,CAAuB,OAAvB,EAAgC,OAAhC,CADJ;AAED;;AAED,EAAA,eAAe,CACX,WADW,EACU,WADV,EAC+B,WAD/B,EACiD,IADjD,EAEX,QAFW,EAEuB;AACpC,UAAM,QAAQ,GAAG,WAAW,GAAG,GAAd,GAAoB,IAArC;AACA,QAAI,OAAO,GAAG,KAAK,aAAL,CAAmB,QAAnB,CAAd;;AACA,QAAI,CAAC,OAAL,EAAc;AACZ,YAAM,MAAM,GAAU,EAAtB;AACA,YAAM,GAAG,GACL,iBAAiB,CAAC,KAAK,OAAN,EAAe,QAAf,EAA8C,MAA9C,CADrB;;AAEA,UAAI,MAAM,CAAC,MAAX,EAAmB;AACjB,cAAM,IAAI,KAAJ,CAAU,0BACZ,IAAI,0DAA0D,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAoB,EADhF,CAAN;AAED;;AACD,MAAA,OAAO,GAAG,YAAY,CAAC,IAAD,EAAO,GAAP,CAAtB;AACA,WAAK,aAAL,CAAmB,QAAnB,IAA+B,OAA/B;AACD;;AACD,SAAK,iBAAL,CAAuB,eAAvB,CAAuC,WAAvC,EAAoD,IAApD,EAA0D,OAA1D;AACD;;AAED,EAAA,QAAQ,CAAC,WAAD,EAAsB,WAAtB,EAAsC;AAC5C,SAAK,iBAAL,CAAuB,QAAvB,CAAgC,WAAhC,EAA6C,WAA7C;AACD;;AAED,EAAA,OAAO,CAAC,WAAD,EAAsB,OAAtB,EAAkC;AACvC,SAAK,iBAAL,CAAuB,OAAvB,CAA+B,WAA/B,EAA4C,OAA5C;AACD;;AAED,EAAA,QAAQ,CAAC,WAAD,EAAsB,OAAtB,EAAoC,MAApC,EAAiD,YAAjD,EAAsE;AAC5E,SAAK,iBAAL,CAAuB,UAAvB,CAAkC,WAAlC,EAA+C,OAA/C,EAAwD,MAAxD,EAAgE,YAAhE;AACD;;AAED,EAAA,QAAQ,CAAC,WAAD,EAAsB,OAAtB,EAAoC,OAApC,EAAkD,aAAlD,EAAyE;AAC/E,SAAK,iBAAL,CAAuB,UAAvB,CAAkC,WAAlC,EAA+C,OAA/C,EAAwD,aAAa,IAAI,KAAzE,EAAgF,OAAhF;AACD;;AAED,EAAA,iBAAiB,CAAC,OAAD,EAAe,OAAf,EAA+B;AAC9C,SAAK,iBAAL,CAAuB,qBAAvB,CAA6C,OAA7C,EAAsD,OAAtD;AACD;;AAED,EAAA,OAAO,CAAC,WAAD,EAAsB,OAAtB,EAAoC,QAApC,EAAsD,KAAtD,EAAgE;AACrE,QAAI,QAAQ,CAAC,MAAT,CAAgB,CAAhB,KAAsB,GAA1B,EAA+B;AAC7B,YAAM,CAAC,EAAD,EAAK,MAAL,IAAe,oBAAoB,CAAC,QAAD,CAAzC;AACA,YAAM,IAAI,GAAG,KAAb;;AACA,WAAK,eAAL,CAAqB,OAArB,CAA6B,EAA7B,EAAiC,OAAjC,EAA0C,MAA1C,EAAkD,IAAlD;AACD,KAJD,MAIO;AACL,WAAK,iBAAL,CAAuB,OAAvB,CAA+B,WAA/B,EAA4C,OAA5C,EAAqD,QAArD,EAA+D,KAA/D;AACD;AACF;;AAED,EAAA,MAAM,CACF,WADE,EACmB,OADnB,EACiC,SADjC,EACoD,UADpD,EAEF,QAFE,EAE2B;AAAI;AAEnC,QAAI,SAAS,CAAC,MAAV,CAAiB,CAAjB,KAAuB,GAA3B,EAAgC;AAC9B,YAAM,CAAC,EAAD,EAAK,MAAL,IAAe,oBAAoB,CAAC,SAAD,CAAzC;AACA,aAAO,KAAK,eAAL,CAAqB,MAArB,CAA4B,EAA5B,EAAgC,OAAhC,EAAyC,MAAzC,EAAiD,QAAjD,CAAP;AACD;;AACD,WAAO,KAAK,iBAAL,CAAuB,MAAvB,CAA8B,WAA9B,EAA2C,OAA3C,EAAoD,SAApD,EAA+D,UAA/D,EAA2E,QAA3E,CAAP;AACD;;AAED,EAAA,KAAK,CAAC,WAAA,GAAsB,CAAC,CAAxB,EAAyB;AAC5B,SAAK,iBAAL,CAAuB,KAAvB,CAA6B,WAA7B;AACD;;AAED,MAAI,OAAJ,GAAW;AACT,WAAQ,KAAK,iBAAL,CAAuB,OAAvB,CACH,MADG,CACI,KAAK,eAAL,CAAqB,OADzB,CAAR;AAED;;AAED,EAAA,iBAAiB,GAAA;AACf,WAAO,KAAK,iBAAL,CAAuB,iBAAvB,EAAP;AACD;;AA1FyB;AClB5B;;;;;;;;AASA;;;;;;;;;;;;;AAWA,SAAgB,0BAAhB,CACI,OADJ,EACkB,MADlB,EACqE;AACnE,MAAI,WAAW,GAA8B,IAA7C;AACA,MAAI,SAAS,GAA8B,IAA3C;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,MAAd,KAAyB,MAAM,CAAC,MAApC,EAA4C;AAC1C,IAAA,WAAW,GAAG,yBAAyB,CAAC,MAAM,CAAC,CAAD,CAAP,CAAvC;;AACA,QAAI,MAAM,CAAC,MAAP,GAAgB,CAApB,EAAuB;AACrB,MAAA,SAAS,GAAG,yBAAyB,CAAC,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAAP,CAArC;AACD;AACF,GALD,MAKO,IAAI,MAAJ,EAAY;AACjB,IAAA,WAAW,GAAG,yBAAyB,CAAC,MAAD,CAAvC;AACD;;AAED,SAAQ,WAAW,IAAI,SAAhB,GAA6B,IAAI,kBAAJ,CAAuB,OAAvB,EAAgC,WAAhC,EAA6C,SAA7C,CAA7B,GAC6B,IADpC;AAED;AAED;;;;;;;;;;AAQA,MAAa,kBAAb,CAA+B;AAM7B,EAAA,WAAA,CACY,QADZ,EACmC,YADnC,EAEY,UAFZ,EAEiD;AADrC,SAAA,QAAA,GAAA,QAAA;AAAuB,SAAA,YAAA,GAAA,YAAA;AACvB,SAAA,UAAA,GAAA,UAAA;AALJ,SAAA,MAAA,GAAM;AAAA;AAAN;AAMN,QAAI,aAAa,GAAG,kBAAkB,CAAC,sBAAnB,CAA0C,GAA1C,CAA8C,QAA9C,CAApB;;AACA,QAAI,CAAC,aAAL,EAAoB;AAClB,MAAA,kBAAkB,CAAC,sBAAnB,CAA0C,GAA1C,CAA8C,QAA9C,EAAwD,aAAa,GAAG,EAAxE;AACD;;AACD,SAAK,cAAL,GAAsB,aAAtB;AACD;;AAED,EAAA,KAAK,GAAA;AACH,QAAI,KAAK,MAAL,GAAW;AAAA;AAAf,MAAmD;AACjD,YAAI,KAAK,YAAT,EAAuB;AACrB,UAAA,SAAS,CAAC,KAAK,QAAN,EAAgB,KAAK,YAArB,EAAmC,KAAK,cAAxC,CAAT;AACD;;AACD,aAAK,MAAL,GAAW;AAAA;AAAX;AACD;AACF;;AAED,EAAA,MAAM,GAAA;AACJ,SAAK,KAAL;;AACA,QAAI,KAAK,MAAL,GAAW;AAAA;AAAf,MAAoD;AAClD,QAAA,SAAS,CAAC,KAAK,QAAN,EAAgB,KAAK,cAArB,CAAT;;AACA,YAAI,KAAK,UAAT,EAAqB;AACnB,UAAA,SAAS,CAAC,KAAK,QAAN,EAAgB,KAAK,UAArB,CAAT;AACA,eAAK,UAAL,GAAkB,IAAlB;AACD;;AACD,aAAK,MAAL,GAAW;AAAA;AAAX;AACD;AACF;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,MAAL;;AACA,QAAI,KAAK,MAAL,GAAW;AAAA;AAAf,MAAqD;AACnD,QAAA,kBAAkB,CAAC,sBAAnB,CAA0C,MAA1C,CAAiD,KAAK,QAAtD;;AACA,YAAI,KAAK,YAAT,EAAuB;AACrB,UAAA,WAAW,CAAC,KAAK,QAAN,EAAgB,KAAK,YAArB,CAAX;AACA,eAAK,UAAL,GAAkB,IAAlB;AACD;;AACD,YAAI,KAAK,UAAT,EAAqB;AACnB,UAAA,WAAW,CAAC,KAAK,QAAN,EAAgB,KAAK,UAArB,CAAX;AACA,eAAK,UAAL,GAAkB,IAAlB;AACD;;AACD,QAAA,SAAS,CAAC,KAAK,QAAN,EAAgB,KAAK,cAArB,CAAT;AACA,aAAK,MAAL,GAAW;AAAA;AAAX;AACD;AACF;;AApD4B;;AACtB,kBAAA,CAAA,sBAAA,GAAyB,IAAI,OAAJ,EAAzB;;AAuET,SAAS,yBAAT,CAAmC,MAAnC,EAA+D;AAC7D,MAAI,MAAM,GAA8B,IAAxC;AACA,QAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAd;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,IAAI,GAAG,KAAK,CAAC,CAAD,CAAlB;;AACA,QAAI,oBAAoB,CAAC,IAAD,CAAxB,EAAgC;AAC9B,MAAA,MAAM,GAAG,MAAM,IAAI,EAAnB;AACA,MAAA,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;AACD;AACF;;AACD,SAAO,MAAP;AACD;;AAED,SAAS,oBAAT,CAA8B,IAA9B,EAA0C;AACxC,SAAO,IAAI,KAAK,SAAT,IAAsB,IAAI,KAAK,UAAtC;AACF;ACpIA;;;;;;;;;AAOA,MAAM,+BAA+B,GAAG,CAAxC;AACA,MAAM,cAAc,GAAG,WAAvB;AACA,MAAM,kBAAkB,GAAG,cAA3B;AACA,MAAMC,YAAU,GAAG,IAAnB;;AACA,MACa,4BADb,CACyC;AAOvC,EAAA,WAAA,CACqB,QADrB,EACqD,KADrD,EAEqB,SAFrB,EAEyD,MAFzD,EAGqB,OAHrB,EAGuD,SAHvD,EAIqB,SAJrB,EAIyC;AAHpB,SAAA,QAAA,GAAA,QAAA;AAAgC,SAAA,KAAA,GAAA,KAAA;AAChC,SAAA,SAAA,GAAA,SAAA;AAAoC,SAAA,MAAA,GAAA,MAAA;AACpC,SAAA,OAAA,GAAA,OAAA;AAAkC,SAAA,SAAA,GAAA,SAAA;AAClC,SAAA,SAAA,GAAA,SAAA;AATb,SAAA,SAAA,GAAY,KAAZ;AACA,SAAA,UAAA,GAAa,KAAb;AACA,SAAA,UAAA,GAAa,CAAb;AACA,SAAA,SAAA,GAAY,CAAZ;;AAON,SAAK,QAAL,GAAiB,CAAD,IAAO,KAAK,eAAL,CAAqB,CAArB,CAAvB;AACD;;AAED,EAAA,KAAK,GAAA;AACH,IAAA,sBAAsB,CAClB,KAAK,QADa,EAElB,GAAG,KAAK,SAAS,MAAM,KAAK,OAAO,IAAI,KAAK,MAAM,eAAe,KAAK,SAAS,IAC3E,KAAK,KAAK,EAHI,CAAtB;AAIA,IAAA,uBAAuB,CAAC,KAAK,QAAN,EAAgB,KAAK,QAArB,EAA+B,KAA/B,CAAvB;AACA,SAAK,UAAL,GAAkB,IAAI,CAAC,GAAL,EAAlB;AACD;;AAED,EAAA,KAAK,GAAA;AACH,IAAA,kBAAkB,CAAC,KAAK,QAAN,EAAgB,KAAK,KAArB,EAA4B,QAA5B,CAAlB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,IAAA,kBAAkB,CAAC,KAAK,QAAN,EAAgB,KAAK,KAArB,EAA4B,SAA5B,CAAlB;AACD;;AAED,EAAA,WAAW,CAAC,QAAD,EAAiB;AAC1B,UAAM,KAAK,GAAG,qBAAqB,CAAC,KAAK,QAAN,EAAgB,KAAK,KAArB,CAAnC;AACA,SAAK,SAAL,GAAiB,QAAQ,GAAG,KAAK,SAAjC;AACA,IAAA,iBAAiB,CAAC,KAAK,QAAN,EAAgB,OAAhB,EAAyB,IAAI,KAAK,SAAS,IAA3C,EAAiD,KAAjD,CAAjB;AACD;;AAED,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,SAAZ;AACD;;AAEO,EAAA,eAAe,CAAC,KAAD,EAAW;AAChC,UAAM,SAAS,GAAG,KAAK,CAAC,sBAAN,IAAgC,IAAI,CAAC,GAAL,EAAlD;AACA,UAAM,WAAW,GACb,UAAU,CAAC,KAAK,CAAC,WAAN,CAAkB,OAAlB,CAA0B,+BAA1B,CAAD,CAAV,GAAyEA,YAD7E;;AAEA,QAAI,KAAK,CAAC,aAAN,IAAuB,KAAK,KAA5B,IACA,IAAI,CAAC,GAAL,CAAS,SAAS,GAAG,KAAK,UAA1B,EAAsC,CAAtC,KAA4C,KAAK,MADjD,IAC2D,WAAW,IAAI,KAAK,SADnF,EAC8F;AAC5F,WAAK,MAAL;AACD;AACF;;AAED,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,SAAT,EAAoB;AACpB,SAAK,SAAL,GAAiB,IAAjB;;AACA,SAAK,SAAL;;AACA,IAAA,uBAAuB,CAAC,KAAK,QAAN,EAAgB,KAAK,QAArB,EAA+B,IAA/B,CAAvB;AACD;;AAED,EAAA,OAAO,GAAA;AACL,QAAI,KAAK,UAAT,EAAqB;AACrB,SAAK,UAAL,GAAkB,IAAlB;AACA,SAAK,MAAL;AACA,IAAA,uBAAuB,CAAC,KAAK,QAAN,EAAgB,KAAK,KAArB,CAAvB;AACD;;AAhEsC;;AAmEzC,SAAS,kBAAT,CAA4B,OAA5B,EAA0C,IAA1C,EAAwD,MAAxD,EAAkF;AAChF,QAAM,KAAK,GAAG,qBAAqB,CAAC,OAAD,EAAU,IAAV,CAAnC;AACA,EAAA,iBAAiB,CAAC,OAAD,EAAU,WAAV,EAAuB,MAAvB,EAA+B,KAA/B,CAAjB;AACD;;AAED,SAAS,sBAAT,CAAgC,OAAhC,EAA8C,KAA9C,EAA2D;AACzD,QAAM,IAAI,GAAG,iBAAiB,CAAC,OAAD,EAAU,EAAV,CAAjB,CAA+B,IAA/B,EAAb;AACA,MAAI,KAAK,GAAG,CAAZ;;AACA,MAAI,IAAI,CAAC,MAAT,EAAiB;AACf,IAAA,KAAK,GAAG,UAAU,CAAC,IAAD,EAAO,GAAP,CAAV,GAAwB,CAAhC;AACA,IAAA,KAAK,GAAG,GAAG,IAAI,KAAK,KAAK,EAAzB;AACD;;AACD,EAAA,iBAAiB,CAAC,OAAD,EAAU,EAAV,EAAc,KAAd,CAAjB;AACA,SAAO,KAAP;AACD;;AAED,SAAS,uBAAT,CAAiC,OAAjC,EAA+C,IAA/C,EAA2D;AACzD,QAAM,IAAI,GAAG,iBAAiB,CAAC,OAAD,EAAU,EAAV,CAA9B;AACA,QAAM,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAf;AACA,QAAM,KAAK,GAAG,sBAAsB,CAAC,MAAD,EAAS,IAAT,CAApC;;AACA,MAAI,KAAK,IAAI,CAAb,EAAgB;AACd,IAAA,MAAM,CAAC,MAAP,CAAc,KAAd,EAAqB,CAArB;AACA,UAAM,QAAQ,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAjB;AACA,IAAA,iBAAiB,CAAC,OAAD,EAAU,EAAV,EAAc,QAAd,CAAjB;AACD;AACF;;AAED,SAAS,qBAAT,CAA+B,OAA/B,EAA6C,KAA7C,EAA0D;AACxD,QAAM,IAAI,GAAG,iBAAiB,CAAC,OAAD,EAAU,EAAV,CAA9B;;AACA,MAAI,IAAI,CAAC,OAAL,CAAa,GAAb,IAAoB,CAAxB,EAA2B;AACzB,UAAM,MAAM,GAAG,IAAI,CAAC,KAAL,CAAW,GAAX,CAAf;AACA,WAAO,sBAAsB,CAAC,MAAD,EAAS,KAAT,CAA7B;AACD;;AACD,SAAO,sBAAsB,CAAC,CAAC,IAAD,CAAD,EAAS,KAAT,CAA7B;AACD;;AAED,SAAS,sBAAT,CAAgC,MAAhC,EAAkD,WAAlD,EAAqE;AACnE,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,QAAI,MAAM,CAAC,CAAD,CAAN,CAAU,OAAV,CAAkB,WAAlB,KAAkC,CAAtC,EAAyC;AACvC,aAAO,CAAP;AACD;AACF;;AACD,SAAO,CAAC,CAAR;AACD;;AAED,SAAS,uBAAT,CAAiC,OAAjC,EAA+C,EAA/C,EAAoE,QAApE,EAAqF;AACnF,EAAA,QAAQ,GAAG,OAAO,CAAC,mBAAR,CAA4B,kBAA5B,EAAgD,EAAhD,CAAH,GACG,OAAO,CAAC,gBAAR,CAAyB,kBAAzB,EAA6C,EAA7C,CADX;AAED;;AAED,SAAS,iBAAT,CAA2B,OAA3B,EAAyC,IAAzC,EAAuD,KAAvD,EAAsE,KAAtE,EAAoF;AAClF,QAAM,IAAI,GAAG,cAAc,GAAG,IAA9B;;AACA,MAAI,KAAK,IAAI,IAAb,EAAmB;AACjB,UAAM,QAAQ,GAAG,OAAO,CAAC,KAAR,CAAc,IAAd,CAAjB;;AACA,QAAI,QAAQ,CAAC,MAAb,EAAqB;AACnB,YAAM,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,GAAf,CAAf;AACA,MAAA,MAAM,CAAC,KAAD,CAAN,GAAgB,KAAhB;AACA,MAAA,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAR;AACD;AACF;;AACD,EAAA,OAAO,CAAC,KAAR,CAAc,IAAd,IAAsB,KAAtB;AACD;;AAED,SAAS,iBAAT,CAA2B,OAA3B,EAAyC,IAAzC,EAAqD;AACnD,SAAO,OAAO,CAAC,KAAR,CAAc,cAAc,GAAG,IAA/B,CAAP;AACD;;AAED,SAAS,UAAT,CAAoB,KAApB,EAAmC,IAAnC,EAA+C;AAC7C,MAAI,KAAK,GAAG,CAAZ;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,CAAC,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAAC,GAAG,KAAK,CAAC,MAAN,CAAa,CAAb,CAAV;AACA,QAAI,CAAC,KAAK,IAAV,EAAgB,KAAK;AACtB;;AACD,SAAO,KAAP;AACF;;AC5IA,MAAM,iBAAiB,GAAG,UAA1B;AACA,MAAM,cAAc,GAAG,QAAvB;;AACA,MAQa,kBARb,CAQ+B;AAiB7B,EAAA,WAAA,CACoB,OADpB,EACkD,SADlD,EAEoB,aAFpB,EAE4D,SAF5D,EAGqB,MAHrB,EAGqC,MAHrC,EAIqB,YAJrB,EAKqB,cALrB,EAK6D;AAJzC,SAAA,OAAA,GAAA,OAAA;AAA8B,SAAA,SAAA,GAAA,SAAA;AAC9B,SAAA,aAAA,GAAA,aAAA;AAAwC,SAAA,SAAA,GAAA,SAAA;AACvC,SAAA,MAAA,GAAA,MAAA;AACA,SAAA,YAAA,GAAA,YAAA;AACA,SAAA,cAAA,GAAA,cAAA;AArBb,SAAA,UAAA,GAAyB,EAAzB;AACA,SAAA,WAAA,GAA0B,EAA1B;AACA,SAAA,aAAA,GAA4B,EAA5B;AAEA,SAAA,QAAA,GAAW,KAAX;AAQD,SAAA,eAAA,GAA2C,EAA3C;AAEC,SAAA,MAAA,GAA+B,CAA/B;AAQN,SAAK,MAAL,GAAc,MAAM,IAAI,cAAxB;AACA,SAAK,SAAL,GAAiB,SAAS,GAAG,MAA7B;;AACA,SAAK,YAAL;AACD;;AAED,EAAA,OAAO,CAAC,EAAD,EAAe;AACpB,SAAK,WAAL,CAAiB,IAAjB,CAAsB,EAAtB;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAe;AACnB,SAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB;AACD;;AAED,EAAA,SAAS,CAAC,EAAD,EAAe;AACtB,SAAK,aAAL,CAAmB,IAAnB,CAAwB,EAAxB;AACD;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,IAAL;AACA,QAAI,KAAK,MAAL,IAAW;AAAA;AAAf,MAAmD;AACnD,SAAK,MAAL,GAAW;AAAA;AAAX;;AACA,SAAK,OAAL,CAAa,OAAb;;AACA,SAAK,cAAL;;AACA,SAAK,aAAL;;AACA,QAAI,KAAK,cAAT,EAAyB;AACvB,WAAK,cAAL,CAAoB,OAApB;AACD;;AACD,SAAK,aAAL,CAAmB,OAAnB,CAA2B,EAAE,IAAI,EAAE,EAAnC;;AACA,SAAK,aAAL,GAAqB,EAArB;AACD;;AAEO,EAAA,aAAa,GAAA;AACnB,SAAK,UAAL,CAAgB,OAAhB,CAAwB,EAAE,IAAI,EAAE,EAAhC;;AACA,SAAK,UAAL,GAAkB,EAAlB;AACD;;AAEO,EAAA,cAAc,GAAA;AACpB,SAAK,WAAL,CAAiB,OAAjB,CAAyB,EAAE,IAAI,EAAE,EAAjC;;AACA,SAAK,WAAL,GAAmB,EAAnB;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,SAAK,IAAL;AACA,QAAI,KAAK,MAAL,IAAW;AAAA;AAAf,MAAkD;AAClD,SAAK,MAAL,GAAW;AAAA;AAAX;;AACA,SAAK,OAAL,CAAa,MAAb;;AACA,SAAK,cAAL;;AACA,QAAI,KAAK,cAAT,EAAyB;AACvB,WAAK,cAAL,CAAoB,MAApB;AACD;;AACD,SAAK,aAAL;AACD;;AAED,EAAA,WAAW,CAAC,KAAD,EAAc;AACvB,SAAK,OAAL,CAAa,WAAb,CAAyB,KAAzB;AACD;;AAED,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,OAAL,CAAa,WAAb,EAAP;AACD;;AAED,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,MAAL,IAAW;AAAA;AAAlB;AACD;;AACD,EAAA,IAAI,GAAA;AACF,QAAI,KAAK,MAAL,IAAW;AAAA;AAAf,MAAqD;AACrD,SAAK,MAAL,GAAW;AAAA;AAAX;AACA,UAAM,GAAG,GAAG,KAAK,OAAjB;;AACA,SAAK,OAAL,CAAa,KAAb;;AACA,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,OAAL,CAAa,KAAb;AACD;AACF;;AAED,EAAA,IAAI,GAAA;AACF,SAAK,IAAL;;AACA,QAAI,CAAC,KAAK,UAAL,EAAL,EAAwB;AACtB,WAAK,cAAL;;AACA,WAAK,MAAL,GAAW;AAAA;AAAX;;AACA,UAAI,KAAK,cAAT,EAAyB;AACvB,aAAK,cAAL,CAAoB,KAApB;AACD;AACF;;AACD,SAAK,OAAL,CAAa,MAAb;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,IAAL;;AACA,SAAK,OAAL,CAAa,KAAb;AACD;;AACD,EAAA,OAAO,GAAA;AACL,SAAK,KAAL;AACA,SAAK,IAAL;AACD;;AACD,EAAA,KAAK,GAAA;AACH,SAAK,OAAL,CAAa,OAAb;;AACA,SAAK,YAAL;;AACA,SAAK,OAAL,CAAa,KAAb;AACD;;AAEO,EAAA,YAAY,GAAA;AAClB,SAAK,OAAL,GAAe,IAAI,4BAAJ,CACX,KAAK,OADM,EACG,KAAK,aADR,EACuB,KAAK,SAD5B,EACuC,KAAK,MAD5C,EACoD,KAAK,MADzD,EAEX,iBAFW,EAEQ,MAAM,KAAK,MAAL,EAFd,CAAf;AAGD;AACH;;;AAEE,EAAA,eAAe,CAAC,SAAD,EAAkB;AAC/B,UAAM,OAAO,GAAG,SAAS,IAAI,OAAb,GAAuB,KAAK,WAA5B,GAA0C,KAAK,UAA/D;AACA,IAAA,OAAO,CAAC,OAAR,CAAgB,EAAE,IAAI,EAAE,EAAxB;AACA,IAAA,OAAO,CAAC,MAAR,GAAiB,CAAjB;AACD;;AAED,EAAA,aAAa,GAAA;AACX,SAAK,IAAL;AACA,UAAM,MAAM,GAA4B,EAAxC;;AACA,QAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,YAAM,QAAQ,GAAG,KAAK,MAAL,IAAW;AAAA;AAA5B;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,YAAjB,EAA+B,OAA/B,CAAuC,IAAI,IAAA;AACzC,YAAI,IAAI,IAAI,QAAZ,EAAsB;AACpB,UAAA,MAAM,CAAC,IAAD,CAAN,GAAe,QAAQ,GAAG,KAAK,YAAL,CAAkB,IAAlB,CAAH,GAA6B,YAAY,CAAC,KAAK,OAAN,EAAe,IAAf,CAAhE;AACD;AACF,OAJD;AAKD;;AACD,SAAK,eAAL,GAAuB,MAAvB;AACD;;AApJ4B;ACvB/B;;;;;;;;;AAOA,MAGa,iBAHb,SAGuC,mBAHvC,CAG0D;AAKxD,EAAA,WAAA,CAAmB,OAAnB,EAAiC,MAAjC,EAA6D;AAC3D;AADiB,SAAA,OAAA,GAAA,OAAA;AAJX,SAAA,eAAA,GAA6C,EAA7C;AACA,SAAA,aAAA,GAAgB,KAAhB;AAKN,SAAK,OAAL,GAAe,mBAAmB,CAAC,MAAD,CAAlC;AACD;;AAED,EAAA,IAAI,GAAA;AACF,QAAI,KAAK,aAAL,IAAsB,CAAC,KAAK,eAAhC,EAAiD;AACjD,SAAK,aAAL,GAAqB,IAArB;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,OAAjB,EAA0B,OAA1B,CAAkC,IAAI,IAAA;AACpC,WAAK,eAAL,CAAsB,IAAtB,IAA8B,KAAK,OAAL,CAAa,KAAb,CAAmB,IAAnB,CAA9B;AACD,KAFD;AAGA,UAAM,IAAN;AACD;;AAED,EAAA,IAAI,GAAA;AACF,QAAI,CAAC,KAAK,eAAV,EAA2B;AAC3B,SAAK,IAAL;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,OAAjB,EACK,OADL,CACa,IAAI,IAAI,KAAK,OAAL,CAAa,KAAb,CAAmB,WAAnB,CAA+B,IAA/B,EAAqC,KAAK,OAAL,CAAa,IAAb,CAArC,CADrB;AAEA,UAAM,IAAN;AACD;;AAED,EAAA,OAAO,GAAA;AACL,QAAI,CAAC,KAAK,eAAV,EAA2B;AAC3B,IAAA,MAAM,CAAC,IAAP,CAAY,KAAK,eAAjB,EAAkC,OAAlC,CAA0C,IAAI,IAAA;AAC5C,YAAM,KAAK,GAAG,KAAK,eAAL,CAAsB,IAAtB,CAAd;;AACA,UAAI,KAAJ,EAAW;AACT,aAAK,OAAL,CAAa,KAAb,CAAmB,WAAnB,CAA+B,IAA/B,EAAqC,KAArC;AACD,OAFD,MAEO;AACL,aAAK,OAAL,CAAa,KAAb,CAAmB,cAAnB,CAAkC,IAAlC;AACD;AACF,KAPD;AAQA,SAAK,eAAL,GAAuB,IAAvB;AACA,UAAM,OAAN;AACD;;AAvCuD;;ACO1D,MAAM,qBAAqB,GAAG,aAA9B;AACA,MAAM,SAAS,GAAG,GAAlB;;AACA,MACa,kBADb,CAC+B;AAA/B,EAAA,WAAA,GAAA;AACU,SAAA,MAAA,GAAS,CAAT;AACS,SAAA,KAAA,GAAa,QAAQ,CAAC,aAAT,CAAuB,MAAvB,CAAb;AACT,SAAA,cAAA,GAAiB,KAAjB;AAyGT;;AAvGC,EAAA,qBAAqB,CAAC,IAAD,EAAa;AAChC,WAAO,qBAAqB,CAAC,IAAD,CAA5B;AACD;;AAED,EAAA,cAAc,CAAC,OAAD,EAAe,QAAf,EAA+B;AAC3C,WAAO,cAAc,CAAC,OAAD,EAAU,QAAV,CAArB;AACD;;AAED,EAAA,eAAe,CAAC,IAAD,EAAY,IAAZ,EAAqB;AAClC,WAAO,eAAe,CAAC,IAAD,EAAO,IAAP,CAAtB;AACD;;AAED,EAAA,KAAK,CAAC,OAAD,EAAe,QAAf,EAAiC,KAAjC,EAA+C;AAClD,WAAO,WAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAlB;AACD;;AAED,EAAA,YAAY,CAAC,OAAD,EAAe,IAAf,EAA6B,YAA7B,EAAkD;AAC5D,WAAQ,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAyC,IAAzC,CAAR;AACD;;AAED,EAAA,oBAAoB,CAAC,OAAD,EAAe,IAAf,EAA6B,SAA7B,EAA8D;AAChF,IAAA,SAAS,GAAG,SAAS,CAAC,GAAV,CAAc,EAAE,IAAI,mBAAmB,CAAC,EAAD,CAAvC,CAAZ;AACA,QAAI,WAAW,GAAG,cAAc,IAAI,MAApC;AACA,QAAI,GAAG,GAAG,EAAV;AACA,IAAA,SAAS,CAAC,OAAV,CAAkB,EAAE,IAAA;AAClB,MAAA,GAAG,GAAG,SAAN;AACA,YAAM,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,QAAD,CAAH,CAAzB;AACA,MAAA,WAAW,IAAI,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,OAApC;AACA,MAAA,GAAG,IAAI,SAAP;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAwB,IAAI,IAAA;AAC1B,cAAM,KAAK,GAAG,EAAE,CAAC,IAAD,CAAhB;;AACA,gBAAQ,IAAR;AACE,eAAK,QAAL;AACE;;AACF,eAAK,QAAL;AACE,gBAAI,KAAJ,EAAW;AACT,cAAA,WAAW,IAAI,GAAG,GAAG,8BAA8B,KAAK,KAAxD;AACD;;AACD;;AACF;AACE,YAAA,WAAW,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,KAAK,KAAtC;AACA;AAVJ;AAYD,OAdD;AAeA,MAAA,WAAW,IAAI,GAAG,GAAG,KAArB;AACD,KArBD;AAsBA,IAAA,WAAW,IAAI,KAAf;AAEA,UAAM,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAAd;AACA,IAAA,KAAK,CAAC,SAAN,GAAkB,WAAlB;AACA,WAAO,KAAP;AACD;;AAED,EAAA,OAAO,CACH,OADG,EACW,SADX,EACoC,QADpC,EACsD,KADtD,EACqE,MADrE,EAEH,eAAA,GAAqC,EAFlC,EAEsC,uBAFtC,EAEuE;AAC5E,QAAI,uBAAJ,EAA6B;AAC3B,WAAK,qBAAL;AACD;;AAED,UAAM,0BAA0B,GAAyB,eAAe,CAAC,MAAhB,CACrD,MAAM,IAAI,MAAM,YAAY,kBADyB,CAAzD;AAGA,UAAM,cAAc,GAAyB,EAA7C;;AAEA,QAAI,8BAA8B,CAAC,QAAD,EAAW,KAAX,CAAlC,EAAqD;AACnD,MAAA,0BAA0B,CAAC,OAA3B,CAAmC,MAAM,IAAA;AACvC,YAAI,MAAM,GAAG,MAAM,CAAC,eAApB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAI,cAAc,CAAC,IAAD,CAAd,GAAuB,MAAM,CAAC,IAAD,CAAjE;AACD,OAHD;AAID;;AAED,IAAA,SAAS,GAAG,kCAAkC,CAAC,OAAD,EAAU,SAAV,EAAqB,cAArB,CAA9C;AACA,UAAM,WAAW,GAAG,0BAA0B,CAAC,SAAD,CAA9C,CAlB4E,CAmBhF;AAEG;AACI;AACI;;AACP,QAAI,QAAQ,IAAI,CAAhB,EAAmB;AACjB,aAAO,IAAI,iBAAJ,CAAsB,OAAtB,EAA+B,WAA/B,CAAP;AACD;;AAED,UAAM,aAAa,GAAG,GAAG,qBAAqB,GAAG,KAAK,MAAL,EAAa,EAA9D;AACA,UAAM,KAAK,GAAG,KAAK,oBAAL,CAA0B,OAA1B,EAAmC,aAAnC,EAAkD,SAAlD,CAAd;AACA,IAAA,QAAQ,CAAC,aAAT,CAAuB,MAAvB,EAAgC,WAAhC,CAA4C,KAA5C;AAEA,UAAM,aAAa,GAAG,0BAA0B,CAAC,OAAD,EAAU,SAAV,CAAhD;AACA,UAAM,MAAM,GAAG,IAAI,kBAAJ,CACX,OADW,EACF,SADE,EACS,aADT,EACwB,QADxB,EACkC,KADlC,EACyC,MADzC,EACiD,WADjD,EAC8D,aAD9D,CAAf;AAGA,IAAA,MAAM,CAAC,SAAP,CAAiB,MAAM,aAAa,CAAC,KAAD,CAApC;AACA,WAAO,MAAP;AACD;;AAEO,EAAA,qBAAqB,GAAA;AAC3B,QAAI,CAAC,KAAK,cAAV,EAA0B;AACxB,MAAA,OAAO,CAAC,IAAR,CACI,mGADJ,EAEI,uFAFJ;AAGA,WAAK,cAAL,GAAsB,IAAtB;AACD;AACF;;AA3G4B;;AA8G/B,SAAS,0BAAT,CAAoC,SAApC,EAC0D;AACxD,MAAI,aAAa,GAAyB,EAA1C;;AACA,MAAI,SAAJ,EAAe;AACb,UAAM,GAAG,GAAG,KAAK,CAAC,OAAN,CAAc,SAAd,IAA2B,SAA3B,GAAuC,CAAC,SAAD,CAAnD;AACA,IAAA,GAAG,CAAC,OAAJ,CAAY,EAAE,IAAA;AACZ,MAAA,MAAM,CAAC,IAAP,CAAY,EAAZ,EAAgB,OAAhB,CAAwB,IAAI,IAAA;AAC1B,YAAI,IAAI,IAAI,QAAR,IAAoB,IAAI,IAAI,QAAhC,EAA0C;AAC1C,QAAA,aAAa,CAAC,IAAD,CAAb,GAAsB,EAAE,CAAC,IAAD,CAAxB;AACD,OAHD;AAID,KALD;AAMD;;AACD,SAAO,aAAP;AACD;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAAgC;AAC9B,EAAA,IAAI,CAAC,UAAL,CAAgB,WAAhB,CAA4B,IAA5B;AACF;;AACC,MCtIY,mBDsIZ,CCtI+B;AAoB9B,EAAA,WAAA,CACW,OADX,EACgC,SADhC,EAEW,OAFX,EAGY,cAHZ,EAGoD;AAFzC,SAAA,OAAA,GAAA,OAAA;AAAqB,SAAA,SAAA,GAAA,SAAA;AACrB,SAAA,OAAA,GAAA,OAAA;AACC,SAAA,cAAA,GAAA,cAAA;AAtBJ,SAAA,UAAA,GAAyB,EAAzB;AACA,SAAA,WAAA,GAA0B,EAA1B;AACA,SAAA,aAAA,GAA4B,EAA5B;AAGA,SAAA,YAAA,GAAe,KAAf;AACA,SAAA,SAAA,GAAY,KAAZ;AACA,SAAA,QAAA,GAAW,KAAX;AACA,SAAA,UAAA,GAAa,KAAb;AAMD,SAAA,IAAA,GAAO,CAAP;AAEA,SAAA,YAAA,GAAqC,IAArC;AACA,SAAA,eAAA,GAAwD,EAAxD;AAML,SAAK,SAAL,GAAyB,OAAO,CAAC,UAAD,CAAhC;AACA,SAAK,MAAL,GAAsB,OAAO,CAAC,OAAD,CAAP,IAAoB,CAA1C;AACA,SAAK,IAAL,GAAY,KAAK,SAAL,GAAiB,KAAK,MAAlC;AACD;;AAEO,EAAA,SAAS,GAAA;AACf,QAAI,CAAC,KAAK,SAAV,EAAqB;AACnB,WAAK,SAAL,GAAiB,IAAjB;;AACA,WAAK,UAAL,CAAgB,OAAhB,CAAwB,EAAE,IAAI,EAAE,EAAhC;;AACA,WAAK,UAAL,GAAkB,EAAlB;AACD;AACF;;AAED,EAAA,IAAI,GAAA;AACF,SAAK,YAAL;;AACA,SAAK,yBAAL;AACD;;AAEO,EAAA,YAAY,GAAA;AAClB,QAAI,KAAK,YAAT,EAAuB;AACvB,SAAK,YAAL,GAAoB,IAApB;AAEA,UAAM,SAAS,GAAG,KAAK,SAAvB;AACC,SAAmC,SAAnC,GACG,KAAK,oBAAL,CAA0B,KAAK,OAA/B,EAAwC,SAAxC,EAAmD,KAAK,OAAxD,CADH;AAED,SAAK,cAAL,GAAsB,SAAS,CAAC,MAAV,GAAmB,SAAS,CAAC,SAAS,CAAC,MAAV,GAAmB,CAApB,CAA5B,GAAqD,EAA3E;AACA,SAAK,SAAL,CAAe,gBAAf,CAAgC,QAAhC,EAA0C,MAAM,KAAK,SAAL,EAAhD;AACD;;AAEO,EAAA,yBAAyB,GAAA;AACnC;AACI,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,oBAAL;AACD,KAFD,MAEO;AACL,WAAK,SAAL,CAAe,KAAf;AACD;AACF;AACH;;;AAEE,EAAA,oBAAoB,CAAC,OAAD,EAAe,SAAf,EAAiC,OAAjC,EAA6C;AAAI;AACU;AAE7E,WAAO,OAAO,CAAC,SAAD,CAAP,CAAmB,SAAnB,EAA8B,OAA9B,CAAP;AACD;;AAED,EAAA,OAAO,CAAC,EAAD,EAAe;AACpB,SAAK,WAAL,CAAiB,IAAjB,CAAsB,EAAtB;AACD;;AAED,EAAA,MAAM,CAAC,EAAD,EAAe;AACnB,SAAK,UAAL,CAAgB,IAAhB,CAAqB,EAArB;AACD;;AAED,EAAA,SAAS,CAAC,EAAD,EAAe;AACtB,SAAK,aAAL,CAAmB,IAAnB,CAAwB,EAAxB;AACD;;AAED,EAAA,IAAI,GAAA;AACF,SAAK,YAAL;;AACA,QAAI,CAAC,KAAK,UAAL,EAAL,EAAwB;AACtB,WAAK,WAAL,CAAiB,OAAjB,CAAyB,EAAE,IAAI,EAAE,EAAjC;;AACA,WAAK,WAAL,GAAmB,EAAnB;AACA,WAAK,QAAL,GAAgB,IAAhB;;AACA,UAAI,KAAK,cAAT,EAAyB;AACvB,aAAK,cAAL,CAAoB,KAApB;AACD;AACF;;AACD,SAAK,SAAL,CAAe,IAAf;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,IAAL;AACA,SAAK,SAAL,CAAe,KAAf;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,SAAK,IAAL;;AACA,QAAI,KAAK,cAAT,EAAyB;AACvB,WAAK,cAAL,CAAoB,MAApB;AACD;;AACD,SAAK,SAAL;;AACA,SAAK,SAAL,CAAe,MAAf;AACD;;AAED,EAAA,KAAK,GAAA;AACH,SAAK,oBAAL;;AACA,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,QAAL,GAAgB,KAAhB;AACD;;AAEO,EAAA,oBAAoB,GAAA;AAC1B,QAAI,KAAK,SAAT,EAAoB;AAClB,WAAK,SAAL,CAAe,MAAf;AACD;AACF;;AAED,EAAA,OAAO,GAAA;AACL,SAAK,KAAL;AACA,SAAK,IAAL;AACD;;AAED,EAAA,UAAU,GAAA;AACR,WAAO,KAAK,QAAZ;AACD;;AAED,EAAA,OAAO,GAAA;AACL,QAAI,CAAC,KAAK,UAAV,EAAsB;AACpB,WAAK,UAAL,GAAkB,IAAlB;;AACA,WAAK,oBAAL;;AACA,WAAK,SAAL;;AACA,UAAI,KAAK,cAAT,EAAyB;AACvB,aAAK,cAAL,CAAoB,OAApB;AACD;;AACD,WAAK,aAAL,CAAmB,OAAnB,CAA2B,EAAE,IAAI,EAAE,EAAnC;;AACA,WAAK,aAAL,GAAqB,EAArB;AACD;AACF;;AAED,EAAA,WAAW,CAAC,CAAD,EAAU;AACnB,SAAK,SAAL,CAAe,WAAf,GAA6B,CAAC,GAAG,KAAK,IAAtC;AACD;;AAED,EAAA,WAAW,GAAA;AACT,WAAO,KAAK,SAAL,CAAe,WAAf,GAA6B,KAAK,IAAzC;AACD;;AAED,MAAI,SAAJ,GAAa;AACX,WAAO,KAAK,MAAL,GAAc,KAAK,SAA1B;AACD;;AAED,EAAA,aAAa,GAAA;AACX,UAAM,MAAM,GAAmC,EAA/C;;AACA,QAAI,KAAK,UAAL,EAAJ,EAAuB;AACrB,MAAA,MAAM,CAAC,IAAP,CAAY,KAAK,cAAjB,EAAiC,OAAjC,CAAyC,IAAI,IAAA;AAC3C,YAAI,IAAI,IAAI,QAAZ,EAAsB;AACpB,UAAA,MAAM,CAAC,IAAD,CAAN,GACI,KAAK,SAAL,GAAiB,KAAK,cAAL,CAAoB,IAApB,CAAjB,GAA6C,YAAY,CAAC,KAAK,OAAN,EAAe,IAAf,CAD7D;AAED;AACF,OALD;AAMD;;AACD,SAAK,eAAL,GAAuB,MAAvB;AACD;AACH;;;AAEE,EAAA,eAAe,CAAC,SAAD,EAAkB;AAC/B,UAAM,OAAO,GAAG,SAAS,IAAI,OAAb,GAAuB,KAAK,WAA5B,GAA0C,KAAK,UAA/D;AACA,IAAA,OAAO,CAAC,OAAR,CAAgB,EAAE,IAAI,EAAE,EAAxB;AACA,IAAA,OAAO,CAAC,MAAR,GAAiB,CAAjB;AACD;;AA7K6B;;AA+K/B,MC5KY,mBD4KZ,CC5K+B;AAAhC,EAAA,WAAA,GAAA;AACU,SAAA,aAAA,GAAgB,8BAA8B,IAA9B,CAAmC,mBAAmB,GAAG,QAAtB,EAAnC,CAAhB;AACA,SAAA,mBAAA,GAAsB,IAAI,kBAAJ,EAAtB;AA2DT;;AAzDC,EAAA,qBAAqB,CAAC,IAAD,EAAa;AAChC,WAAO,qBAAqB,CAAC,IAAD,CAA5B;AACD;;AAED,EAAA,cAAc,CAAC,OAAD,EAAe,QAAf,EAA+B;AAC3C,WAAO,cAAc,CAAC,OAAD,EAAU,QAAV,CAArB;AACD;;AAED,EAAA,eAAe,CAAC,IAAD,EAAY,IAAZ,EAAqB;AAClC,WAAO,eAAe,CAAC,IAAD,EAAO,IAAP,CAAtB;AACD;;AAED,EAAA,KAAK,CAAC,OAAD,EAAe,QAAf,EAAiC,KAAjC,EAA+C;AAClD,WAAO,WAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAlB;AACD;;AAED,EAAA,YAAY,CAAC,OAAD,EAAe,IAAf,EAA6B,YAA7B,EAAkD;AAC5D,WAAQ,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAyC,IAAzC,CAAR;AACD;;AAED,EAAA,4BAA4B,CAAC,SAAD,EAAmB;AAC7C,SAAK,aAAL,GAAqB,SAArB;AACD;;AAED,EAAA,OAAO,CACH,OADG,EACW,SADX,EACoC,QADpC,EACsD,KADtD,EACqE,MADrE,EAEH,eAAA,GAAqC,EAFlC,EAEsC,uBAFtC,EAEuE;AAC5E,UAAM,YAAY,GAAG,CAAC,uBAAD,IAA4B,CAAC,KAAK,aAAvD;;AACA,QAAI,YAAJ,EAAkB;AAChB,aAAO,KAAK,mBAAL,CAAyB,OAAzB,CACH,OADG,EACM,SADN,EACiB,QADjB,EAC2B,KAD3B,EACkC,MADlC,EAC0C,eAD1C,CAAP;AAED;;AAED,UAAM,IAAI,GAAG,KAAK,IAAI,CAAT,GAAa,MAAb,GAAsB,UAAnC;AACA,UAAM,aAAa,GAAmC;AAAC,MAAA,QAAD;AAAW,MAAA,KAAX;AAAkB,MAAA;AAAlB,KAAtD,CAR4E,CAShF;AACI;;AACA,QAAI,MAAJ,EAAY;AACV,MAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,MAA1B;AACD;;AAED,UAAM,cAAc,GAAyB,EAA7C;AACA,UAAM,2BAA2B,GAA0B,eAAe,CAAC,MAAhB,CACvD,MAAM,IAAI,MAAM,YAAY,mBAD2B,CAA3D;;AAGA,QAAI,8BAA8B,CAAC,QAAD,EAAW,KAAX,CAAlC,EAAqD;AACnD,MAAA,2BAA2B,CAAC,OAA5B,CAAoC,MAAM,IAAA;AACxC,YAAI,MAAM,GAAG,MAAM,CAAC,eAApB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,IAAI,IAAI,cAAc,CAAC,IAAD,CAAd,GAAuB,MAAM,CAAC,IAAD,CAAjE;AACD,OAHD;AAID;;AAED,IAAA,SAAS,GAAG,SAAS,CAAC,GAAV,CAAc,MAAM,IAAI,UAAU,CAAC,MAAD,EAAS,KAAT,CAAlC,CAAZ;AACA,IAAA,SAAS,GAAG,kCAAkC,CAAC,OAAD,EAAU,SAAV,EAAqB,cAArB,CAA9C;AACA,UAAM,aAAa,GAAG,0BAA0B,CAAC,OAAD,EAAU,SAAV,CAAhD;AACA,WAAO,IAAI,mBAAJ,CAAwB,OAAxB,EAAiC,SAAjC,EAA4C,aAA5C,EAA2D,aAA3D,CAAP;AACD;;AA5D6B;;AA8DhC,SACgB,qBADhB,GACqC;AACnC,SAAO,OAAO,mBAAmB,EAA1B,KAAiC,UAAxC;AACD;;AAED,SAAS,mBAAT,GAA4B;AAC1B,SAAQ,SAAS,MAAY,OAAQ,CAAC,SAAT,CAAmB,SAAnB,CAAtB,IAAwD,EAA/D;AACF;ACtFA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;;;;ACAA;;;;;AAIA,SAAA,eAAA,EAAA,SAAA,IAAA,UAAA,EAAA,eAAA,IAAA,gBAAA,EAAA,wBAAA,IAAA,yBAAA,EAAA,kBAAA,IAAA,mBAAA,EAAA,kBAAA,IAAA,mBAAA,EAAA,mBAAA,IAAA,oBAAA,EAAA,4BAAA,IAAA,6BAAA,EAAA,mBAAA,IAAA,oBAAA,EAAA,mBAAA,IAAA,oBAAA,EAAA,4BAAA,IAAA,6BAAA,EAAA,8BAAA,IAAA,+BAAA,EAAA,kBAAA,IAAA,8CAAA,EAAA,eAAA,IAAA,gBAAA,EAAA,WAAA,IAAA,YAAA,EAAA,cAAA,IAAA,eAAA,EAAA,qBAAA,IAAA,sBAAA,EAAA,qBAAA,IAAA,sBAAA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent, AnimationPlayer, AUTO_STYLE, NoopAnimationPlayer, ɵAnimationGroupPlayer, ɵPRE_STYLE as PRE_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {AnimationStyleNormalizer} from '../../src/dsl/style_normalization/animation_style_normalizer';\nimport {AnimationDriver} from '../../src/render/animation_driver';\n\n// We don't include ambient node types here since @angular/animations/browser\n// is meant to target the browser so technically it should not depend on node\n// types. `process` is just declared locally here as a result.\ndeclare const process: any;\n\nexport function isBrowser(): boolean {\n  return (typeof window !== 'undefined' && typeof window.document !== 'undefined');\n}\n\nexport function isNode(): boolean {\n  // Checking only for `process` isn't enough to identify whether or not we're in a Node\n  // environment, because Webpack by default will polyfill the `process`. While we can discern\n  // that Webpack polyfilled it by looking at `process.browser`, it's very Webpack-specific and\n  // might not be future-proof. Instead we look at the stringified version of `process` which\n  // is `[object process]` in Node and `[object Object]` when polyfilled.\n  return typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n}\n\nexport function optimizeGroupPlayer(players: AnimationPlayer[]): AnimationPlayer {\n  switch (players.length) {\n    case 0:\n      return new NoopAnimationPlayer();\n    case 1:\n      return players[0];\n    default:\n      return new ɵAnimationGroupPlayer(players);\n  }\n}\n\nexport function normalizeKeyframes(\n    driver: AnimationDriver, normalizer: AnimationStyleNormalizer, element: any,\n    keyframes: ɵStyleData[], preStyles: ɵStyleData = {},\n    postStyles: ɵStyleData = {}): ɵStyleData[] {\n  const errors: string[] = [];\n  const normalizedKeyframes: ɵStyleData[] = [];\n  let previousOffset = -1;\n  let previousKeyframe: ɵStyleData|null = null;\n  keyframes.forEach(kf => {\n    const offset = kf['offset'] as number;\n    const isSameOffset = offset == previousOffset;\n    const normalizedKeyframe: ɵStyleData = (isSameOffset && previousKeyframe) || {};\n    Object.keys(kf).forEach(prop => {\n      let normalizedProp = prop;\n      let normalizedValue = kf[prop];\n      if (prop !== 'offset') {\n        normalizedProp = normalizer.normalizePropertyName(normalizedProp, errors);\n        switch (normalizedValue) {\n          case PRE_STYLE:\n            normalizedValue = preStyles[prop];\n            break;\n\n          case AUTO_STYLE:\n            normalizedValue = postStyles[prop];\n            break;\n\n          default:\n            normalizedValue =\n                normalizer.normalizeStyleValue(prop, normalizedProp, normalizedValue, errors);\n            break;\n        }\n      }\n      normalizedKeyframe[normalizedProp] = normalizedValue;\n    });\n    if (!isSameOffset) {\n      normalizedKeyframes.push(normalizedKeyframe);\n    }\n    previousKeyframe = normalizedKeyframe;\n    previousOffset = offset;\n  });\n  if (errors.length) {\n    const LINE_START = '\\n - ';\n    throw new Error(\n        `Unable to animate due to the following errors:${LINE_START}${errors.join(LINE_START)}`);\n  }\n\n  return normalizedKeyframes;\n}\n\nexport function listenOnPlayer(\n    player: AnimationPlayer, eventName: string, event: AnimationEvent|undefined,\n    callback: (event: any) => any) {\n  switch (eventName) {\n    case 'start':\n      player.onStart(() => callback(event && copyAnimationEvent(event, 'start', player)));\n      break;\n    case 'done':\n      player.onDone(() => callback(event && copyAnimationEvent(event, 'done', player)));\n      break;\n    case 'destroy':\n      player.onDestroy(() => callback(event && copyAnimationEvent(event, 'destroy', player)));\n      break;\n  }\n}\n\nexport function copyAnimationEvent(\n    e: AnimationEvent, phaseName: string, player: AnimationPlayer): AnimationEvent {\n  const totalTime = player.totalTime;\n  const disabled = (player as any).disabled ? true : false;\n  const event = makeAnimationEvent(\n      e.element, e.triggerName, e.fromState, e.toState, phaseName || e.phaseName,\n      totalTime == undefined ? e.totalTime : totalTime, disabled);\n  const data = (e as any)['_data'];\n  if (data != null) {\n    (event as any)['_data'] = data;\n  }\n  return event;\n}\n\nexport function makeAnimationEvent(\n    element: any, triggerName: string, fromState: string, toState: string, phaseName: string = '',\n    totalTime: number = 0, disabled?: boolean): AnimationEvent {\n  return {element, triggerName, fromState, toState, phaseName, totalTime, disabled: !!disabled};\n}\n\nexport function getOrSetAsInMap(\n    map: Map<any, any>|{[key: string]: any}, key: any, defaultValue: any) {\n  let value: any;\n  if (map instanceof Map) {\n    value = map.get(key);\n    if (!value) {\n      map.set(key, value = defaultValue);\n    }\n  } else {\n    value = map[key];\n    if (!value) {\n      value = map[key] = defaultValue;\n    }\n  }\n  return value;\n}\n\nexport function parseTimelineCommand(command: string): [string, string] {\n  const separatorPos = command.indexOf(':');\n  const id = command.substring(1, separatorPos);\n  const action = command.substr(separatorPos + 1);\n  return [id, action];\n}\n\nlet _contains: (elm1: any, elm2: any) => boolean = (elm1: any, elm2: any) => false;\nlet _matches: (element: any, selector: string) => boolean = (element: any, selector: string) =>\n    false;\nlet _query: (element: any, selector: string, multi: boolean) => any[] =\n    (element: any, selector: string, multi: boolean) => {\n      return [];\n    };\n\n// Define utility methods for browsers and platform-server(domino) where Element\n// and utility methods exist.\nconst _isNode = isNode();\nif (_isNode || typeof Element !== 'undefined') {\n  // this is well supported in all browsers\n  _contains = (elm1: any, elm2: any) => {\n    return elm1.contains(elm2) as boolean;\n  };\n\n  _matches = (() => {\n    if (_isNode || Element.prototype.matches) {\n      return (element: any, selector: string) => element.matches(selector);\n    } else {\n      const proto = Element.prototype as any;\n      const fn = proto.matchesSelector || proto.mozMatchesSelector || proto.msMatchesSelector ||\n          proto.oMatchesSelector || proto.webkitMatchesSelector;\n      if (fn) {\n        return (element: any, selector: string) => fn.apply(element, [selector]);\n      } else {\n        return _matches;\n      }\n    }\n  })();\n\n  _query = (element: any, selector: string, multi: boolean): any[] => {\n    let results: any[] = [];\n    if (multi) {\n      results.push(...element.querySelectorAll(selector));\n    } else {\n      const elm = element.querySelector(selector);\n      if (elm) {\n        results.push(elm);\n      }\n    }\n    return results;\n  };\n}\n\nfunction containsVendorPrefix(prop: string): boolean {\n  // Webkit is the only real popular vendor prefix nowadays\n  // cc: http://shouldiprefix.com/\n  return prop.substring(1, 6) == 'ebkit';  // webkit or Webkit\n}\n\nlet _CACHED_BODY: {style: any}|null = null;\nlet _IS_WEBKIT = false;\nexport function validateStyleProperty(prop: string): boolean {\n  if (!_CACHED_BODY) {\n    _CACHED_BODY = getBodyNode() || {};\n    _IS_WEBKIT = _CACHED_BODY!.style ? ('WebkitAppearance' in _CACHED_BODY!.style) : false;\n  }\n\n  let result = true;\n  if (_CACHED_BODY!.style && !containsVendorPrefix(prop)) {\n    result = prop in _CACHED_BODY!.style;\n    if (!result && _IS_WEBKIT) {\n      const camelProp = 'Webkit' + prop.charAt(0).toUpperCase() + prop.substr(1);\n      result = camelProp in _CACHED_BODY!.style;\n    }\n  }\n\n  return result;\n}\n\nexport function getBodyNode(): any|null {\n  if (typeof document != 'undefined') {\n    return document.body;\n  }\n  return null;\n}\n\nexport const matchesElement = _matches;\nexport const containsElement = _contains;\nexport const invokeQuery = _query;\n\nexport function hypenatePropsObject(object: {[key: string]: any}): {[key: string]: any} {\n  const newObj: {[key: string]: any} = {};\n  Object.keys(object).forEach(prop => {\n    const newProp = prop.replace(/([a-z])([A-Z])/g, '$1-$2');\n    newObj[newProp] = object[prop];\n  });\n  return newObj;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer, NoopAnimationPlayer} from '@angular/animations';\nimport {Injectable} from '@angular/core';\n\nimport {containsElement, invokeQuery, matchesElement, validateStyleProperty} from './shared';\n\n/**\n * @publicApi\n */\n@Injectable()\nexport class NoopAnimationDriver implements AnimationDriver {\n  validateStyleProperty(prop: string): boolean {\n    return validateStyleProperty(prop);\n  }\n\n  matchesElement(element: any, selector: string): boolean {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1: any, elm2: any): boolean {\n    return containsElement(elm1, elm2);\n  }\n\n  query(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return defaultValue || '';\n  }\n\n  animate(\n      element: any, keyframes: {[key: string]: string|number}[], duration: number, delay: number,\n      easing: string, previousPlayers: any[] = [],\n      scrubberAccessRequested?: boolean): AnimationPlayer {\n    return new NoopAnimationPlayer(duration, delay);\n  }\n}\n\n/**\n * @publicApi\n */\nexport abstract class AnimationDriver {\n  static NOOP: AnimationDriver = new NoopAnimationDriver();\n\n  abstract validateStyleProperty(prop: string): boolean;\n\n  abstract matchesElement(element: any, selector: string): boolean;\n\n  abstract containsElement(elm1: any, elm2: any): boolean;\n\n  abstract query(element: any, selector: string, multi: boolean): any[];\n\n  abstract computeStyle(element: any, prop: string, defaultValue?: string): string;\n\n  abstract animate(\n      element: any, keyframes: {[key: string]: string|number}[], duration: number, delay: number,\n      easing?: string|null, previousPlayers?: any[], scrubberAccessRequested?: boolean): any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateTimings, AnimationMetadata, AnimationMetadataType, AnimationOptions, sequence, ɵStyleData} from '@angular/animations';\nimport {Ast as AnimationAst, AstVisitor as AnimationAstVisitor} from './dsl/animation_ast';\nimport {AnimationDslVisitor} from './dsl/animation_dsl_visitor';\nimport {isNode} from './render/shared';\n\nexport const ONE_SECOND = 1000;\n\nexport const SUBSTITUTION_EXPR_START = '{{';\nexport const SUBSTITUTION_EXPR_END = '}}';\nexport const ENTER_CLASSNAME = 'ng-enter';\nexport const LEAVE_CLASSNAME = 'ng-leave';\nexport const ENTER_SELECTOR = '.ng-enter';\nexport const LEAVE_SELECTOR = '.ng-leave';\nexport const NG_TRIGGER_CLASSNAME = 'ng-trigger';\nexport const NG_TRIGGER_SELECTOR = '.ng-trigger';\nexport const NG_ANIMATING_CLASSNAME = 'ng-animating';\nexport const NG_ANIMATING_SELECTOR = '.ng-animating';\n\nexport function resolveTimingValue(value: string|number) {\n  if (typeof value == 'number') return value;\n\n  const matches = value.match(/^(-?[\\.\\d]+)(m?s)/);\n  if (!matches || matches.length < 2) return 0;\n\n  return _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n}\n\nfunction _convertTimeValueToMS(value: number, unit: string): number {\n  switch (unit) {\n    case 's':\n      return value * ONE_SECOND;\n    default:  // ms or something else\n      return value;\n  }\n}\n\nexport function resolveTiming(\n    timings: string|number|AnimateTimings, errors: any[], allowNegativeValues?: boolean) {\n  return timings.hasOwnProperty('duration') ?\n      <AnimateTimings>timings :\n      parseTimeExpression(<string|number>timings, errors, allowNegativeValues);\n}\n\nfunction parseTimeExpression(\n    exp: string|number, errors: string[], allowNegativeValues?: boolean): AnimateTimings {\n  const regex = /^(-?[\\.\\d]+)(m?s)(?:\\s+(-?[\\.\\d]+)(m?s))?(?:\\s+([-a-z]+(?:\\(.+?\\))?))?$/i;\n  let duration: number;\n  let delay: number = 0;\n  let easing: string = '';\n  if (typeof exp === 'string') {\n    const matches = exp.match(regex);\n    if (matches === null) {\n      errors.push(`The provided timing value \"${exp}\" is invalid.`);\n      return {duration: 0, delay: 0, easing: ''};\n    }\n\n    duration = _convertTimeValueToMS(parseFloat(matches[1]), matches[2]);\n\n    const delayMatch = matches[3];\n    if (delayMatch != null) {\n      delay = _convertTimeValueToMS(parseFloat(delayMatch), matches[4]);\n    }\n\n    const easingVal = matches[5];\n    if (easingVal) {\n      easing = easingVal;\n    }\n  } else {\n    duration = exp;\n  }\n\n  if (!allowNegativeValues) {\n    let containsErrors = false;\n    let startIndex = errors.length;\n    if (duration < 0) {\n      errors.push(`Duration values below 0 are not allowed for this animation step.`);\n      containsErrors = true;\n    }\n    if (delay < 0) {\n      errors.push(`Delay values below 0 are not allowed for this animation step.`);\n      containsErrors = true;\n    }\n    if (containsErrors) {\n      errors.splice(startIndex, 0, `The provided timing value \"${exp}\" is invalid.`);\n    }\n  }\n\n  return {duration, delay, easing};\n}\n\nexport function copyObj(\n    obj: {[key: string]: any}, destination: {[key: string]: any} = {}): {[key: string]: any} {\n  Object.keys(obj).forEach(prop => {\n    destination[prop] = obj[prop];\n  });\n  return destination;\n}\n\nexport function normalizeStyles(styles: ɵStyleData|ɵStyleData[]): ɵStyleData {\n  const normalizedStyles: ɵStyleData = {};\n  if (Array.isArray(styles)) {\n    styles.forEach(data => copyStyles(data, false, normalizedStyles));\n  } else {\n    copyStyles(styles, false, normalizedStyles);\n  }\n  return normalizedStyles;\n}\n\nexport function copyStyles(\n    styles: ɵStyleData, readPrototype: boolean, destination: ɵStyleData = {}): ɵStyleData {\n  if (readPrototype) {\n    // we make use of a for-in loop so that the\n    // prototypically inherited properties are\n    // revealed from the backFill map\n    for (let prop in styles) {\n      destination[prop] = styles[prop];\n    }\n  } else {\n    copyObj(styles, destination);\n  }\n  return destination;\n}\n\nfunction getStyleAttributeString(element: any, key: string, value: string) {\n  // Return the key-value pair string to be added to the style attribute for the\n  // given CSS style key.\n  if (value) {\n    return key + ':' + value + ';';\n  } else {\n    return '';\n  }\n}\n\nfunction writeStyleAttribute(element: any) {\n  // Read the style property of the element and manually reflect it to the\n  // style attribute. This is needed because Domino on platform-server doesn't\n  // understand the full set of allowed CSS properties and doesn't reflect some\n  // of them automatically.\n  let styleAttrValue = '';\n  for (let i = 0; i < element.style.length; i++) {\n    const key = element.style.item(i);\n    styleAttrValue += getStyleAttributeString(element, key, element.style.getPropertyValue(key));\n  }\n  for (const key in element.style) {\n    // Skip internal Domino properties that don't need to be reflected.\n    if (!element.style.hasOwnProperty(key) || key.startsWith('_')) {\n      continue;\n    }\n    const dashKey = camelCaseToDashCase(key);\n    styleAttrValue += getStyleAttributeString(element, dashKey, element.style[key]);\n  }\n  element.setAttribute('style', styleAttrValue);\n}\n\nexport function setStyles(element: any, styles: ɵStyleData, formerStyles?: {[key: string]: any}) {\n  if (element['style']) {\n    Object.keys(styles).forEach(prop => {\n      const camelProp = dashCaseToCamelCase(prop);\n      if (formerStyles && !formerStyles.hasOwnProperty(prop)) {\n        formerStyles[prop] = element.style[camelProp];\n      }\n      element.style[camelProp] = styles[prop];\n    });\n    // On the server set the 'style' attribute since it's not automatically reflected.\n    if (isNode()) {\n      writeStyleAttribute(element);\n    }\n  }\n}\n\nexport function eraseStyles(element: any, styles: ɵStyleData) {\n  if (element['style']) {\n    Object.keys(styles).forEach(prop => {\n      const camelProp = dashCaseToCamelCase(prop);\n      element.style[camelProp] = '';\n    });\n    // On the server set the 'style' attribute since it's not automatically reflected.\n    if (isNode()) {\n      writeStyleAttribute(element);\n    }\n  }\n}\n\nexport function normalizeAnimationEntry(steps: AnimationMetadata|\n                                        AnimationMetadata[]): AnimationMetadata {\n  if (Array.isArray(steps)) {\n    if (steps.length == 1) return steps[0];\n    return sequence(steps);\n  }\n  return steps as AnimationMetadata;\n}\n\nexport function validateStyleParams(\n    value: string|number, options: AnimationOptions, errors: any[]) {\n  const params = options.params || {};\n  const matches = extractStyleParams(value);\n  if (matches.length) {\n    matches.forEach(varName => {\n      if (!params.hasOwnProperty(varName)) {\n        errors.push(\n            `Unable to resolve the local animation param ${varName} in the given list of values`);\n      }\n    });\n  }\n}\n\nconst PARAM_REGEX =\n    new RegExp(`${SUBSTITUTION_EXPR_START}\\\\s*(.+?)\\\\s*${SUBSTITUTION_EXPR_END}`, 'g');\nexport function extractStyleParams(value: string|number): string[] {\n  let params: string[] = [];\n  if (typeof value === 'string') {\n    let match: any;\n    while (match = PARAM_REGEX.exec(value)) {\n      params.push(match[1] as string);\n    }\n    PARAM_REGEX.lastIndex = 0;\n  }\n  return params;\n}\n\nexport function interpolateParams(\n    value: string|number, params: {[name: string]: any}, errors: any[]): string|number {\n  const original = value.toString();\n  const str = original.replace(PARAM_REGEX, (_, varName) => {\n    let localVal = params[varName];\n    // this means that the value was never overridden by the data passed in by the user\n    if (!params.hasOwnProperty(varName)) {\n      errors.push(`Please provide a value for the animation param ${varName}`);\n      localVal = '';\n    }\n    return localVal.toString();\n  });\n\n  // we do this to assert that numeric values stay as they are\n  return str == original ? value : str;\n}\n\nexport function iteratorToArray(iterator: any): any[] {\n  const arr: any[] = [];\n  let item = iterator.next();\n  while (!item.done) {\n    arr.push(item.value);\n    item = iterator.next();\n  }\n  return arr;\n}\n\nexport function mergeAnimationOptions(\n    source: AnimationOptions, destination: AnimationOptions): AnimationOptions {\n  if (source.params) {\n    const p0 = source.params;\n    if (!destination.params) {\n      destination.params = {};\n    }\n    const p1 = destination.params;\n    Object.keys(p0).forEach(param => {\n      if (!p1.hasOwnProperty(param)) {\n        p1[param] = p0[param];\n      }\n    });\n  }\n  return destination;\n}\n\nconst DASH_CASE_REGEXP = /-+([a-z0-9])/g;\nexport function dashCaseToCamelCase(input: string): string {\n  return input.replace(DASH_CASE_REGEXP, (...m: any[]) => m[1].toUpperCase());\n}\n\nfunction camelCaseToDashCase(input: string): string {\n  return input.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nexport function allowPreviousPlayerStylesMerge(duration: number, delay: number) {\n  return duration === 0 || delay === 0;\n}\n\nexport function balancePreviousStylesIntoKeyframes(\n    element: any, keyframes: {[key: string]: any}[], previousStyles: {[key: string]: any}) {\n  const previousStyleProps = Object.keys(previousStyles);\n  if (previousStyleProps.length && keyframes.length) {\n    let startingKeyframe = keyframes[0];\n    let missingStyleProps: string[] = [];\n    previousStyleProps.forEach(prop => {\n      if (!startingKeyframe.hasOwnProperty(prop)) {\n        missingStyleProps.push(prop);\n      }\n      startingKeyframe[prop] = previousStyles[prop];\n    });\n\n    if (missingStyleProps.length) {\n      // tslint:disable-next-line\n      for (var i = 1; i < keyframes.length; i++) {\n        let kf = keyframes[i];\n        missingStyleProps.forEach(function(prop) {\n          kf[prop] = computeStyle(element, prop);\n        });\n      }\n    }\n  }\n  return keyframes;\n}\n\nexport function visitDslNode(\n    visitor: AnimationDslVisitor, node: AnimationMetadata, context: any): any;\nexport function visitDslNode(\n    visitor: AnimationAstVisitor, node: AnimationAst<AnimationMetadataType>, context: any): any;\nexport function visitDslNode(visitor: any, node: any, context: any): any {\n  switch (node.type) {\n    case AnimationMetadataType.Trigger:\n      return visitor.visitTrigger(node, context);\n    case AnimationMetadataType.State:\n      return visitor.visitState(node, context);\n    case AnimationMetadataType.Transition:\n      return visitor.visitTransition(node, context);\n    case AnimationMetadataType.Sequence:\n      return visitor.visitSequence(node, context);\n    case AnimationMetadataType.Group:\n      return visitor.visitGroup(node, context);\n    case AnimationMetadataType.Animate:\n      return visitor.visitAnimate(node, context);\n    case AnimationMetadataType.Keyframes:\n      return visitor.visitKeyframes(node, context);\n    case AnimationMetadataType.Style:\n      return visitor.visitStyle(node, context);\n    case AnimationMetadataType.Reference:\n      return visitor.visitReference(node, context);\n    case AnimationMetadataType.AnimateChild:\n      return visitor.visitAnimateChild(node, context);\n    case AnimationMetadataType.AnimateRef:\n      return visitor.visitAnimateRef(node, context);\n    case AnimationMetadataType.Query:\n      return visitor.visitQuery(node, context);\n    case AnimationMetadataType.Stagger:\n      return visitor.visitStagger(node, context);\n    default:\n      throw new Error(`Unable to resolve animation metadata node #${node.type}`);\n  }\n}\n\nexport function computeStyle(element: any, prop: string): string {\n  return (<any>window.getComputedStyle(element))[prop];\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const ANY_STATE = '*';\nexport declare type TransitionMatcherFn =\n    (fromState: any, toState: any, element: any, params: {[key: string]: any}) => boolean;\n\nexport function parseTransitionExpr(\n    transitionValue: string|TransitionMatcherFn, errors: string[]): TransitionMatcherFn[] {\n  const expressions: TransitionMatcherFn[] = [];\n  if (typeof transitionValue == 'string') {\n    transitionValue.split(/\\s*,\\s*/).forEach(\n        str => parseInnerTransitionStr(str, expressions, errors));\n  } else {\n    expressions.push(<TransitionMatcherFn>transitionValue);\n  }\n  return expressions;\n}\n\nfunction parseInnerTransitionStr(\n    eventStr: string, expressions: TransitionMatcherFn[], errors: string[]) {\n  if (eventStr[0] == ':') {\n    const result = parseAnimationAlias(eventStr, errors);\n    if (typeof result == 'function') {\n      expressions.push(result);\n      return;\n    }\n    eventStr = result;\n  }\n\n  const match = eventStr.match(/^(\\*|[-\\w]+)\\s*(<?[=-]>)\\s*(\\*|[-\\w]+)$/);\n  if (match == null || match.length < 4) {\n    errors.push(`The provided transition expression \"${eventStr}\" is not supported`);\n    return expressions;\n  }\n\n  const fromState = match[1];\n  const separator = match[2];\n  const toState = match[3];\n  expressions.push(makeLambdaFromStates(fromState, toState));\n\n  const isFullAnyStateExpr = fromState == ANY_STATE && toState == ANY_STATE;\n  if (separator[0] == '<' && !isFullAnyStateExpr) {\n    expressions.push(makeLambdaFromStates(toState, fromState));\n  }\n}\n\nfunction parseAnimationAlias(alias: string, errors: string[]): string|TransitionMatcherFn {\n  switch (alias) {\n    case ':enter':\n      return 'void => *';\n    case ':leave':\n      return '* => void';\n    case ':increment':\n      return (fromState: any, toState: any): boolean => parseFloat(toState) > parseFloat(fromState);\n    case ':decrement':\n      return (fromState: any, toState: any): boolean => parseFloat(toState) < parseFloat(fromState);\n    default:\n      errors.push(`The transition alias value \"${alias}\" is not supported`);\n      return '* => *';\n  }\n}\n\n// DO NOT REFACTOR ... keep the follow set instantiations\n// with the values intact (closure compiler for some reason\n// removes follow-up lines that add the values outside of\n// the constructor...\nconst TRUE_BOOLEAN_VALUES = new Set<string>(['true', '1']);\nconst FALSE_BOOLEAN_VALUES = new Set<string>(['false', '0']);\n\nfunction makeLambdaFromStates(lhs: string, rhs: string): TransitionMatcherFn {\n  const LHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(lhs) || FALSE_BOOLEAN_VALUES.has(lhs);\n  const RHS_MATCH_BOOLEAN = TRUE_BOOLEAN_VALUES.has(rhs) || FALSE_BOOLEAN_VALUES.has(rhs);\n\n  return (fromState: any, toState: any): boolean => {\n    let lhsMatch = lhs == ANY_STATE || lhs == fromState;\n    let rhsMatch = rhs == ANY_STATE || rhs == toState;\n\n    if (!lhsMatch && LHS_MATCH_BOOLEAN && typeof fromState === 'boolean') {\n      lhsMatch = fromState ? TRUE_BOOLEAN_VALUES.has(lhs) : FALSE_BOOLEAN_VALUES.has(lhs);\n    }\n    if (!rhsMatch && RHS_MATCH_BOOLEAN && typeof toState === 'boolean') {\n      rhsMatch = toState ? TRUE_BOOLEAN_VALUES.has(rhs) : FALSE_BOOLEAN_VALUES.has(rhs);\n    }\n\n    return lhsMatch && rhsMatch;\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateTimings, AnimationAnimateChildMetadata, AnimationAnimateMetadata, AnimationAnimateRefMetadata, AnimationGroupMetadata, AnimationKeyframesSequenceMetadata, AnimationMetadata, AnimationMetadataType, AnimationOptions, AnimationQueryMetadata, AnimationQueryOptions, AnimationReferenceMetadata, AnimationSequenceMetadata, AnimationStaggerMetadata, AnimationStateMetadata, AnimationStyleMetadata, AnimationTransitionMetadata, AnimationTriggerMetadata, AUTO_STYLE, style, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {getOrSetAsInMap} from '../render/shared';\nimport {copyObj, ENTER_SELECTOR, extractStyleParams, iteratorToArray, LEAVE_SELECTOR, NG_ANIMATING_SELECTOR, NG_TRIGGER_SELECTOR, normalizeAnimationEntry, resolveTiming, SUBSTITUTION_EXPR_START, validateStyleParams, visitDslNode} from '../util';\n\nimport {AnimateAst, AnimateChildAst, AnimateRefAst, Ast, DynamicTimingAst, GroupAst, KeyframesAst, QueryAst, ReferenceAst, SequenceAst, StaggerAst, StateAst, StyleAst, TimingAst, TransitionAst, TriggerAst} from './animation_ast';\nimport {AnimationDslVisitor} from './animation_dsl_visitor';\nimport {parseTransitionExpr} from './animation_transition_expr';\n\nconst SELF_TOKEN = ':self';\nconst SELF_TOKEN_REGEX = new RegExp(`\\s*${SELF_TOKEN}\\s*,?`, 'g');\n\n/*\n * [Validation]\n * The visitor code below will traverse the animation AST generated by the animation verb functions\n * (the output is a tree of objects) and attempt to perform a series of validations on the data. The\n * following corner-cases will be validated:\n *\n * 1. Overlap of animations\n * Given that a CSS property cannot be animated in more than one place at the same time, it's\n * important that this behavior is detected and validated. The way in which this occurs is that\n * each time a style property is examined, a string-map containing the property will be updated with\n * the start and end times for when the property is used within an animation step.\n *\n * If there are two or more parallel animations that are currently running (these are invoked by the\n * group()) on the same element then the validator will throw an error. Since the start/end timing\n * values are collected for each property then if the current animation step is animating the same\n * property and its timing values fall anywhere into the window of time that the property is\n * currently being animated within then this is what causes an error.\n *\n * 2. Timing values\n * The validator will validate to see if a timing value of `duration delay easing` or\n * `durationNumber` is valid or not.\n *\n * (note that upon validation the code below will replace the timing data with an object containing\n * {duration,delay,easing}.\n *\n * 3. Offset Validation\n * Each of the style() calls are allowed to have an offset value when placed inside of keyframes().\n * Offsets within keyframes() are considered valid when:\n *\n *   - No offsets are used at all\n *   - Each style() entry contains an offset value\n *   - Each offset is between 0 and 1\n *   - Each offset is greater to or equal than the previous one\n *\n * Otherwise an error will be thrown.\n */\nexport function buildAnimationAst(\n    driver: AnimationDriver, metadata: AnimationMetadata|AnimationMetadata[],\n    errors: any[]): Ast<AnimationMetadataType> {\n  return new AnimationAstBuilderVisitor(driver).build(metadata, errors);\n}\n\nconst ROOT_SELECTOR = '';\n\nexport class AnimationAstBuilderVisitor implements AnimationDslVisitor {\n  constructor(private _driver: AnimationDriver) {}\n\n  build(metadata: AnimationMetadata|AnimationMetadata[], errors: any[]):\n      Ast<AnimationMetadataType> {\n    const context = new AnimationAstBuilderContext(errors);\n    this._resetContextStyleTimingState(context);\n    return <Ast<AnimationMetadataType>>visitDslNode(\n        this, normalizeAnimationEntry(metadata), context);\n  }\n\n  private _resetContextStyleTimingState(context: AnimationAstBuilderContext) {\n    context.currentQuerySelector = ROOT_SELECTOR;\n    context.collectedStyles = {};\n    context.collectedStyles[ROOT_SELECTOR] = {};\n    context.currentTime = 0;\n  }\n\n  visitTrigger(metadata: AnimationTriggerMetadata, context: AnimationAstBuilderContext):\n      TriggerAst {\n    let queryCount = context.queryCount = 0;\n    let depCount = context.depCount = 0;\n    const states: StateAst[] = [];\n    const transitions: TransitionAst[] = [];\n    if (metadata.name.charAt(0) == '@') {\n      context.errors.push(\n          'animation triggers cannot be prefixed with an `@` sign (e.g. trigger(\\'@foo\\', [...]))');\n    }\n\n    metadata.definitions.forEach(def => {\n      this._resetContextStyleTimingState(context);\n      if (def.type == AnimationMetadataType.State) {\n        const stateDef = def as AnimationStateMetadata;\n        const name = stateDef.name;\n        name.toString().split(/\\s*,\\s*/).forEach(n => {\n          stateDef.name = n;\n          states.push(this.visitState(stateDef, context));\n        });\n        stateDef.name = name;\n      } else if (def.type == AnimationMetadataType.Transition) {\n        const transition = this.visitTransition(def as AnimationTransitionMetadata, context);\n        queryCount += transition.queryCount;\n        depCount += transition.depCount;\n        transitions.push(transition);\n      } else {\n        context.errors.push(\n            'only state() and transition() definitions can sit inside of a trigger()');\n      }\n    });\n\n    return {\n      type: AnimationMetadataType.Trigger,\n      name: metadata.name,\n      states,\n      transitions,\n      queryCount,\n      depCount,\n      options: null\n    };\n  }\n\n  visitState(metadata: AnimationStateMetadata, context: AnimationAstBuilderContext): StateAst {\n    const styleAst = this.visitStyle(metadata.styles, context);\n    const astParams = (metadata.options && metadata.options.params) || null;\n    if (styleAst.containsDynamicStyles) {\n      const missingSubs = new Set<string>();\n      const params = astParams || {};\n      styleAst.styles.forEach(value => {\n        if (isObject(value)) {\n          const stylesObj = value as any;\n          Object.keys(stylesObj).forEach(prop => {\n            extractStyleParams(stylesObj[prop]).forEach(sub => {\n              if (!params.hasOwnProperty(sub)) {\n                missingSubs.add(sub);\n              }\n            });\n          });\n        }\n      });\n      if (missingSubs.size) {\n        const missingSubsArr = iteratorToArray(missingSubs.values());\n        context.errors.push(`state(\"${\n            metadata\n                .name}\", ...) must define default values for all the following style substitutions: ${\n            missingSubsArr.join(', ')}`);\n      }\n    }\n\n    return {\n      type: AnimationMetadataType.State,\n      name: metadata.name,\n      style: styleAst,\n      options: astParams ? {params: astParams} : null\n    };\n  }\n\n  visitTransition(metadata: AnimationTransitionMetadata, context: AnimationAstBuilderContext):\n      TransitionAst {\n    context.queryCount = 0;\n    context.depCount = 0;\n    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n    const matchers = parseTransitionExpr(metadata.expr, context.errors);\n\n    return {\n      type: AnimationMetadataType.Transition,\n      matchers,\n      animation,\n      queryCount: context.queryCount,\n      depCount: context.depCount,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitSequence(metadata: AnimationSequenceMetadata, context: AnimationAstBuilderContext):\n      SequenceAst {\n    return {\n      type: AnimationMetadataType.Sequence,\n      steps: metadata.steps.map(s => visitDslNode(this, s, context)),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitGroup(metadata: AnimationGroupMetadata, context: AnimationAstBuilderContext): GroupAst {\n    const currentTime = context.currentTime;\n    let furthestTime = 0;\n    const steps = metadata.steps.map(step => {\n      context.currentTime = currentTime;\n      const innerAst = visitDslNode(this, step, context);\n      furthestTime = Math.max(furthestTime, context.currentTime);\n      return innerAst;\n    });\n\n    context.currentTime = furthestTime;\n    return {\n      type: AnimationMetadataType.Group,\n      steps,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitAnimate(metadata: AnimationAnimateMetadata, context: AnimationAstBuilderContext):\n      AnimateAst {\n    const timingAst = constructTimingAst(metadata.timings, context.errors);\n    context.currentAnimateTimings = timingAst;\n\n    let styleAst: StyleAst|KeyframesAst;\n    let styleMetadata: AnimationMetadata = metadata.styles ? metadata.styles : style({});\n    if (styleMetadata.type == AnimationMetadataType.Keyframes) {\n      styleAst = this.visitKeyframes(styleMetadata as AnimationKeyframesSequenceMetadata, context);\n    } else {\n      let styleMetadata = metadata.styles as AnimationStyleMetadata;\n      let isEmpty = false;\n      if (!styleMetadata) {\n        isEmpty = true;\n        const newStyleData: {[prop: string]: string|number} = {};\n        if (timingAst.easing) {\n          newStyleData['easing'] = timingAst.easing;\n        }\n        styleMetadata = style(newStyleData);\n      }\n      context.currentTime += timingAst.duration + timingAst.delay;\n      const _styleAst = this.visitStyle(styleMetadata, context);\n      _styleAst.isEmptyStep = isEmpty;\n      styleAst = _styleAst;\n    }\n\n    context.currentAnimateTimings = null;\n    return {\n      type: AnimationMetadataType.Animate,\n      timings: timingAst,\n      style: styleAst,\n      options: null\n    };\n  }\n\n  visitStyle(metadata: AnimationStyleMetadata, context: AnimationAstBuilderContext): StyleAst {\n    const ast = this._makeStyleAst(metadata, context);\n    this._validateStyleAst(ast, context);\n    return ast;\n  }\n\n  private _makeStyleAst(metadata: AnimationStyleMetadata, context: AnimationAstBuilderContext):\n      StyleAst {\n    const styles: (ɵStyleData|string)[] = [];\n    if (Array.isArray(metadata.styles)) {\n      (metadata.styles as (ɵStyleData | string)[]).forEach(styleTuple => {\n        if (typeof styleTuple == 'string') {\n          if (styleTuple == AUTO_STYLE) {\n            styles.push(styleTuple);\n          } else {\n            context.errors.push(`The provided style string value ${styleTuple} is not allowed.`);\n          }\n        } else {\n          styles.push(styleTuple);\n        }\n      });\n    } else {\n      styles.push(metadata.styles);\n    }\n\n    let containsDynamicStyles = false;\n    let collectedEasing: string|null = null;\n    styles.forEach(styleData => {\n      if (isObject(styleData)) {\n        const styleMap = styleData as ɵStyleData;\n        const easing = styleMap['easing'];\n        if (easing) {\n          collectedEasing = easing as string;\n          delete styleMap['easing'];\n        }\n        if (!containsDynamicStyles) {\n          for (let prop in styleMap) {\n            const value = styleMap[prop];\n            if (value.toString().indexOf(SUBSTITUTION_EXPR_START) >= 0) {\n              containsDynamicStyles = true;\n              break;\n            }\n          }\n        }\n      }\n    });\n\n    return {\n      type: AnimationMetadataType.Style,\n      styles,\n      easing: collectedEasing,\n      offset: metadata.offset,\n      containsDynamicStyles,\n      options: null\n    };\n  }\n\n  private _validateStyleAst(ast: StyleAst, context: AnimationAstBuilderContext): void {\n    const timings = context.currentAnimateTimings;\n    let endTime = context.currentTime;\n    let startTime = context.currentTime;\n    if (timings && startTime > 0) {\n      startTime -= timings.duration + timings.delay;\n    }\n\n    ast.styles.forEach(tuple => {\n      if (typeof tuple == 'string') return;\n\n      Object.keys(tuple).forEach(prop => {\n        if (!this._driver.validateStyleProperty(prop)) {\n          context.errors.push(`The provided animation property \"${\n              prop}\" is not a supported CSS property for animations`);\n          return;\n        }\n\n        const collectedStyles = context.collectedStyles[context.currentQuerySelector!];\n        const collectedEntry = collectedStyles[prop];\n        let updateCollectedStyle = true;\n        if (collectedEntry) {\n          if (startTime != endTime && startTime >= collectedEntry.startTime &&\n              endTime <= collectedEntry.endTime) {\n            context.errors.push(`The CSS property \"${prop}\" that exists between the times of \"${\n                collectedEntry.startTime}ms\" and \"${\n                collectedEntry\n                    .endTime}ms\" is also being animated in a parallel animation between the times of \"${\n                startTime}ms\" and \"${endTime}ms\"`);\n            updateCollectedStyle = false;\n          }\n\n          // we always choose the smaller start time value since we\n          // want to have a record of the entire animation window where\n          // the style property is being animated in between\n          startTime = collectedEntry.startTime;\n        }\n\n        if (updateCollectedStyle) {\n          collectedStyles[prop] = {startTime, endTime};\n        }\n\n        if (context.options) {\n          validateStyleParams(tuple[prop], context.options, context.errors);\n        }\n      });\n    });\n  }\n\n  visitKeyframes(metadata: AnimationKeyframesSequenceMetadata, context: AnimationAstBuilderContext):\n      KeyframesAst {\n    const ast: KeyframesAst = {type: AnimationMetadataType.Keyframes, styles: [], options: null};\n    if (!context.currentAnimateTimings) {\n      context.errors.push(`keyframes() must be placed inside of a call to animate()`);\n      return ast;\n    }\n\n    const MAX_KEYFRAME_OFFSET = 1;\n\n    let totalKeyframesWithOffsets = 0;\n    const offsets: number[] = [];\n    let offsetsOutOfOrder = false;\n    let keyframesOutOfRange = false;\n    let previousOffset: number = 0;\n\n    const keyframes: StyleAst[] = metadata.steps.map(styles => {\n      const style = this._makeStyleAst(styles, context);\n      let offsetVal: number|null =\n          style.offset != null ? style.offset : consumeOffset(style.styles);\n      let offset: number = 0;\n      if (offsetVal != null) {\n        totalKeyframesWithOffsets++;\n        offset = style.offset = offsetVal;\n      }\n      keyframesOutOfRange = keyframesOutOfRange || offset < 0 || offset > 1;\n      offsetsOutOfOrder = offsetsOutOfOrder || offset < previousOffset;\n      previousOffset = offset;\n      offsets.push(offset);\n      return style;\n    });\n\n    if (keyframesOutOfRange) {\n      context.errors.push(`Please ensure that all keyframe offsets are between 0 and 1`);\n    }\n\n    if (offsetsOutOfOrder) {\n      context.errors.push(`Please ensure that all keyframe offsets are in order`);\n    }\n\n    const length = metadata.steps.length;\n    let generatedOffset = 0;\n    if (totalKeyframesWithOffsets > 0 && totalKeyframesWithOffsets < length) {\n      context.errors.push(`Not all style() steps within the declared keyframes() contain offsets`);\n    } else if (totalKeyframesWithOffsets == 0) {\n      generatedOffset = MAX_KEYFRAME_OFFSET / (length - 1);\n    }\n\n    const limit = length - 1;\n    const currentTime = context.currentTime;\n    const currentAnimateTimings = context.currentAnimateTimings!;\n    const animateDuration = currentAnimateTimings.duration;\n    keyframes.forEach((kf, i) => {\n      const offset = generatedOffset > 0 ? (i == limit ? 1 : (generatedOffset * i)) : offsets[i];\n      const durationUpToThisFrame = offset * animateDuration;\n      context.currentTime = currentTime + currentAnimateTimings.delay + durationUpToThisFrame;\n      currentAnimateTimings.duration = durationUpToThisFrame;\n      this._validateStyleAst(kf, context);\n      kf.offset = offset;\n\n      ast.styles.push(kf);\n    });\n\n    return ast;\n  }\n\n  visitReference(metadata: AnimationReferenceMetadata, context: AnimationAstBuilderContext):\n      ReferenceAst {\n    return {\n      type: AnimationMetadataType.Reference,\n      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitAnimateChild(metadata: AnimationAnimateChildMetadata, context: AnimationAstBuilderContext):\n      AnimateChildAst {\n    context.depCount++;\n    return {\n      type: AnimationMetadataType.AnimateChild,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitAnimateRef(metadata: AnimationAnimateRefMetadata, context: AnimationAstBuilderContext):\n      AnimateRefAst {\n    return {\n      type: AnimationMetadataType.AnimateRef,\n      animation: this.visitReference(metadata.animation, context),\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitQuery(metadata: AnimationQueryMetadata, context: AnimationAstBuilderContext): QueryAst {\n    const parentSelector = context.currentQuerySelector!;\n    const options = (metadata.options || {}) as AnimationQueryOptions;\n\n    context.queryCount++;\n    context.currentQuery = metadata;\n    const [selector, includeSelf] = normalizeSelector(metadata.selector);\n    context.currentQuerySelector =\n        parentSelector.length ? (parentSelector + ' ' + selector) : selector;\n    getOrSetAsInMap(context.collectedStyles, context.currentQuerySelector, {});\n\n    const animation = visitDslNode(this, normalizeAnimationEntry(metadata.animation), context);\n    context.currentQuery = null;\n    context.currentQuerySelector = parentSelector;\n\n    return {\n      type: AnimationMetadataType.Query,\n      selector,\n      limit: options.limit || 0,\n      optional: !!options.optional,\n      includeSelf,\n      animation,\n      originalSelector: metadata.selector,\n      options: normalizeAnimationOptions(metadata.options)\n    };\n  }\n\n  visitStagger(metadata: AnimationStaggerMetadata, context: AnimationAstBuilderContext):\n      StaggerAst {\n    if (!context.currentQuery) {\n      context.errors.push(`stagger() can only be used inside of query()`);\n    }\n    const timings = metadata.timings === 'full' ?\n        {duration: 0, delay: 0, easing: 'full'} :\n        resolveTiming(metadata.timings, context.errors, true);\n\n    return {\n      type: AnimationMetadataType.Stagger,\n      animation: visitDslNode(this, normalizeAnimationEntry(metadata.animation), context),\n      timings,\n      options: null\n    };\n  }\n}\n\nfunction normalizeSelector(selector: string): [string, boolean] {\n  const hasAmpersand = selector.split(/\\s*,\\s*/).find(token => token == SELF_TOKEN) ? true : false;\n  if (hasAmpersand) {\n    selector = selector.replace(SELF_TOKEN_REGEX, '');\n  }\n\n  // the :enter and :leave selectors are filled in at runtime during timeline building\n  selector = selector.replace(/@\\*/g, NG_TRIGGER_SELECTOR)\n                 .replace(/@\\w+/g, match => NG_TRIGGER_SELECTOR + '-' + match.substr(1))\n                 .replace(/:animating/g, NG_ANIMATING_SELECTOR);\n\n  return [selector, hasAmpersand];\n}\n\n\nfunction normalizeParams(obj: {[key: string]: any}|any): {[key: string]: any}|null {\n  return obj ? copyObj(obj) : null;\n}\n\nexport type StyleTimeTuple = {\n  startTime: number; endTime: number;\n};\n\nexport class AnimationAstBuilderContext {\n  public queryCount: number = 0;\n  public depCount: number = 0;\n  public currentTransition: AnimationTransitionMetadata|null = null;\n  public currentQuery: AnimationQueryMetadata|null = null;\n  public currentQuerySelector: string|null = null;\n  public currentAnimateTimings: TimingAst|null = null;\n  public currentTime: number = 0;\n  public collectedStyles: {[selectorName: string]: {[propName: string]: StyleTimeTuple}} = {};\n  public options: AnimationOptions|null = null;\n  constructor(public errors: any[]) {}\n}\n\nfunction consumeOffset(styles: ɵStyleData|string|(ɵStyleData | string)[]): number|null {\n  if (typeof styles == 'string') return null;\n\n  let offset: number|null = null;\n\n  if (Array.isArray(styles)) {\n    styles.forEach(styleTuple => {\n      if (isObject(styleTuple) && styleTuple.hasOwnProperty('offset')) {\n        const obj = styleTuple as ɵStyleData;\n        offset = parseFloat(obj['offset'] as string);\n        delete obj['offset'];\n      }\n    });\n  } else if (isObject(styles) && styles.hasOwnProperty('offset')) {\n    const obj = styles;\n    offset = parseFloat(obj['offset'] as string);\n    delete obj['offset'];\n  }\n  return offset;\n}\n\nfunction isObject(value: any): boolean {\n  return !Array.isArray(value) && typeof value == 'object';\n}\n\nfunction constructTimingAst(value: string|number|AnimateTimings, errors: any[]) {\n  let timings: AnimateTimings|null = null;\n  if (value.hasOwnProperty('duration')) {\n    timings = value as AnimateTimings;\n  } else if (typeof value == 'number') {\n    const duration = resolveTiming(value, errors).duration;\n    return makeTimingAst(duration, 0, '');\n  }\n\n  const strValue = value as string;\n  const isDynamic = strValue.split(/\\s+/).some(v => v.charAt(0) == '{' && v.charAt(1) == '{');\n  if (isDynamic) {\n    const ast = makeTimingAst(0, 0, '') as any;\n    ast.dynamic = true;\n    ast.strValue = strValue;\n    return ast as DynamicTimingAst;\n  }\n\n  timings = timings || resolveTiming(strValue, errors);\n  return makeTimingAst(timings.duration, timings.delay, timings.easing);\n}\n\nfunction normalizeAnimationOptions(options: AnimationOptions|null): AnimationOptions {\n  if (options) {\n    options = copyObj(options);\n    if (options['params']) {\n      options['params'] = normalizeParams(options['params'])!;\n    }\n  } else {\n    options = {};\n  }\n  return options;\n}\n\nfunction makeTimingAst(duration: number, delay: number, easing: string|null): TimingAst {\n  return {duration, delay, easing};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ɵStyleData} from '@angular/animations';\nimport {AnimationEngineInstruction, AnimationTransitionInstructionType} from '../render/animation_engine_instruction';\n\nexport interface AnimationTimelineInstruction extends AnimationEngineInstruction {\n  element: any;\n  keyframes: ɵStyleData[];\n  preStyleProps: string[];\n  postStyleProps: string[];\n  duration: number;\n  delay: number;\n  totalTime: number;\n  easing: string|null;\n  stretchStartingKeyframe?: boolean;\n  subTimeline: boolean;\n}\n\nexport function createTimelineInstruction(\n    element: any, keyframes: ɵStyleData[], preStyleProps: string[], postStyleProps: string[],\n    duration: number, delay: number, easing: string|null = null,\n    subTimeline: boolean = false): AnimationTimelineInstruction {\n  return {\n    type: AnimationTransitionInstructionType.TimelineAnimation,\n    element,\n    keyframes,\n    preStyleProps,\n    postStyleProps,\n    duration,\n    delay,\n    totalTime: duration + delay,\n    easing,\n    subTimeline\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\n\nexport class ElementInstructionMap {\n  private _map = new Map<any, AnimationTimelineInstruction[]>();\n\n  consume(element: any): AnimationTimelineInstruction[] {\n    let instructions = this._map.get(element);\n    if (instructions) {\n      this._map.delete(element);\n    } else {\n      instructions = [];\n    }\n    return instructions;\n  }\n\n  append(element: any, instructions: AnimationTimelineInstruction[]) {\n    let existingInstructions = this._map.get(element);\n    if (!existingInstructions) {\n      this._map.set(element, existingInstructions = []);\n    }\n    existingInstructions.push(...instructions);\n  }\n\n  has(element: any): boolean {\n    return this._map.has(element);\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimateChildOptions, AnimateTimings, AnimationMetadataType, AnimationOptions, AnimationQueryOptions, AUTO_STYLE, ɵPRE_STYLE as PRE_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {copyObj, copyStyles, interpolateParams, iteratorToArray, resolveTiming, resolveTimingValue, visitDslNode} from '../util';\n\nimport {AnimateAst, AnimateChildAst, AnimateRefAst, Ast, AstVisitor, DynamicTimingAst, GroupAst, KeyframesAst, QueryAst, ReferenceAst, SequenceAst, StaggerAst, StateAst, StyleAst, TimingAst, TransitionAst, TriggerAst} from './animation_ast';\nimport {AnimationTimelineInstruction, createTimelineInstruction} from './animation_timeline_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n\nconst ONE_FRAME_IN_MILLISECONDS = 1;\nconst ENTER_TOKEN = ':enter';\nconst ENTER_TOKEN_REGEX = new RegExp(ENTER_TOKEN, 'g');\nconst LEAVE_TOKEN = ':leave';\nconst LEAVE_TOKEN_REGEX = new RegExp(LEAVE_TOKEN, 'g');\n\n/*\n * The code within this file aims to generate web-animations-compatible keyframes from Angular's\n * animation DSL code.\n *\n * The code below will be converted from:\n *\n * ```\n * sequence([\n *   style({ opacity: 0 }),\n *   animate(1000, style({ opacity: 0 }))\n * ])\n * ```\n *\n * To:\n * ```\n * keyframes = [{ opacity: 0, offset: 0 }, { opacity: 1, offset: 1 }]\n * duration = 1000\n * delay = 0\n * easing = ''\n * ```\n *\n * For this operation to cover the combination of animation verbs (style, animate, group, etc...) a\n * combination of prototypical inheritance, AST traversal and merge-sort-like algorithms are used.\n *\n * [AST Traversal]\n * Each of the animation verbs, when executed, will return an string-map object representing what\n * type of action it is (style, animate, group, etc...) and the data associated with it. This means\n * that when functional composition mix of these functions is evaluated (like in the example above)\n * then it will end up producing a tree of objects representing the animation itself.\n *\n * When this animation object tree is processed by the visitor code below it will visit each of the\n * verb statements within the visitor. And during each visit it will build the context of the\n * animation keyframes by interacting with the `TimelineBuilder`.\n *\n * [TimelineBuilder]\n * This class is responsible for tracking the styles and building a series of keyframe objects for a\n * timeline between a start and end time. The builder starts off with an initial timeline and each\n * time the AST comes across a `group()`, `keyframes()` or a combination of the two wihtin a\n * `sequence()` then it will generate a sub timeline for each step as well as a new one after\n * they are complete.\n *\n * As the AST is traversed, the timing state on each of the timelines will be incremented. If a sub\n * timeline was created (based on one of the cases above) then the parent timeline will attempt to\n * merge the styles used within the sub timelines into itself (only with group() this will happen).\n * This happens with a merge operation (much like how the merge works in mergesort) and it will only\n * copy the most recently used styles from the sub timelines into the parent timeline. This ensures\n * that if the styles are used later on in another phase of the animation then they will be the most\n * up-to-date values.\n *\n * [How Missing Styles Are Updated]\n * Each timeline has a `backFill` property which is responsible for filling in new styles into\n * already processed keyframes if a new style shows up later within the animation sequence.\n *\n * ```\n * sequence([\n *   style({ width: 0 }),\n *   animate(1000, style({ width: 100 })),\n *   animate(1000, style({ width: 200 })),\n *   animate(1000, style({ width: 300 }))\n *   animate(1000, style({ width: 400, height: 400 })) // notice how `height` doesn't exist anywhere\n * else\n * ])\n * ```\n *\n * What is happening here is that the `height` value is added later in the sequence, but is missing\n * from all previous animation steps. Therefore when a keyframe is created it would also be missing\n * from all previous keyframes up until where it is first used. For the timeline keyframe generation\n * to properly fill in the style it will place the previous value (the value from the parent\n * timeline) or a default value of `*` into the backFill object. Given that each of the keyframe\n * styles are objects that prototypically inhert from the backFill object, this means that if a\n * value is added into the backFill then it will automatically propagate any missing values to all\n * keyframes. Therefore the missing `height` value will be properly filled into the already\n * processed keyframes.\n *\n * When a sub-timeline is created it will have its own backFill property. This is done so that\n * styles present within the sub-timeline do not accidentally seep into the previous/future timeline\n * keyframes\n *\n * (For prototypically-inherited contents to be detected a `for(i in obj)` loop must be used.)\n *\n * [Validation]\n * The code in this file is not responsible for validation. That functionality happens with within\n * the `AnimationValidatorVisitor` code.\n */\nexport function buildAnimationTimelines(\n    driver: AnimationDriver, rootElement: any, ast: Ast<AnimationMetadataType>,\n    enterClassName: string, leaveClassName: string, startingStyles: ɵStyleData = {},\n    finalStyles: ɵStyleData = {}, options: AnimationOptions,\n    subInstructions?: ElementInstructionMap, errors: any[] = []): AnimationTimelineInstruction[] {\n  return new AnimationTimelineBuilderVisitor().buildKeyframes(\n      driver, rootElement, ast, enterClassName, leaveClassName, startingStyles, finalStyles,\n      options, subInstructions, errors);\n}\n\nexport class AnimationTimelineBuilderVisitor implements AstVisitor {\n  buildKeyframes(\n      driver: AnimationDriver, rootElement: any, ast: Ast<AnimationMetadataType>,\n      enterClassName: string, leaveClassName: string, startingStyles: ɵStyleData,\n      finalStyles: ɵStyleData, options: AnimationOptions, subInstructions?: ElementInstructionMap,\n      errors: any[] = []): AnimationTimelineInstruction[] {\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const context = new AnimationTimelineContext(\n        driver, rootElement, subInstructions, enterClassName, leaveClassName, errors, []);\n    context.options = options;\n    context.currentTimeline.setStyles([startingStyles], null, context.errors, options);\n\n    visitDslNode(this, ast, context);\n\n    // this checks to see if an actual animation happened\n    const timelines = context.timelines.filter(timeline => timeline.containsAnimation());\n    if (timelines.length && Object.keys(finalStyles).length) {\n      const tl = timelines[timelines.length - 1];\n      if (!tl.allowOnlyTimelineStyles()) {\n        tl.setStyles([finalStyles], null, context.errors, options);\n      }\n    }\n\n    return timelines.length ? timelines.map(timeline => timeline.buildKeyframes()) :\n                              [createTimelineInstruction(rootElement, [], [], [], 0, 0, '', false)];\n  }\n\n  visitTrigger(ast: TriggerAst, context: AnimationTimelineContext): any {\n    // these values are not visited in this AST\n  }\n\n  visitState(ast: StateAst, context: AnimationTimelineContext): any {\n    // these values are not visited in this AST\n  }\n\n  visitTransition(ast: TransitionAst, context: AnimationTimelineContext): any {\n    // these values are not visited in this AST\n  }\n\n  visitAnimateChild(ast: AnimateChildAst, context: AnimationTimelineContext): any {\n    const elementInstructions = context.subInstructions.consume(context.element);\n    if (elementInstructions) {\n      const innerContext = context.createSubContext(ast.options);\n      const startTime = context.currentTimeline.currentTime;\n      const endTime = this._visitSubInstructions(\n          elementInstructions, innerContext, innerContext.options as AnimateChildOptions);\n      if (startTime != endTime) {\n        // we do this on the upper context because we created a sub context for\n        // the sub child animations\n        context.transformIntoNewTimeline(endTime);\n      }\n    }\n    context.previousNode = ast;\n  }\n\n  visitAnimateRef(ast: AnimateRefAst, context: AnimationTimelineContext): any {\n    const innerContext = context.createSubContext(ast.options);\n    innerContext.transformIntoNewTimeline();\n    this.visitReference(ast.animation, innerContext);\n    context.transformIntoNewTimeline(innerContext.currentTimeline.currentTime);\n    context.previousNode = ast;\n  }\n\n  private _visitSubInstructions(\n      instructions: AnimationTimelineInstruction[], context: AnimationTimelineContext,\n      options: AnimateChildOptions): number {\n    const startTime = context.currentTimeline.currentTime;\n    let furthestTime = startTime;\n\n    // this is a special-case for when a user wants to skip a sub\n    // animation from being fired entirely.\n    const duration = options.duration != null ? resolveTimingValue(options.duration) : null;\n    const delay = options.delay != null ? resolveTimingValue(options.delay) : null;\n    if (duration !== 0) {\n      instructions.forEach(instruction => {\n        const instructionTimings =\n            context.appendInstructionToTimeline(instruction, duration, delay);\n        furthestTime =\n            Math.max(furthestTime, instructionTimings.duration + instructionTimings.delay);\n      });\n    }\n\n    return furthestTime;\n  }\n\n  visitReference(ast: ReferenceAst, context: AnimationTimelineContext) {\n    context.updateOptions(ast.options, true);\n    visitDslNode(this, ast.animation, context);\n    context.previousNode = ast;\n  }\n\n  visitSequence(ast: SequenceAst, context: AnimationTimelineContext) {\n    const subContextCount = context.subContextCount;\n    let ctx = context;\n    const options = ast.options;\n\n    if (options && (options.params || options.delay)) {\n      ctx = context.createSubContext(options);\n      ctx.transformIntoNewTimeline();\n\n      if (options.delay != null) {\n        if (ctx.previousNode.type == AnimationMetadataType.Style) {\n          ctx.currentTimeline.snapshotCurrentStyles();\n          ctx.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n        }\n\n        const delay = resolveTimingValue(options.delay);\n        ctx.delayNextStep(delay);\n      }\n    }\n\n    if (ast.steps.length) {\n      ast.steps.forEach(s => visitDslNode(this, s, ctx));\n\n      // this is here just incase the inner steps only contain or end with a style() call\n      ctx.currentTimeline.applyStylesToKeyframe();\n\n      // this means that some animation function within the sequence\n      // ended up creating a sub timeline (which means the current\n      // timeline cannot overlap with the contents of the sequence)\n      if (ctx.subContextCount > subContextCount) {\n        ctx.transformIntoNewTimeline();\n      }\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitGroup(ast: GroupAst, context: AnimationTimelineContext) {\n    const innerTimelines: TimelineBuilder[] = [];\n    let furthestTime = context.currentTimeline.currentTime;\n    const delay = ast.options && ast.options.delay ? resolveTimingValue(ast.options.delay) : 0;\n\n    ast.steps.forEach(s => {\n      const innerContext = context.createSubContext(ast.options);\n      if (delay) {\n        innerContext.delayNextStep(delay);\n      }\n\n      visitDslNode(this, s, innerContext);\n      furthestTime = Math.max(furthestTime, innerContext.currentTimeline.currentTime);\n      innerTimelines.push(innerContext.currentTimeline);\n    });\n\n    // this operation is run after the AST loop because otherwise\n    // if the parent timeline's collected styles were updated then\n    // it would pass in invalid data into the new-to-be forked items\n    innerTimelines.forEach(\n        timeline => context.currentTimeline.mergeTimelineCollectedStyles(timeline));\n    context.transformIntoNewTimeline(furthestTime);\n    context.previousNode = ast;\n  }\n\n  private _visitTiming(ast: TimingAst, context: AnimationTimelineContext): AnimateTimings {\n    if ((ast as DynamicTimingAst).dynamic) {\n      const strValue = (ast as DynamicTimingAst).strValue;\n      const timingValue =\n          context.params ? interpolateParams(strValue, context.params, context.errors) : strValue;\n      return resolveTiming(timingValue, context.errors);\n    } else {\n      return {duration: ast.duration, delay: ast.delay, easing: ast.easing};\n    }\n  }\n\n  visitAnimate(ast: AnimateAst, context: AnimationTimelineContext) {\n    const timings = context.currentAnimateTimings = this._visitTiming(ast.timings, context);\n    const timeline = context.currentTimeline;\n    if (timings.delay) {\n      context.incrementTime(timings.delay);\n      timeline.snapshotCurrentStyles();\n    }\n\n    const style = ast.style;\n    if (style.type == AnimationMetadataType.Keyframes) {\n      this.visitKeyframes(style, context);\n    } else {\n      context.incrementTime(timings.duration);\n      this.visitStyle(style as StyleAst, context);\n      timeline.applyStylesToKeyframe();\n    }\n\n    context.currentAnimateTimings = null;\n    context.previousNode = ast;\n  }\n\n  visitStyle(ast: StyleAst, context: AnimationTimelineContext) {\n    const timeline = context.currentTimeline;\n    const timings = context.currentAnimateTimings!;\n\n    // this is a special case for when a style() call\n    // directly follows  an animate() call (but not inside of an animate() call)\n    if (!timings && timeline.getCurrentStyleProperties().length) {\n      timeline.forwardFrame();\n    }\n\n    const easing = (timings && timings.easing) || ast.easing;\n    if (ast.isEmptyStep) {\n      timeline.applyEmptyStep(easing);\n    } else {\n      timeline.setStyles(ast.styles, easing, context.errors, context.options);\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitKeyframes(ast: KeyframesAst, context: AnimationTimelineContext) {\n    const currentAnimateTimings = context.currentAnimateTimings!;\n    const startTime = (context.currentTimeline!).duration;\n    const duration = currentAnimateTimings.duration;\n    const innerContext = context.createSubContext();\n    const innerTimeline = innerContext.currentTimeline;\n    innerTimeline.easing = currentAnimateTimings.easing;\n\n    ast.styles.forEach(step => {\n      const offset: number = step.offset || 0;\n      innerTimeline.forwardTime(offset * duration);\n      innerTimeline.setStyles(step.styles, step.easing, context.errors, context.options);\n      innerTimeline.applyStylesToKeyframe();\n    });\n\n    // this will ensure that the parent timeline gets all the styles from\n    // the child even if the new timeline below is not used\n    context.currentTimeline.mergeTimelineCollectedStyles(innerTimeline);\n\n    // we do this because the window between this timeline and the sub timeline\n    // should ensure that the styles within are exactly the same as they were before\n    context.transformIntoNewTimeline(startTime + duration);\n    context.previousNode = ast;\n  }\n\n  visitQuery(ast: QueryAst, context: AnimationTimelineContext) {\n    // in the event that the first step before this is a style step we need\n    // to ensure the styles are applied before the children are animated\n    const startTime = context.currentTimeline.currentTime;\n    const options = (ast.options || {}) as AnimationQueryOptions;\n    const delay = options.delay ? resolveTimingValue(options.delay) : 0;\n\n    if (delay &&\n        (context.previousNode.type === AnimationMetadataType.Style ||\n         (startTime == 0 && context.currentTimeline.getCurrentStyleProperties().length))) {\n      context.currentTimeline.snapshotCurrentStyles();\n      context.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    }\n\n    let furthestTime = startTime;\n    const elms = context.invokeQuery(\n        ast.selector, ast.originalSelector, ast.limit, ast.includeSelf,\n        options.optional ? true : false, context.errors);\n\n    context.currentQueryTotal = elms.length;\n    let sameElementTimeline: TimelineBuilder|null = null;\n    elms.forEach((element, i) => {\n      context.currentQueryIndex = i;\n      const innerContext = context.createSubContext(ast.options, element);\n      if (delay) {\n        innerContext.delayNextStep(delay);\n      }\n\n      if (element === context.element) {\n        sameElementTimeline = innerContext.currentTimeline;\n      }\n\n      visitDslNode(this, ast.animation, innerContext);\n\n      // this is here just incase the inner steps only contain or end\n      // with a style() call (which is here to signal that this is a preparatory\n      // call to style an element before it is animated again)\n      innerContext.currentTimeline.applyStylesToKeyframe();\n\n      const endTime = innerContext.currentTimeline.currentTime;\n      furthestTime = Math.max(furthestTime, endTime);\n    });\n\n    context.currentQueryIndex = 0;\n    context.currentQueryTotal = 0;\n    context.transformIntoNewTimeline(furthestTime);\n\n    if (sameElementTimeline) {\n      context.currentTimeline.mergeTimelineCollectedStyles(sameElementTimeline);\n      context.currentTimeline.snapshotCurrentStyles();\n    }\n\n    context.previousNode = ast;\n  }\n\n  visitStagger(ast: StaggerAst, context: AnimationTimelineContext) {\n    const parentContext = context.parentContext!;\n    const tl = context.currentTimeline;\n    const timings = ast.timings;\n    const duration = Math.abs(timings.duration);\n    const maxTime = duration * (context.currentQueryTotal - 1);\n    let delay = duration * context.currentQueryIndex;\n\n    let staggerTransformer = timings.duration < 0 ? 'reverse' : timings.easing;\n    switch (staggerTransformer) {\n      case 'reverse':\n        delay = maxTime - delay;\n        break;\n      case 'full':\n        delay = parentContext.currentStaggerTime;\n        break;\n    }\n\n    const timeline = context.currentTimeline;\n    if (delay) {\n      timeline.delayNextStep(delay);\n    }\n\n    const startingTime = timeline.currentTime;\n    visitDslNode(this, ast.animation, context);\n    context.previousNode = ast;\n\n    // time = duration + delay\n    // the reason why this computation is so complex is because\n    // the inner timeline may either have a delay value or a stretched\n    // keyframe depending on if a subtimeline is not used or is used.\n    parentContext.currentStaggerTime =\n        (tl.currentTime - startingTime) + (tl.startTime - parentContext.currentTimeline.startTime);\n  }\n}\n\nexport declare type StyleAtTime = {\n  time: number; value: string | number;\n};\n\nconst DEFAULT_NOOP_PREVIOUS_NODE = <Ast<AnimationMetadataType>>{};\nexport class AnimationTimelineContext {\n  public parentContext: AnimationTimelineContext|null = null;\n  public currentTimeline: TimelineBuilder;\n  public currentAnimateTimings: AnimateTimings|null = null;\n  public previousNode: Ast<AnimationMetadataType> = DEFAULT_NOOP_PREVIOUS_NODE;\n  public subContextCount = 0;\n  public options: AnimationOptions = {};\n  public currentQueryIndex: number = 0;\n  public currentQueryTotal: number = 0;\n  public currentStaggerTime: number = 0;\n\n  constructor(\n      private _driver: AnimationDriver, public element: any,\n      public subInstructions: ElementInstructionMap, private _enterClassName: string,\n      private _leaveClassName: string, public errors: any[], public timelines: TimelineBuilder[],\n      initialTimeline?: TimelineBuilder) {\n    this.currentTimeline = initialTimeline || new TimelineBuilder(this._driver, element, 0);\n    timelines.push(this.currentTimeline);\n  }\n\n  get params() {\n    return this.options.params;\n  }\n\n  updateOptions(options: AnimationOptions|null, skipIfExists?: boolean) {\n    if (!options) return;\n\n    const newOptions = options as any;\n    let optionsToUpdate = this.options;\n\n    // NOTE: this will get patched up when other animation methods support duration overrides\n    if (newOptions.duration != null) {\n      (optionsToUpdate as any).duration = resolveTimingValue(newOptions.duration);\n    }\n\n    if (newOptions.delay != null) {\n      optionsToUpdate.delay = resolveTimingValue(newOptions.delay);\n    }\n\n    const newParams = newOptions.params;\n    if (newParams) {\n      let paramsToUpdate: {[name: string]: any} = optionsToUpdate.params!;\n      if (!paramsToUpdate) {\n        paramsToUpdate = this.options.params = {};\n      }\n\n      Object.keys(newParams).forEach(name => {\n        if (!skipIfExists || !paramsToUpdate.hasOwnProperty(name)) {\n          paramsToUpdate[name] = interpolateParams(newParams[name], paramsToUpdate, this.errors);\n        }\n      });\n    }\n  }\n\n  private _copyOptions() {\n    const options: AnimationOptions = {};\n    if (this.options) {\n      const oldParams = this.options.params;\n      if (oldParams) {\n        const params: {[name: string]: any} = options['params'] = {};\n        Object.keys(oldParams).forEach(name => {\n          params[name] = oldParams[name];\n        });\n      }\n    }\n    return options;\n  }\n\n  createSubContext(options: AnimationOptions|null = null, element?: any, newTime?: number):\n      AnimationTimelineContext {\n    const target = element || this.element;\n    const context = new AnimationTimelineContext(\n        this._driver, target, this.subInstructions, this._enterClassName, this._leaveClassName,\n        this.errors, this.timelines, this.currentTimeline.fork(target, newTime || 0));\n    context.previousNode = this.previousNode;\n    context.currentAnimateTimings = this.currentAnimateTimings;\n\n    context.options = this._copyOptions();\n    context.updateOptions(options);\n\n    context.currentQueryIndex = this.currentQueryIndex;\n    context.currentQueryTotal = this.currentQueryTotal;\n    context.parentContext = this;\n    this.subContextCount++;\n    return context;\n  }\n\n  transformIntoNewTimeline(newTime?: number) {\n    this.previousNode = DEFAULT_NOOP_PREVIOUS_NODE;\n    this.currentTimeline = this.currentTimeline.fork(this.element, newTime);\n    this.timelines.push(this.currentTimeline);\n    return this.currentTimeline;\n  }\n\n  appendInstructionToTimeline(\n      instruction: AnimationTimelineInstruction, duration: number|null,\n      delay: number|null): AnimateTimings {\n    const updatedTimings: AnimateTimings = {\n      duration: duration != null ? duration : instruction.duration,\n      delay: this.currentTimeline.currentTime + (delay != null ? delay : 0) + instruction.delay,\n      easing: ''\n    };\n    const builder = new SubTimelineBuilder(\n        this._driver, instruction.element, instruction.keyframes, instruction.preStyleProps,\n        instruction.postStyleProps, updatedTimings, instruction.stretchStartingKeyframe);\n    this.timelines.push(builder);\n    return updatedTimings;\n  }\n\n  incrementTime(time: number) {\n    this.currentTimeline.forwardTime(this.currentTimeline.duration + time);\n  }\n\n  delayNextStep(delay: number) {\n    // negative delays are not yet supported\n    if (delay > 0) {\n      this.currentTimeline.delayNextStep(delay);\n    }\n  }\n\n  invokeQuery(\n      selector: string, originalSelector: string, limit: number, includeSelf: boolean,\n      optional: boolean, errors: any[]): any[] {\n    let results: any[] = [];\n    if (includeSelf) {\n      results.push(this.element);\n    }\n    if (selector.length > 0) {  // if :self is only used then the selector is empty\n      selector = selector.replace(ENTER_TOKEN_REGEX, '.' + this._enterClassName);\n      selector = selector.replace(LEAVE_TOKEN_REGEX, '.' + this._leaveClassName);\n      const multi = limit != 1;\n      let elements = this._driver.query(this.element, selector, multi);\n      if (limit !== 0) {\n        elements = limit < 0 ? elements.slice(elements.length + limit, elements.length) :\n                               elements.slice(0, limit);\n      }\n      results.push(...elements);\n    }\n\n    if (!optional && results.length == 0) {\n      errors.push(`\\`query(\"${originalSelector}\")\\` returned zero elements. (Use \\`query(\"${\n          originalSelector}\", { optional: true })\\` if you wish to allow this.)`);\n    }\n    return results;\n  }\n}\n\n\nexport class TimelineBuilder {\n  public duration: number = 0;\n  // TODO(issue/24571): remove '!'.\n  public easing!: string|null;\n  private _previousKeyframe: ɵStyleData = {};\n  private _currentKeyframe: ɵStyleData = {};\n  private _keyframes = new Map<number, ɵStyleData>();\n  private _styleSummary: {[prop: string]: StyleAtTime} = {};\n  private _localTimelineStyles: ɵStyleData;\n  private _globalTimelineStyles: ɵStyleData;\n  private _pendingStyles: ɵStyleData = {};\n  private _backFill: ɵStyleData = {};\n  private _currentEmptyStepKeyframe: ɵStyleData|null = null;\n\n  constructor(\n      private _driver: AnimationDriver, public element: any, public startTime: number,\n      private _elementTimelineStylesLookup?: Map<any, ɵStyleData>) {\n    if (!this._elementTimelineStylesLookup) {\n      this._elementTimelineStylesLookup = new Map<any, ɵStyleData>();\n    }\n\n    this._localTimelineStyles = Object.create(this._backFill, {});\n    this._globalTimelineStyles = this._elementTimelineStylesLookup.get(element)!;\n    if (!this._globalTimelineStyles) {\n      this._globalTimelineStyles = this._localTimelineStyles;\n      this._elementTimelineStylesLookup.set(element, this._localTimelineStyles);\n    }\n    this._loadKeyframe();\n  }\n\n  containsAnimation(): boolean {\n    switch (this._keyframes.size) {\n      case 0:\n        return false;\n      case 1:\n        return this.getCurrentStyleProperties().length > 0;\n      default:\n        return true;\n    }\n  }\n\n  getCurrentStyleProperties(): string[] {\n    return Object.keys(this._currentKeyframe);\n  }\n\n  get currentTime() {\n    return this.startTime + this.duration;\n  }\n\n  delayNextStep(delay: number) {\n    // in the event that a style() step is placed right before a stagger()\n    // and that style() step is the very first style() value in the animation\n    // then we need to make a copy of the keyframe [0, copy, 1] so that the delay\n    // properly applies the style() values to work with the stagger...\n    const hasPreStyleStep = this._keyframes.size == 1 && Object.keys(this._pendingStyles).length;\n\n    if (this.duration || hasPreStyleStep) {\n      this.forwardTime(this.currentTime + delay);\n      if (hasPreStyleStep) {\n        this.snapshotCurrentStyles();\n      }\n    } else {\n      this.startTime += delay;\n    }\n  }\n\n  fork(element: any, currentTime?: number): TimelineBuilder {\n    this.applyStylesToKeyframe();\n    return new TimelineBuilder(\n        this._driver, element, currentTime || this.currentTime, this._elementTimelineStylesLookup);\n  }\n\n  private _loadKeyframe() {\n    if (this._currentKeyframe) {\n      this._previousKeyframe = this._currentKeyframe;\n    }\n    this._currentKeyframe = this._keyframes.get(this.duration)!;\n    if (!this._currentKeyframe) {\n      this._currentKeyframe = Object.create(this._backFill, {});\n      this._keyframes.set(this.duration, this._currentKeyframe);\n    }\n  }\n\n  forwardFrame() {\n    this.duration += ONE_FRAME_IN_MILLISECONDS;\n    this._loadKeyframe();\n  }\n\n  forwardTime(time: number) {\n    this.applyStylesToKeyframe();\n    this.duration = time;\n    this._loadKeyframe();\n  }\n\n  private _updateStyle(prop: string, value: string|number) {\n    this._localTimelineStyles[prop] = value;\n    this._globalTimelineStyles[prop] = value;\n    this._styleSummary[prop] = {time: this.currentTime, value};\n  }\n\n  allowOnlyTimelineStyles() {\n    return this._currentEmptyStepKeyframe !== this._currentKeyframe;\n  }\n\n  applyEmptyStep(easing: string|null) {\n    if (easing) {\n      this._previousKeyframe['easing'] = easing;\n    }\n\n    // special case for animate(duration):\n    // all missing styles are filled with a `*` value then\n    // if any destination styles are filled in later on the same\n    // keyframe then they will override the overridden styles\n    // We use `_globalTimelineStyles` here because there may be\n    // styles in previous keyframes that are not present in this timeline\n    Object.keys(this._globalTimelineStyles).forEach(prop => {\n      this._backFill[prop] = this._globalTimelineStyles[prop] || AUTO_STYLE;\n      this._currentKeyframe[prop] = AUTO_STYLE;\n    });\n    this._currentEmptyStepKeyframe = this._currentKeyframe;\n  }\n\n  setStyles(\n      input: (ɵStyleData|string)[], easing: string|null, errors: any[],\n      options?: AnimationOptions) {\n    if (easing) {\n      this._previousKeyframe['easing'] = easing;\n    }\n\n    const params = (options && options.params) || {};\n    const styles = flattenStyles(input, this._globalTimelineStyles);\n    Object.keys(styles).forEach(prop => {\n      const val = interpolateParams(styles[prop], params, errors);\n      this._pendingStyles[prop] = val;\n      if (!this._localTimelineStyles.hasOwnProperty(prop)) {\n        this._backFill[prop] = this._globalTimelineStyles.hasOwnProperty(prop) ?\n            this._globalTimelineStyles[prop] :\n            AUTO_STYLE;\n      }\n      this._updateStyle(prop, val);\n    });\n  }\n\n  applyStylesToKeyframe() {\n    const styles = this._pendingStyles;\n    const props = Object.keys(styles);\n    if (props.length == 0) return;\n\n    this._pendingStyles = {};\n\n    props.forEach(prop => {\n      const val = styles[prop];\n      this._currentKeyframe[prop] = val;\n    });\n\n    Object.keys(this._localTimelineStyles).forEach(prop => {\n      if (!this._currentKeyframe.hasOwnProperty(prop)) {\n        this._currentKeyframe[prop] = this._localTimelineStyles[prop];\n      }\n    });\n  }\n\n  snapshotCurrentStyles() {\n    Object.keys(this._localTimelineStyles).forEach(prop => {\n      const val = this._localTimelineStyles[prop];\n      this._pendingStyles[prop] = val;\n      this._updateStyle(prop, val);\n    });\n  }\n\n  getFinalKeyframe() {\n    return this._keyframes.get(this.duration);\n  }\n\n  get properties() {\n    const properties: string[] = [];\n    for (let prop in this._currentKeyframe) {\n      properties.push(prop);\n    }\n    return properties;\n  }\n\n  mergeTimelineCollectedStyles(timeline: TimelineBuilder) {\n    Object.keys(timeline._styleSummary).forEach(prop => {\n      const details0 = this._styleSummary[prop];\n      const details1 = timeline._styleSummary[prop];\n      if (!details0 || details1.time > details0.time) {\n        this._updateStyle(prop, details1.value);\n      }\n    });\n  }\n\n  buildKeyframes(): AnimationTimelineInstruction {\n    this.applyStylesToKeyframe();\n    const preStyleProps = new Set<string>();\n    const postStyleProps = new Set<string>();\n    const isEmpty = this._keyframes.size === 1 && this.duration === 0;\n\n    let finalKeyframes: ɵStyleData[] = [];\n    this._keyframes.forEach((keyframe, time) => {\n      const finalKeyframe = copyStyles(keyframe, true);\n      Object.keys(finalKeyframe).forEach(prop => {\n        const value = finalKeyframe[prop];\n        if (value == PRE_STYLE) {\n          preStyleProps.add(prop);\n        } else if (value == AUTO_STYLE) {\n          postStyleProps.add(prop);\n        }\n      });\n      if (!isEmpty) {\n        finalKeyframe['offset'] = time / this.duration;\n      }\n      finalKeyframes.push(finalKeyframe);\n    });\n\n    const preProps: string[] = preStyleProps.size ? iteratorToArray(preStyleProps.values()) : [];\n    const postProps: string[] = postStyleProps.size ? iteratorToArray(postStyleProps.values()) : [];\n\n    // special case for a 0-second animation (which is designed just to place styles onscreen)\n    if (isEmpty) {\n      const kf0 = finalKeyframes[0];\n      const kf1 = copyObj(kf0);\n      kf0['offset'] = 0;\n      kf1['offset'] = 1;\n      finalKeyframes = [kf0, kf1];\n    }\n\n    return createTimelineInstruction(\n        this.element, finalKeyframes, preProps, postProps, this.duration, this.startTime,\n        this.easing, false);\n  }\n}\n\nclass SubTimelineBuilder extends TimelineBuilder {\n  public timings: AnimateTimings;\n\n  constructor(\n      driver: AnimationDriver, public element: any, public keyframes: ɵStyleData[],\n      public preStyleProps: string[], public postStyleProps: string[], timings: AnimateTimings,\n      private _stretchStartingKeyframe: boolean = false) {\n    super(driver, element, timings.delay);\n    this.timings = {duration: timings.duration, delay: timings.delay, easing: timings.easing};\n  }\n\n  containsAnimation(): boolean {\n    return this.keyframes.length > 1;\n  }\n\n  buildKeyframes(): AnimationTimelineInstruction {\n    let keyframes = this.keyframes;\n    let {delay, duration, easing} = this.timings;\n    if (this._stretchStartingKeyframe && delay) {\n      const newKeyframes: ɵStyleData[] = [];\n      const totalTime = duration + delay;\n      const startingGap = delay / totalTime;\n\n      // the original starting keyframe now starts once the delay is done\n      const newFirstKeyframe = copyStyles(keyframes[0], false);\n      newFirstKeyframe['offset'] = 0;\n      newKeyframes.push(newFirstKeyframe);\n\n      const oldFirstKeyframe = copyStyles(keyframes[0], false);\n      oldFirstKeyframe['offset'] = roundOffset(startingGap);\n      newKeyframes.push(oldFirstKeyframe);\n\n      /*\n        When the keyframe is stretched then it means that the delay before the animation\n        starts is gone. Instead the first keyframe is placed at the start of the animation\n        and it is then copied to where it starts when the original delay is over. This basically\n        means nothing animates during that delay, but the styles are still renderered. For this\n        to work the original offset values that exist in the original keyframes must be \"warped\"\n        so that they can take the new keyframe + delay into account.\n\n        delay=1000, duration=1000, keyframes = 0 .5 1\n\n        turns into\n\n        delay=0, duration=2000, keyframes = 0 .33 .66 1\n       */\n\n      // offsets between 1 ... n -1 are all warped by the keyframe stretch\n      const limit = keyframes.length - 1;\n      for (let i = 1; i <= limit; i++) {\n        let kf = copyStyles(keyframes[i], false);\n        const oldOffset = kf['offset'] as number;\n        const timeAtKeyframe = delay + oldOffset * duration;\n        kf['offset'] = roundOffset(timeAtKeyframe / totalTime);\n        newKeyframes.push(kf);\n      }\n\n      // the new starting keyframe should be added at the start\n      duration = totalTime;\n      delay = 0;\n      easing = '';\n\n      keyframes = newKeyframes;\n    }\n\n    return createTimelineInstruction(\n        this.element, keyframes, this.preStyleProps, this.postStyleProps, duration, delay, easing,\n        true);\n  }\n}\n\nfunction roundOffset(offset: number, decimalPoints = 3): number {\n  const mult = Math.pow(10, decimalPoints - 1);\n  return Math.round(offset * mult) / mult;\n}\n\nfunction flattenStyles(input: (ɵStyleData|string)[], allStyles: ɵStyleData) {\n  const styles: ɵStyleData = {};\n  let allProperties: string[];\n  input.forEach(token => {\n    if (token === '*') {\n      allProperties = allProperties || Object.keys(allStyles);\n      allProperties.forEach(prop => {\n        styles[prop] = AUTO_STYLE;\n      });\n    } else {\n      copyStyles(token as ɵStyleData, false, styles);\n    }\n  });\n  return styles;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadata, AnimationMetadataType, AnimationOptions, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME, normalizeStyles} from '../util';\n\nimport {Ast} from './animation_ast';\nimport {buildAnimationAst} from './animation_ast_builder';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n\nexport class Animation {\n  private _animationAst: Ast<AnimationMetadataType>;\n  constructor(private _driver: AnimationDriver, input: AnimationMetadata|AnimationMetadata[]) {\n    const errors: any[] = [];\n    const ast = buildAnimationAst(_driver, input, errors);\n    if (errors.length) {\n      const errorMessage = `animation validation failed:\\n${errors.join('\\n')}`;\n      throw new Error(errorMessage);\n    }\n    this._animationAst = ast;\n  }\n\n  buildTimelines(\n      element: any, startingStyles: ɵStyleData|ɵStyleData[],\n      destinationStyles: ɵStyleData|ɵStyleData[], options: AnimationOptions,\n      subInstructions?: ElementInstructionMap): AnimationTimelineInstruction[] {\n    const start = Array.isArray(startingStyles) ? normalizeStyles(startingStyles) :\n                                                  <ɵStyleData>startingStyles;\n    const dest = Array.isArray(destinationStyles) ? normalizeStyles(destinationStyles) :\n                                                    <ɵStyleData>destinationStyles;\n    const errors: any = [];\n    subInstructions = subInstructions || new ElementInstructionMap();\n    const result = buildAnimationTimelines(\n        this._driver, element, this._animationAst, ENTER_CLASSNAME, LEAVE_CLASSNAME, start, dest,\n        options, subInstructions, errors);\n    if (errors.length) {\n      const errorMessage = `animation building failed:\\n${errors.join('\\n')}`;\n      throw new Error(errorMessage);\n    }\n    return result;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\nexport abstract class AnimationStyleNormalizer {\n  abstract normalizePropertyName(propertyName: string, errors: string[]): string;\n  abstract normalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string;\n}\n\n/**\n * @publicApi\n */\nexport class NoopAnimationStyleNormalizer {\n  normalizePropertyName(propertyName: string, errors: string[]): string {\n    return propertyName;\n  }\n\n  normalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string {\n    return <any>value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {dashCaseToCamelCase} from '../../util';\n\nimport {AnimationStyleNormalizer} from './animation_style_normalizer';\n\nexport class WebAnimationsStyleNormalizer extends AnimationStyleNormalizer {\n  normalizePropertyName(propertyName: string, errors: string[]): string {\n    return dashCaseToCamelCase(propertyName);\n  }\n\n  normalizeStyleValue(\n      userProvidedProperty: string, normalizedProperty: string, value: string|number,\n      errors: string[]): string {\n    let unit: string = '';\n    const strVal = value.toString().trim();\n\n    if (DIMENSIONAL_PROP_MAP[normalizedProperty] && value !== 0 && value !== '0') {\n      if (typeof value === 'number') {\n        unit = 'px';\n      } else {\n        const valAndSuffixMatch = value.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n        if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n          errors.push(`Please provide a CSS unit value for ${userProvidedProperty}:${value}`);\n        }\n      }\n    }\n    return strVal + unit;\n  }\n}\n\nconst DIMENSIONAL_PROP_MAP =\n    (() => makeBooleanMap(\n         'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'\n             .split(',')))();\n\nfunction makeBooleanMap(keys: string[]): {[key: string]: boolean} {\n  const map: {[key: string]: boolean} = {};\n  keys.forEach(key => map[key] = true);\n  return map;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ɵStyleData} from '@angular/animations';\nimport {AnimationEngineInstruction, AnimationTransitionInstructionType} from '../render/animation_engine_instruction';\nimport {AnimationTimelineInstruction} from './animation_timeline_instruction';\n\nexport interface AnimationTransitionInstruction extends AnimationEngineInstruction {\n  element: any;\n  triggerName: string;\n  isRemovalTransition: boolean;\n  fromState: string;\n  fromStyles: ɵStyleData;\n  toState: string;\n  toStyles: ɵStyleData;\n  timelines: AnimationTimelineInstruction[];\n  queriedElements: any[];\n  preStyleProps: Map<any, {[prop: string]: boolean}>;\n  postStyleProps: Map<any, {[prop: string]: boolean}>;\n  totalTime: number;\n  errors?: any[];\n}\n\nexport function createTransitionInstruction(\n    element: any, triggerName: string, fromState: string, toState: string,\n    isRemovalTransition: boolean, fromStyles: ɵStyleData, toStyles: ɵStyleData,\n    timelines: AnimationTimelineInstruction[], queriedElements: any[],\n    preStyleProps: Map<any, {[prop: string]: boolean}>,\n    postStyleProps: Map<any, {[prop: string]: boolean}>, totalTime: number,\n    errors?: any[]): AnimationTransitionInstruction {\n  return {\n    type: AnimationTransitionInstructionType.TransitionAnimation,\n    element,\n    triggerName,\n    isRemovalTransition,\n    fromState,\n    fromStyles,\n    toState,\n    toStyles,\n    timelines,\n    queriedElements,\n    preStyleProps,\n    postStyleProps,\n    totalTime,\n    errors\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationOptions, ɵStyleData} from '@angular/animations';\n\nimport {AnimationDriver} from '../render/animation_driver';\nimport {getOrSetAsInMap} from '../render/shared';\nimport {copyObj, interpolateParams, iteratorToArray, mergeAnimationOptions} from '../util';\n\nimport {StyleAst, TransitionAst} from './animation_ast';\nimport {buildAnimationTimelines} from './animation_timeline_builder';\nimport {TransitionMatcherFn} from './animation_transition_expr';\nimport {AnimationTransitionInstruction, createTransitionInstruction} from './animation_transition_instruction';\nimport {ElementInstructionMap} from './element_instruction_map';\n\nconst EMPTY_OBJECT = {};\n\nexport class AnimationTransitionFactory {\n  constructor(\n      private _triggerName: string, public ast: TransitionAst,\n      private _stateStyles: {[stateName: string]: AnimationStateStyles}) {}\n\n  match(currentState: any, nextState: any, element: any, params: {[key: string]: any}): boolean {\n    return oneOrMoreTransitionsMatch(this.ast.matchers, currentState, nextState, element, params);\n  }\n\n  buildStyles(stateName: string, params: {[key: string]: any}, errors: any[]) {\n    const backupStateStyler = this._stateStyles['*'];\n    const stateStyler = this._stateStyles[stateName];\n    const backupStyles = backupStateStyler ? backupStateStyler.buildStyles(params, errors) : {};\n    return stateStyler ? stateStyler.buildStyles(params, errors) : backupStyles;\n  }\n\n  build(\n      driver: AnimationDriver, element: any, currentState: any, nextState: any,\n      enterClassName: string, leaveClassName: string, currentOptions?: AnimationOptions,\n      nextOptions?: AnimationOptions, subInstructions?: ElementInstructionMap,\n      skipAstBuild?: boolean): AnimationTransitionInstruction {\n    const errors: any[] = [];\n\n    const transitionAnimationParams = this.ast.options && this.ast.options.params || EMPTY_OBJECT;\n    const currentAnimationParams = currentOptions && currentOptions.params || EMPTY_OBJECT;\n    const currentStateStyles = this.buildStyles(currentState, currentAnimationParams, errors);\n    const nextAnimationParams = nextOptions && nextOptions.params || EMPTY_OBJECT;\n    const nextStateStyles = this.buildStyles(nextState, nextAnimationParams, errors);\n\n    const queriedElements = new Set<any>();\n    const preStyleMap = new Map<any, {[prop: string]: boolean}>();\n    const postStyleMap = new Map<any, {[prop: string]: boolean}>();\n    const isRemoval = nextState === 'void';\n\n    const animationOptions = {params: {...transitionAnimationParams, ...nextAnimationParams}};\n\n    const timelines = skipAstBuild ?\n        [] :\n        buildAnimationTimelines(\n            driver, element, this.ast.animation, enterClassName, leaveClassName, currentStateStyles,\n            nextStateStyles, animationOptions, subInstructions, errors);\n\n    let totalTime = 0;\n    timelines.forEach(tl => {\n      totalTime = Math.max(tl.duration + tl.delay, totalTime);\n    });\n\n    if (errors.length) {\n      return createTransitionInstruction(\n          element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles,\n          nextStateStyles, [], [], preStyleMap, postStyleMap, totalTime, errors);\n    }\n\n    timelines.forEach(tl => {\n      const elm = tl.element;\n      const preProps = getOrSetAsInMap(preStyleMap, elm, {});\n      tl.preStyleProps.forEach(prop => preProps[prop] = true);\n\n      const postProps = getOrSetAsInMap(postStyleMap, elm, {});\n      tl.postStyleProps.forEach(prop => postProps[prop] = true);\n\n      if (elm !== element) {\n        queriedElements.add(elm);\n      }\n    });\n\n    const queriedElementsList = iteratorToArray(queriedElements.values());\n    return createTransitionInstruction(\n        element, this._triggerName, currentState, nextState, isRemoval, currentStateStyles,\n        nextStateStyles, timelines, queriedElementsList, preStyleMap, postStyleMap, totalTime);\n  }\n}\n\nfunction oneOrMoreTransitionsMatch(\n    matchFns: TransitionMatcherFn[], currentState: any, nextState: any, element: any,\n    params: {[key: string]: any}): boolean {\n  return matchFns.some(fn => fn(currentState, nextState, element, params));\n}\n\nexport class AnimationStateStyles {\n  constructor(private styles: StyleAst, private defaultParams: {[key: string]: any}) {}\n\n  buildStyles(params: {[key: string]: any}, errors: string[]): ɵStyleData {\n    const finalStyles: ɵStyleData = {};\n    const combinedParams = copyObj(this.defaultParams);\n    Object.keys(params).forEach(key => {\n      const value = params[key];\n      if (value != null) {\n        combinedParams[key] = value;\n      }\n    });\n    this.styles.styles.forEach(value => {\n      if (typeof value !== 'string') {\n        const styleObj = value as any;\n        Object.keys(styleObj).forEach(prop => {\n          let val = styleObj[prop];\n          if (val.length > 1) {\n            val = interpolateParams(val, combinedParams, errors);\n          }\n          finalStyles[prop] = val;\n        });\n      }\n    });\n    return finalStyles;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadataType, ɵStyleData} from '@angular/animations';\n\nimport {copyStyles, interpolateParams} from '../util';\n\nimport {SequenceAst, StyleAst, TransitionAst, TriggerAst} from './animation_ast';\nimport {AnimationStateStyles, AnimationTransitionFactory} from './animation_transition_factory';\n\n\n\n/**\n * @publicApi\n */\nexport function buildTrigger(name: string, ast: TriggerAst): AnimationTrigger {\n  return new AnimationTrigger(name, ast);\n}\n\n/**\n * @publicApi\n */\nexport class AnimationTrigger {\n  public transitionFactories: AnimationTransitionFactory[] = [];\n  public fallbackTransition: AnimationTransitionFactory;\n  public states: {[stateName: string]: AnimationStateStyles} = {};\n\n  constructor(public name: string, public ast: TriggerAst) {\n    ast.states.forEach(ast => {\n      const defaultParams = (ast.options && ast.options.params) || {};\n      this.states[ast.name] = new AnimationStateStyles(ast.style, defaultParams);\n    });\n\n    balanceProperties(this.states, 'true', '1');\n    balanceProperties(this.states, 'false', '0');\n\n    ast.transitions.forEach(ast => {\n      this.transitionFactories.push(new AnimationTransitionFactory(name, ast, this.states));\n    });\n\n    this.fallbackTransition = createFallbackTransition(name, this.states);\n  }\n\n  get containsQueries() {\n    return this.ast.queryCount > 0;\n  }\n\n  matchTransition(currentState: any, nextState: any, element: any, params: {[key: string]: any}):\n      AnimationTransitionFactory|null {\n    const entry =\n        this.transitionFactories.find(f => f.match(currentState, nextState, element, params));\n    return entry || null;\n  }\n\n  matchStyles(currentState: any, params: {[key: string]: any}, errors: any[]): ɵStyleData {\n    return this.fallbackTransition.buildStyles(currentState, params, errors);\n  }\n}\n\nfunction createFallbackTransition(\n    triggerName: string,\n    states: {[stateName: string]: AnimationStateStyles}): AnimationTransitionFactory {\n  const matchers = [(fromState: any, toState: any) => true];\n  const animation: SequenceAst = {type: AnimationMetadataType.Sequence, steps: [], options: null};\n  const transition: TransitionAst = {\n    type: AnimationMetadataType.Transition,\n    animation,\n    matchers,\n    options: null,\n    queryCount: 0,\n    depCount: 0\n  };\n  return new AnimationTransitionFactory(triggerName, transition, states);\n}\n\nfunction balanceProperties(obj: {[key: string]: any}, key1: string, key2: string) {\n  if (obj.hasOwnProperty(key1)) {\n    if (!obj.hasOwnProperty(key2)) {\n      obj[key2] = obj[key1];\n    }\n  } else if (obj.hasOwnProperty(key2)) {\n    obj[key1] = obj[key2];\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadata, AnimationMetadataType, AnimationOptions, AnimationPlayer, AUTO_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {Ast} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {buildAnimationTimelines} from '../dsl/animation_timeline_builder';\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\nimport {ENTER_CLASSNAME, LEAVE_CLASSNAME} from '../util';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst EMPTY_INSTRUCTION_MAP = new ElementInstructionMap();\n\nexport class TimelineAnimationEngine {\n  private _animations: {[id: string]: Ast<AnimationMetadataType>} = {};\n  private _playersById: {[id: string]: AnimationPlayer} = {};\n  public players: AnimationPlayer[] = [];\n\n  constructor(\n      public bodyNode: any, private _driver: AnimationDriver,\n      private _normalizer: AnimationStyleNormalizer) {}\n\n  register(id: string, metadata: AnimationMetadata|AnimationMetadata[]) {\n    const errors: any[] = [];\n    const ast = buildAnimationAst(this._driver, metadata, errors);\n    if (errors.length) {\n      throw new Error(\n          `Unable to build the animation due to the following errors: ${errors.join('\\n')}`);\n    } else {\n      this._animations[id] = ast;\n    }\n  }\n\n  private _buildPlayer(\n      i: AnimationTimelineInstruction, preStyles: ɵStyleData,\n      postStyles?: ɵStyleData): AnimationPlayer {\n    const element = i.element;\n    const keyframes = normalizeKeyframes(\n        this._driver, this._normalizer, element, i.keyframes, preStyles, postStyles);\n    return this._driver.animate(element, keyframes, i.duration, i.delay, i.easing, [], true);\n  }\n\n  create(id: string, element: any, options: AnimationOptions = {}): AnimationPlayer {\n    const errors: any[] = [];\n    const ast = this._animations[id];\n    let instructions: AnimationTimelineInstruction[];\n\n    const autoStylesMap = new Map<any, ɵStyleData>();\n\n    if (ast) {\n      instructions = buildAnimationTimelines(\n          this._driver, element, ast, ENTER_CLASSNAME, LEAVE_CLASSNAME, {}, {}, options,\n          EMPTY_INSTRUCTION_MAP, errors);\n      instructions.forEach(inst => {\n        const styles = getOrSetAsInMap(autoStylesMap, inst.element, {});\n        inst.postStyleProps.forEach(prop => styles[prop] = null);\n      });\n    } else {\n      errors.push('The requested animation doesn\\'t exist or has already been destroyed');\n      instructions = [];\n    }\n\n    if (errors.length) {\n      throw new Error(\n          `Unable to create the animation due to the following errors: ${errors.join('\\n')}`);\n    }\n\n    autoStylesMap.forEach((styles, element) => {\n      Object.keys(styles).forEach(prop => {\n        styles[prop] = this._driver.computeStyle(element, prop, AUTO_STYLE);\n      });\n    });\n\n    const players = instructions.map(i => {\n      const styles = autoStylesMap.get(i.element);\n      return this._buildPlayer(i, {}, styles);\n    });\n    const player = optimizeGroupPlayer(players);\n    this._playersById[id] = player;\n    player.onDestroy(() => this.destroy(id));\n\n    this.players.push(player);\n    return player;\n  }\n\n  destroy(id: string) {\n    const player = this._getPlayer(id);\n    player.destroy();\n    delete this._playersById[id];\n    const index = this.players.indexOf(player);\n    if (index >= 0) {\n      this.players.splice(index, 1);\n    }\n  }\n\n  private _getPlayer(id: string): AnimationPlayer {\n    const player = this._playersById[id];\n    if (!player) {\n      throw new Error(`Unable to find the timeline player referenced by ${id}`);\n    }\n    return player;\n  }\n\n  listen(id: string, element: string, eventName: string, callback: (event: any) => any):\n      () => void {\n    // triggerName, fromState, toState are all ignored for timeline animations\n    const baseEvent = makeAnimationEvent(element, '', '', '');\n    listenOnPlayer(this._getPlayer(id), eventName, baseEvent, callback);\n    return () => {};\n  }\n\n  command(id: string, element: any, command: string, args: any[]): void {\n    if (command == 'register') {\n      this.register(id, args[0] as AnimationMetadata | AnimationMetadata[]);\n      return;\n    }\n\n    if (command == 'create') {\n      const options = (args[0] || {}) as AnimationOptions;\n      this.create(id, element, options);\n      return;\n    }\n\n    const player = this._getPlayer(id);\n    switch (command) {\n      case 'play':\n        player.play();\n        break;\n      case 'pause':\n        player.pause();\n        break;\n      case 'reset':\n        player.reset();\n        break;\n      case 'restart':\n        player.restart();\n        break;\n      case 'finish':\n        player.finish();\n        break;\n      case 'init':\n        player.init();\n        break;\n      case 'setPosition':\n        player.setPosition(parseFloat(args[0] as string));\n        break;\n      case 'destroy':\n        this.destroy(id);\n        break;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationOptions, AnimationPlayer, AUTO_STYLE, NoopAnimationPlayer, ɵAnimationGroupPlayer as AnimationGroupPlayer, ɵPRE_STYLE as PRE_STYLE, ɵStyleData} from '@angular/animations';\n\nimport {AnimationTimelineInstruction} from '../dsl/animation_timeline_instruction';\nimport {AnimationTransitionFactory} from '../dsl/animation_transition_factory';\nimport {AnimationTransitionInstruction} from '../dsl/animation_transition_instruction';\nimport {AnimationTrigger} from '../dsl/animation_trigger';\nimport {ElementInstructionMap} from '../dsl/element_instruction_map';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\nimport {copyObj, ENTER_CLASSNAME, eraseStyles, iteratorToArray, LEAVE_CLASSNAME, NG_ANIMATING_CLASSNAME, NG_ANIMATING_SELECTOR, NG_TRIGGER_CLASSNAME, NG_TRIGGER_SELECTOR, setStyles} from '../util';\n\nimport {AnimationDriver} from './animation_driver';\nimport {getOrSetAsInMap, listenOnPlayer, makeAnimationEvent, normalizeKeyframes, optimizeGroupPlayer} from './shared';\n\nconst QUEUED_CLASSNAME = 'ng-animate-queued';\nconst QUEUED_SELECTOR = '.ng-animate-queued';\nconst DISABLED_CLASSNAME = 'ng-animate-disabled';\nconst DISABLED_SELECTOR = '.ng-animate-disabled';\nconst STAR_CLASSNAME = 'ng-star-inserted';\nconst STAR_SELECTOR = '.ng-star-inserted';\n\nconst EMPTY_PLAYER_ARRAY: TransitionAnimationPlayer[] = [];\nconst NULL_REMOVAL_STATE: ElementAnimationState = {\n  namespaceId: '',\n  setForRemoval: false,\n  setForMove: false,\n  hasAnimation: false,\n  removedBeforeQueried: false\n};\nconst NULL_REMOVED_QUERIED_STATE: ElementAnimationState = {\n  namespaceId: '',\n  setForMove: false,\n  setForRemoval: false,\n  hasAnimation: false,\n  removedBeforeQueried: true\n};\n\ninterface TriggerListener {\n  name: string;\n  phase: string;\n  callback: (event: any) => any;\n}\n\nexport interface QueueInstruction {\n  element: any;\n  triggerName: string;\n  fromState: StateValue;\n  toState: StateValue;\n  transition: AnimationTransitionFactory;\n  player: TransitionAnimationPlayer;\n  isFallbackTransition: boolean;\n}\n\nexport const REMOVAL_FLAG = '__ng_removed';\n\nexport interface ElementAnimationState {\n  setForRemoval: boolean;\n  setForMove: boolean;\n  hasAnimation: boolean;\n  namespaceId: string;\n  removedBeforeQueried: boolean;\n}\n\nexport class StateValue {\n  public value: string;\n  public options: AnimationOptions;\n\n  get params(): {[key: string]: any} {\n    return this.options.params as {[key: string]: any};\n  }\n\n  constructor(input: any, public namespaceId: string = '') {\n    const isObj = input && input.hasOwnProperty('value');\n    const value = isObj ? input['value'] : input;\n    this.value = normalizeTriggerValue(value);\n    if (isObj) {\n      const options = copyObj(input as any);\n      delete options['value'];\n      this.options = options as AnimationOptions;\n    } else {\n      this.options = {};\n    }\n    if (!this.options.params) {\n      this.options.params = {};\n    }\n  }\n\n  absorbOptions(options: AnimationOptions) {\n    const newParams = options.params;\n    if (newParams) {\n      const oldParams = this.options.params!;\n      Object.keys(newParams).forEach(prop => {\n        if (oldParams[prop] == null) {\n          oldParams[prop] = newParams[prop];\n        }\n      });\n    }\n  }\n}\n\nexport const VOID_VALUE = 'void';\nexport const DEFAULT_STATE_VALUE = new StateValue(VOID_VALUE);\n\nexport class AnimationTransitionNamespace {\n  public players: TransitionAnimationPlayer[] = [];\n\n  private _triggers: {[triggerName: string]: AnimationTrigger} = {};\n  private _queue: QueueInstruction[] = [];\n\n  private _elementListeners = new Map<any, TriggerListener[]>();\n\n  private _hostClassName: string;\n\n  constructor(\n      public id: string, public hostElement: any, private _engine: TransitionAnimationEngine) {\n    this._hostClassName = 'ng-tns-' + id;\n    addClass(hostElement, this._hostClassName);\n  }\n\n  listen(element: any, name: string, phase: string, callback: (event: any) => boolean): () => any {\n    if (!this._triggers.hasOwnProperty(name)) {\n      throw new Error(`Unable to listen on the animation trigger event \"${\n          phase}\" because the animation trigger \"${name}\" doesn\\'t exist!`);\n    }\n\n    if (phase == null || phase.length == 0) {\n      throw new Error(`Unable to listen on the animation trigger \"${\n          name}\" because the provided event is undefined!`);\n    }\n\n    if (!isTriggerEventValid(phase)) {\n      throw new Error(`The provided animation trigger event \"${phase}\" for the animation trigger \"${\n          name}\" is not supported!`);\n    }\n\n    const listeners = getOrSetAsInMap(this._elementListeners, element, []);\n    const data = {name, phase, callback};\n    listeners.push(data);\n\n    const triggersWithStates = getOrSetAsInMap(this._engine.statesByElement, element, {});\n    if (!triggersWithStates.hasOwnProperty(name)) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + name);\n      triggersWithStates[name] = DEFAULT_STATE_VALUE;\n    }\n\n    return () => {\n      // the event listener is removed AFTER the flush has occurred such\n      // that leave animations callbacks can fire (otherwise if the node\n      // is removed in between then the listeners would be deregistered)\n      this._engine.afterFlush(() => {\n        const index = listeners.indexOf(data);\n        if (index >= 0) {\n          listeners.splice(index, 1);\n        }\n\n        if (!this._triggers[name]) {\n          delete triggersWithStates[name];\n        }\n      });\n    };\n  }\n\n  register(name: string, ast: AnimationTrigger): boolean {\n    if (this._triggers[name]) {\n      // throw\n      return false;\n    } else {\n      this._triggers[name] = ast;\n      return true;\n    }\n  }\n\n  private _getTrigger(name: string) {\n    const trigger = this._triggers[name];\n    if (!trigger) {\n      throw new Error(`The provided animation trigger \"${name}\" has not been registered!`);\n    }\n    return trigger;\n  }\n\n  trigger(element: any, triggerName: string, value: any, defaultToFallback: boolean = true):\n      TransitionAnimationPlayer|undefined {\n    const trigger = this._getTrigger(triggerName);\n    const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n\n    let triggersWithStates = this._engine.statesByElement.get(element);\n    if (!triggersWithStates) {\n      addClass(element, NG_TRIGGER_CLASSNAME);\n      addClass(element, NG_TRIGGER_CLASSNAME + '-' + triggerName);\n      this._engine.statesByElement.set(element, triggersWithStates = {});\n    }\n\n    let fromState = triggersWithStates[triggerName];\n    const toState = new StateValue(value, this.id);\n\n    const isObj = value && value.hasOwnProperty('value');\n    if (!isObj && fromState) {\n      toState.absorbOptions(fromState.options);\n    }\n\n    triggersWithStates[triggerName] = toState;\n\n    if (!fromState) {\n      fromState = DEFAULT_STATE_VALUE;\n    }\n\n    const isRemoval = toState.value === VOID_VALUE;\n\n    // normally this isn't reached by here, however, if an object expression\n    // is passed in then it may be a new object each time. Comparing the value\n    // is important since that will stay the same despite there being a new object.\n    // The removal arc here is special cased because the same element is triggered\n    // twice in the event that it contains animations on the outer/inner portions\n    // of the host container\n    if (!isRemoval && fromState.value === toState.value) {\n      // this means that despite the value not changing, some inner params\n      // have changed which means that the animation final styles need to be applied\n      if (!objEquals(fromState.params, toState.params)) {\n        const errors: any[] = [];\n        const fromStyles = trigger.matchStyles(fromState.value, fromState.params, errors);\n        const toStyles = trigger.matchStyles(toState.value, toState.params, errors);\n        if (errors.length) {\n          this._engine.reportError(errors);\n        } else {\n          this._engine.afterFlush(() => {\n            eraseStyles(element, fromStyles);\n            setStyles(element, toStyles);\n          });\n        }\n      }\n      return;\n    }\n\n    const playersOnElement: TransitionAnimationPlayer[] =\n        getOrSetAsInMap(this._engine.playersByElement, element, []);\n    playersOnElement.forEach(player => {\n      // only remove the player if it is queued on the EXACT same trigger/namespace\n      // we only also deal with queued players here because if the animation has\n      // started then we want to keep the player alive until the flush happens\n      // (which is where the previousPlayers are passed into the new palyer)\n      if (player.namespaceId == this.id && player.triggerName == triggerName && player.queued) {\n        player.destroy();\n      }\n    });\n\n    let transition =\n        trigger.matchTransition(fromState.value, toState.value, element, toState.params);\n    let isFallbackTransition = false;\n    if (!transition) {\n      if (!defaultToFallback) return;\n      transition = trigger.fallbackTransition;\n      isFallbackTransition = true;\n    }\n\n    this._engine.totalQueuedPlayers++;\n    this._queue.push(\n        {element, triggerName, transition, fromState, toState, player, isFallbackTransition});\n\n    if (!isFallbackTransition) {\n      addClass(element, QUEUED_CLASSNAME);\n      player.onStart(() => {\n        removeClass(element, QUEUED_CLASSNAME);\n      });\n    }\n\n    player.onDone(() => {\n      let index = this.players.indexOf(player);\n      if (index >= 0) {\n        this.players.splice(index, 1);\n      }\n\n      const players = this._engine.playersByElement.get(element);\n      if (players) {\n        let index = players.indexOf(player);\n        if (index >= 0) {\n          players.splice(index, 1);\n        }\n      }\n    });\n\n    this.players.push(player);\n    playersOnElement.push(player);\n\n    return player;\n  }\n\n  deregister(name: string) {\n    delete this._triggers[name];\n\n    this._engine.statesByElement.forEach((stateMap, element) => {\n      delete stateMap[name];\n    });\n\n    this._elementListeners.forEach((listeners, element) => {\n      this._elementListeners.set(element, listeners.filter(entry => {\n        return entry.name != name;\n      }));\n    });\n  }\n\n  clearElementCache(element: any) {\n    this._engine.statesByElement.delete(element);\n    this._elementListeners.delete(element);\n    const elementPlayers = this._engine.playersByElement.get(element);\n    if (elementPlayers) {\n      elementPlayers.forEach(player => player.destroy());\n      this._engine.playersByElement.delete(element);\n    }\n  }\n\n  private _signalRemovalForInnerTriggers(rootElement: any, context: any) {\n    const elements = this._engine.driver.query(rootElement, NG_TRIGGER_SELECTOR, true);\n\n    // emulate a leave animation for all inner nodes within this node.\n    // If there are no animations found for any of the nodes then clear the cache\n    // for the element.\n    elements.forEach(elm => {\n      // this means that an inner remove() operation has already kicked off\n      // the animation on this element...\n      if (elm[REMOVAL_FLAG]) return;\n\n      const namespaces = this._engine.fetchNamespacesByElement(elm);\n      if (namespaces.size) {\n        namespaces.forEach(ns => ns.triggerLeaveAnimation(elm, context, false, true));\n      } else {\n        this.clearElementCache(elm);\n      }\n    });\n\n    // If the child elements were removed along with the parent, their animations might not\n    // have completed. Clear all the elements from the cache so we don't end up with a memory leak.\n    this._engine.afterFlushAnimationsDone(\n        () => elements.forEach(elm => this.clearElementCache(elm)));\n  }\n\n  triggerLeaveAnimation(\n      element: any, context: any, destroyAfterComplete?: boolean,\n      defaultToFallback?: boolean): boolean {\n    const triggerStates = this._engine.statesByElement.get(element);\n    if (triggerStates) {\n      const players: TransitionAnimationPlayer[] = [];\n      Object.keys(triggerStates).forEach(triggerName => {\n        // this check is here in the event that an element is removed\n        // twice (both on the host level and the component level)\n        if (this._triggers[triggerName]) {\n          const player = this.trigger(element, triggerName, VOID_VALUE, defaultToFallback);\n          if (player) {\n            players.push(player);\n          }\n        }\n      });\n\n      if (players.length) {\n        this._engine.markElementAsRemoved(this.id, element, true, context);\n        if (destroyAfterComplete) {\n          optimizeGroupPlayer(players).onDone(() => this._engine.processLeaveNode(element));\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  prepareLeaveAnimationListeners(element: any) {\n    const listeners = this._elementListeners.get(element);\n    if (listeners) {\n      const visitedTriggers = new Set<string>();\n      listeners.forEach(listener => {\n        const triggerName = listener.name;\n        if (visitedTriggers.has(triggerName)) return;\n        visitedTriggers.add(triggerName);\n\n        const trigger = this._triggers[triggerName];\n        const transition = trigger.fallbackTransition;\n        const elementStates = this._engine.statesByElement.get(element)!;\n        const fromState = elementStates[triggerName] || DEFAULT_STATE_VALUE;\n        const toState = new StateValue(VOID_VALUE);\n        const player = new TransitionAnimationPlayer(this.id, triggerName, element);\n\n        this._engine.totalQueuedPlayers++;\n        this._queue.push({\n          element,\n          triggerName,\n          transition,\n          fromState,\n          toState,\n          player,\n          isFallbackTransition: true\n        });\n      });\n    }\n  }\n\n  removeNode(element: any, context: any): void {\n    const engine = this._engine;\n\n    if (element.childElementCount) {\n      this._signalRemovalForInnerTriggers(element, context);\n    }\n\n    // this means that a * => VOID animation was detected and kicked off\n    if (this.triggerLeaveAnimation(element, context, true)) return;\n\n    // find the player that is animating and make sure that the\n    // removal is delayed until that player has completed\n    let containsPotentialParentTransition = false;\n    if (engine.totalAnimations) {\n      const currentPlayers =\n          engine.players.length ? engine.playersByQueriedElement.get(element) : [];\n\n      // when this `if statement` does not continue forward it means that\n      // a previous animation query has selected the current element and\n      // is animating it. In this situation want to continue forwards and\n      // allow the element to be queued up for animation later.\n      if (currentPlayers && currentPlayers.length) {\n        containsPotentialParentTransition = true;\n      } else {\n        let parent = element;\n        while (parent = parent.parentNode) {\n          const triggers = engine.statesByElement.get(parent);\n          if (triggers) {\n            containsPotentialParentTransition = true;\n            break;\n          }\n        }\n      }\n    }\n\n    // at this stage we know that the element will either get removed\n    // during flush or will be picked up by a parent query. Either way\n    // we need to fire the listeners for this element when it DOES get\n    // removed (once the query parent animation is done or after flush)\n    this.prepareLeaveAnimationListeners(element);\n\n    // whether or not a parent has an animation we need to delay the deferral of the leave\n    // operation until we have more information (which we do after flush() has been called)\n    if (containsPotentialParentTransition) {\n      engine.markElementAsRemoved(this.id, element, false, context);\n    } else {\n      const removalFlag = element[REMOVAL_FLAG];\n      if (!removalFlag || removalFlag === NULL_REMOVAL_STATE) {\n        // we do this after the flush has occurred such\n        // that the callbacks can be fired\n        engine.afterFlush(() => this.clearElementCache(element));\n        engine.destroyInnerAnimations(element);\n        engine._onRemovalComplete(element, context);\n      }\n    }\n  }\n\n  insertNode(element: any, parent: any): void {\n    addClass(element, this._hostClassName);\n  }\n\n  drainQueuedTransitions(microtaskId: number): QueueInstruction[] {\n    const instructions: QueueInstruction[] = [];\n    this._queue.forEach(entry => {\n      const player = entry.player;\n      if (player.destroyed) return;\n\n      const element = entry.element;\n      const listeners = this._elementListeners.get(element);\n      if (listeners) {\n        listeners.forEach((listener: TriggerListener) => {\n          if (listener.name == entry.triggerName) {\n            const baseEvent = makeAnimationEvent(\n                element, entry.triggerName, entry.fromState.value, entry.toState.value);\n            (baseEvent as any)['_data'] = microtaskId;\n            listenOnPlayer(entry.player, listener.phase, baseEvent, listener.callback);\n          }\n        });\n      }\n\n      if (player.markedForDestroy) {\n        this._engine.afterFlush(() => {\n          // now we can destroy the element properly since the event listeners have\n          // been bound to the player\n          player.destroy();\n        });\n      } else {\n        instructions.push(entry);\n      }\n    });\n\n    this._queue = [];\n\n    return instructions.sort((a, b) => {\n      // if depCount == 0 them move to front\n      // otherwise if a contains b then move back\n      const d0 = a.transition.ast.depCount;\n      const d1 = b.transition.ast.depCount;\n      if (d0 == 0 || d1 == 0) {\n        return d0 - d1;\n      }\n      return this._engine.driver.containsElement(a.element, b.element) ? 1 : -1;\n    });\n  }\n\n  destroy(context: any) {\n    this.players.forEach(p => p.destroy());\n    this._signalRemovalForInnerTriggers(this.hostElement, context);\n  }\n\n  elementContainsData(element: any): boolean {\n    let containsData = false;\n    if (this._elementListeners.has(element)) containsData = true;\n    containsData =\n        (this._queue.find(entry => entry.element === element) ? true : false) || containsData;\n    return containsData;\n  }\n}\n\nexport interface QueuedTransition {\n  element: any;\n  instruction: AnimationTransitionInstruction;\n  player: TransitionAnimationPlayer;\n}\n\nexport class TransitionAnimationEngine {\n  public players: TransitionAnimationPlayer[] = [];\n  public newHostElements = new Map<any, AnimationTransitionNamespace>();\n  public playersByElement = new Map<any, TransitionAnimationPlayer[]>();\n  public playersByQueriedElement = new Map<any, TransitionAnimationPlayer[]>();\n  public statesByElement = new Map<any, {[triggerName: string]: StateValue}>();\n  public disabledNodes = new Set<any>();\n\n  public totalAnimations = 0;\n  public totalQueuedPlayers = 0;\n\n  private _namespaceLookup: {[id: string]: AnimationTransitionNamespace} = {};\n  private _namespaceList: AnimationTransitionNamespace[] = [];\n  private _flushFns: (() => any)[] = [];\n  private _whenQuietFns: (() => any)[] = [];\n\n  public namespacesByHostElement = new Map<any, AnimationTransitionNamespace>();\n  public collectedEnterElements: any[] = [];\n  public collectedLeaveElements: any[] = [];\n\n  // this method is designed to be overridden by the code that uses this engine\n  public onRemovalComplete = (element: any, context: any) => {};\n\n  /** @internal */\n  _onRemovalComplete(element: any, context: any) {\n    this.onRemovalComplete(element, context);\n  }\n\n  constructor(\n      public bodyNode: any, public driver: AnimationDriver,\n      private _normalizer: AnimationStyleNormalizer) {}\n\n  get queuedPlayers(): TransitionAnimationPlayer[] {\n    const players: TransitionAnimationPlayer[] = [];\n    this._namespaceList.forEach(ns => {\n      ns.players.forEach(player => {\n        if (player.queued) {\n          players.push(player);\n        }\n      });\n    });\n    return players;\n  }\n\n  createNamespace(namespaceId: string, hostElement: any) {\n    const ns = new AnimationTransitionNamespace(namespaceId, hostElement, this);\n    if (hostElement.parentNode) {\n      this._balanceNamespaceList(ns, hostElement);\n    } else {\n      // defer this later until flush during when the host element has\n      // been inserted so that we know exactly where to place it in\n      // the namespace list\n      this.newHostElements.set(hostElement, ns);\n\n      // given that this host element is apart of the animation code, it\n      // may or may not be inserted by a parent node that is an of an\n      // animation renderer type. If this happens then we can still have\n      // access to this item when we query for :enter nodes. If the parent\n      // is a renderer then the set data-structure will normalize the entry\n      this.collectEnterElement(hostElement);\n    }\n    return this._namespaceLookup[namespaceId] = ns;\n  }\n\n  private _balanceNamespaceList(ns: AnimationTransitionNamespace, hostElement: any) {\n    const limit = this._namespaceList.length - 1;\n    if (limit >= 0) {\n      let found = false;\n      for (let i = limit; i >= 0; i--) {\n        const nextNamespace = this._namespaceList[i];\n        if (this.driver.containsElement(nextNamespace.hostElement, hostElement)) {\n          this._namespaceList.splice(i + 1, 0, ns);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        this._namespaceList.splice(0, 0, ns);\n      }\n    } else {\n      this._namespaceList.push(ns);\n    }\n\n    this.namespacesByHostElement.set(hostElement, ns);\n    return ns;\n  }\n\n  register(namespaceId: string, hostElement: any) {\n    let ns = this._namespaceLookup[namespaceId];\n    if (!ns) {\n      ns = this.createNamespace(namespaceId, hostElement);\n    }\n    return ns;\n  }\n\n  registerTrigger(namespaceId: string, name: string, trigger: AnimationTrigger) {\n    let ns = this._namespaceLookup[namespaceId];\n    if (ns && ns.register(name, trigger)) {\n      this.totalAnimations++;\n    }\n  }\n\n  destroy(namespaceId: string, context: any) {\n    if (!namespaceId) return;\n\n    const ns = this._fetchNamespace(namespaceId);\n\n    this.afterFlush(() => {\n      this.namespacesByHostElement.delete(ns.hostElement);\n      delete this._namespaceLookup[namespaceId];\n      const index = this._namespaceList.indexOf(ns);\n      if (index >= 0) {\n        this._namespaceList.splice(index, 1);\n      }\n    });\n\n    this.afterFlushAnimationsDone(() => ns.destroy(context));\n  }\n\n  private _fetchNamespace(id: string) {\n    return this._namespaceLookup[id];\n  }\n\n  fetchNamespacesByElement(element: any): Set<AnimationTransitionNamespace> {\n    // normally there should only be one namespace per element, however\n    // if @triggers are placed on both the component element and then\n    // its host element (within the component code) then there will be\n    // two namespaces returned. We use a set here to simply the dedupe\n    // of namespaces incase there are multiple triggers both the elm and host\n    const namespaces = new Set<AnimationTransitionNamespace>();\n    const elementStates = this.statesByElement.get(element);\n    if (elementStates) {\n      const keys = Object.keys(elementStates);\n      for (let i = 0; i < keys.length; i++) {\n        const nsId = elementStates[keys[i]].namespaceId;\n        if (nsId) {\n          const ns = this._fetchNamespace(nsId);\n          if (ns) {\n            namespaces.add(ns);\n          }\n        }\n      }\n    }\n    return namespaces;\n  }\n\n  trigger(namespaceId: string, element: any, name: string, value: any): boolean {\n    if (isElementNode(element)) {\n      const ns = this._fetchNamespace(namespaceId);\n      if (ns) {\n        ns.trigger(element, name, value);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  insertNode(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {\n    if (!isElementNode(element)) return;\n\n    // special case for when an element is removed and reinserted (move operation)\n    // when this occurs we do not want to use the element for deletion later\n    const details = element[REMOVAL_FLAG] as ElementAnimationState;\n    if (details && details.setForRemoval) {\n      details.setForRemoval = false;\n      details.setForMove = true;\n      const index = this.collectedLeaveElements.indexOf(element);\n      if (index >= 0) {\n        this.collectedLeaveElements.splice(index, 1);\n      }\n    }\n\n    // in the event that the namespaceId is blank then the caller\n    // code does not contain any animation code in it, but it is\n    // just being called so that the node is marked as being inserted\n    if (namespaceId) {\n      const ns = this._fetchNamespace(namespaceId);\n      // This if-statement is a workaround for router issue #21947.\n      // The router sometimes hits a race condition where while a route\n      // is being instantiated a new navigation arrives, triggering leave\n      // animation of DOM that has not been fully initialized, until this\n      // is resolved, we need to handle the scenario when DOM is not in a\n      // consistent state during the animation.\n      if (ns) {\n        ns.insertNode(element, parent);\n      }\n    }\n\n    // only *directives and host elements are inserted before\n    if (insertBefore) {\n      this.collectEnterElement(element);\n    }\n  }\n\n  collectEnterElement(element: any) {\n    this.collectedEnterElements.push(element);\n  }\n\n  markElementAsDisabled(element: any, value: boolean) {\n    if (value) {\n      if (!this.disabledNodes.has(element)) {\n        this.disabledNodes.add(element);\n        addClass(element, DISABLED_CLASSNAME);\n      }\n    } else if (this.disabledNodes.has(element)) {\n      this.disabledNodes.delete(element);\n      removeClass(element, DISABLED_CLASSNAME);\n    }\n  }\n\n  removeNode(namespaceId: string, element: any, isHostElement: boolean, context: any): void {\n    if (isElementNode(element)) {\n      const ns = namespaceId ? this._fetchNamespace(namespaceId) : null;\n      if (ns) {\n        ns.removeNode(element, context);\n      } else {\n        this.markElementAsRemoved(namespaceId, element, false, context);\n      }\n\n      if (isHostElement) {\n        const hostNS = this.namespacesByHostElement.get(element);\n        if (hostNS && hostNS.id !== namespaceId) {\n          hostNS.removeNode(element, context);\n        }\n      }\n    } else {\n      this._onRemovalComplete(element, context);\n    }\n  }\n\n  markElementAsRemoved(namespaceId: string, element: any, hasAnimation?: boolean, context?: any) {\n    this.collectedLeaveElements.push(element);\n    element[REMOVAL_FLAG] =\n        {namespaceId, setForRemoval: context, hasAnimation, removedBeforeQueried: false};\n  }\n\n  listen(\n      namespaceId: string, element: any, name: string, phase: string,\n      callback: (event: any) => boolean): () => any {\n    if (isElementNode(element)) {\n      return this._fetchNamespace(namespaceId).listen(element, name, phase, callback);\n    }\n    return () => {};\n  }\n\n  private _buildInstruction(\n      entry: QueueInstruction, subTimelines: ElementInstructionMap, enterClassName: string,\n      leaveClassName: string, skipBuildAst?: boolean) {\n    return entry.transition.build(\n        this.driver, entry.element, entry.fromState.value, entry.toState.value, enterClassName,\n        leaveClassName, entry.fromState.options, entry.toState.options, subTimelines, skipBuildAst);\n  }\n\n  destroyInnerAnimations(containerElement: any) {\n    let elements = this.driver.query(containerElement, NG_TRIGGER_SELECTOR, true);\n    elements.forEach(element => this.destroyActiveAnimationsForElement(element));\n\n    if (this.playersByQueriedElement.size == 0) return;\n\n    elements = this.driver.query(containerElement, NG_ANIMATING_SELECTOR, true);\n    elements.forEach(element => this.finishActiveQueriedAnimationOnElement(element));\n  }\n\n  destroyActiveAnimationsForElement(element: any) {\n    const players = this.playersByElement.get(element);\n    if (players) {\n      players.forEach(player => {\n        // special case for when an element is set for destruction, but hasn't started.\n        // in this situation we want to delay the destruction until the flush occurs\n        // so that any event listeners attached to the player are triggered.\n        if (player.queued) {\n          player.markedForDestroy = true;\n        } else {\n          player.destroy();\n        }\n      });\n    }\n  }\n\n  finishActiveQueriedAnimationOnElement(element: any) {\n    const players = this.playersByQueriedElement.get(element);\n    if (players) {\n      players.forEach(player => player.finish());\n    }\n  }\n\n  whenRenderingDone(): Promise<any> {\n    return new Promise(resolve => {\n      if (this.players.length) {\n        return optimizeGroupPlayer(this.players).onDone(() => resolve());\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  processLeaveNode(element: any) {\n    const details = element[REMOVAL_FLAG] as ElementAnimationState;\n    if (details && details.setForRemoval) {\n      // this will prevent it from removing it twice\n      element[REMOVAL_FLAG] = NULL_REMOVAL_STATE;\n      if (details.namespaceId) {\n        this.destroyInnerAnimations(element);\n        const ns = this._fetchNamespace(details.namespaceId);\n        if (ns) {\n          ns.clearElementCache(element);\n        }\n      }\n      this._onRemovalComplete(element, details.setForRemoval);\n    }\n\n    if (this.driver.matchesElement(element, DISABLED_SELECTOR)) {\n      this.markElementAsDisabled(element, false);\n    }\n\n    this.driver.query(element, DISABLED_SELECTOR, true).forEach(node => {\n      this.markElementAsDisabled(node, false);\n    });\n  }\n\n  flush(microtaskId: number = -1) {\n    let players: AnimationPlayer[] = [];\n    if (this.newHostElements.size) {\n      this.newHostElements.forEach((ns, element) => this._balanceNamespaceList(ns, element));\n      this.newHostElements.clear();\n    }\n\n    if (this.totalAnimations && this.collectedEnterElements.length) {\n      for (let i = 0; i < this.collectedEnterElements.length; i++) {\n        const elm = this.collectedEnterElements[i];\n        addClass(elm, STAR_CLASSNAME);\n      }\n    }\n\n    if (this._namespaceList.length &&\n        (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {\n      const cleanupFns: Function[] = [];\n      try {\n        players = this._flushAnimations(cleanupFns, microtaskId);\n      } finally {\n        for (let i = 0; i < cleanupFns.length; i++) {\n          cleanupFns[i]();\n        }\n      }\n    } else {\n      for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n        const element = this.collectedLeaveElements[i];\n        this.processLeaveNode(element);\n      }\n    }\n\n    this.totalQueuedPlayers = 0;\n    this.collectedEnterElements.length = 0;\n    this.collectedLeaveElements.length = 0;\n    this._flushFns.forEach(fn => fn());\n    this._flushFns = [];\n\n    if (this._whenQuietFns.length) {\n      // we move these over to a variable so that\n      // if any new callbacks are registered in another\n      // flush they do not populate the existing set\n      const quietFns = this._whenQuietFns;\n      this._whenQuietFns = [];\n\n      if (players.length) {\n        optimizeGroupPlayer(players).onDone(() => {\n          quietFns.forEach(fn => fn());\n        });\n      } else {\n        quietFns.forEach(fn => fn());\n      }\n    }\n  }\n\n  reportError(errors: string[]) {\n    throw new Error(\n        `Unable to process animations due to the following failed trigger transitions\\n ${\n            errors.join('\\n')}`);\n  }\n\n  private _flushAnimations(cleanupFns: Function[], microtaskId: number):\n      TransitionAnimationPlayer[] {\n    const subTimelines = new ElementInstructionMap();\n    const skippedPlayers: TransitionAnimationPlayer[] = [];\n    const skippedPlayersMap = new Map<any, AnimationPlayer[]>();\n    const queuedInstructions: QueuedTransition[] = [];\n    const queriedElements = new Map<any, TransitionAnimationPlayer[]>();\n    const allPreStyleElements = new Map<any, Set<string>>();\n    const allPostStyleElements = new Map<any, Set<string>>();\n\n    const disabledElementsSet = new Set<any>();\n    this.disabledNodes.forEach(node => {\n      disabledElementsSet.add(node);\n      const nodesThatAreDisabled = this.driver.query(node, QUEUED_SELECTOR, true);\n      for (let i = 0; i < nodesThatAreDisabled.length; i++) {\n        disabledElementsSet.add(nodesThatAreDisabled[i]);\n      }\n    });\n\n    const bodyNode = this.bodyNode;\n    const allTriggerElements = Array.from(this.statesByElement.keys());\n    const enterNodeMap = buildRootMap(allTriggerElements, this.collectedEnterElements);\n\n    // this must occur before the instructions are built below such that\n    // the :enter queries match the elements (since the timeline queries\n    // are fired during instruction building).\n    const enterNodeMapIds = new Map<any, string>();\n    let i = 0;\n    enterNodeMap.forEach((nodes, root) => {\n      const className = ENTER_CLASSNAME + i++;\n      enterNodeMapIds.set(root, className);\n      nodes.forEach(node => addClass(node, className));\n    });\n\n    const allLeaveNodes: any[] = [];\n    const mergedLeaveNodes = new Set<any>();\n    const leaveNodesWithoutAnimations = new Set<any>();\n    for (let i = 0; i < this.collectedLeaveElements.length; i++) {\n      const element = this.collectedLeaveElements[i];\n      const details = element[REMOVAL_FLAG] as ElementAnimationState;\n      if (details && details.setForRemoval) {\n        allLeaveNodes.push(element);\n        mergedLeaveNodes.add(element);\n        if (details.hasAnimation) {\n          this.driver.query(element, STAR_SELECTOR, true).forEach(elm => mergedLeaveNodes.add(elm));\n        } else {\n          leaveNodesWithoutAnimations.add(element);\n        }\n      }\n    }\n\n    const leaveNodeMapIds = new Map<any, string>();\n    const leaveNodeMap = buildRootMap(allTriggerElements, Array.from(mergedLeaveNodes));\n    leaveNodeMap.forEach((nodes, root) => {\n      const className = LEAVE_CLASSNAME + i++;\n      leaveNodeMapIds.set(root, className);\n      nodes.forEach(node => addClass(node, className));\n    });\n\n    cleanupFns.push(() => {\n      enterNodeMap.forEach((nodes, root) => {\n        const className = enterNodeMapIds.get(root)!;\n        nodes.forEach(node => removeClass(node, className));\n      });\n\n      leaveNodeMap.forEach((nodes, root) => {\n        const className = leaveNodeMapIds.get(root)!;\n        nodes.forEach(node => removeClass(node, className));\n      });\n\n      allLeaveNodes.forEach(element => {\n        this.processLeaveNode(element);\n      });\n    });\n\n    const allPlayers: TransitionAnimationPlayer[] = [];\n    const erroneousTransitions: AnimationTransitionInstruction[] = [];\n    for (let i = this._namespaceList.length - 1; i >= 0; i--) {\n      const ns = this._namespaceList[i];\n      ns.drainQueuedTransitions(microtaskId).forEach(entry => {\n        const player = entry.player;\n        const element = entry.element;\n        allPlayers.push(player);\n\n        if (this.collectedEnterElements.length) {\n          const details = element[REMOVAL_FLAG] as ElementAnimationState;\n          // move animations are currently not supported...\n          if (details && details.setForMove) {\n            player.destroy();\n            return;\n          }\n        }\n\n        const nodeIsOrphaned = !bodyNode || !this.driver.containsElement(bodyNode, element);\n        const leaveClassName = leaveNodeMapIds.get(element)!;\n        const enterClassName = enterNodeMapIds.get(element)!;\n        const instruction = this._buildInstruction(\n            entry, subTimelines, enterClassName, leaveClassName, nodeIsOrphaned)!;\n        if (instruction.errors && instruction.errors.length) {\n          erroneousTransitions.push(instruction);\n          return;\n        }\n\n        // even though the element may not be apart of the DOM, it may\n        // still be added at a later point (due to the mechanics of content\n        // projection and/or dynamic component insertion) therefore it's\n        // important we still style the element.\n        if (nodeIsOrphaned) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        }\n\n        // if a unmatched transition is queued to go then it SHOULD NOT render\n        // an animation and cancel the previously running animations.\n        if (entry.isFallbackTransition) {\n          player.onStart(() => eraseStyles(element, instruction.fromStyles));\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          skippedPlayers.push(player);\n          return;\n        }\n\n        // this means that if a parent animation uses this animation as a sub trigger\n        // then it will instruct the timeline builder to not add a player delay, but\n        // instead stretch the first keyframe gap up until the animation starts. The\n        // reason this is important is to prevent extra initialization styles from being\n        // required by the user in the animation.\n        instruction.timelines.forEach(tl => tl.stretchStartingKeyframe = true);\n\n        subTimelines.append(element, instruction.timelines);\n\n        const tuple = {instruction, player, element};\n\n        queuedInstructions.push(tuple);\n\n        instruction.queriedElements.forEach(\n            element => getOrSetAsInMap(queriedElements, element, []).push(player));\n\n        instruction.preStyleProps.forEach((stringMap, element) => {\n          const props = Object.keys(stringMap);\n          if (props.length) {\n            let setVal: Set<string> = allPreStyleElements.get(element)!;\n            if (!setVal) {\n              allPreStyleElements.set(element, setVal = new Set<string>());\n            }\n            props.forEach(prop => setVal.add(prop));\n          }\n        });\n\n        instruction.postStyleProps.forEach((stringMap, element) => {\n          const props = Object.keys(stringMap);\n          let setVal: Set<string> = allPostStyleElements.get(element)!;\n          if (!setVal) {\n            allPostStyleElements.set(element, setVal = new Set<string>());\n          }\n          props.forEach(prop => setVal.add(prop));\n        });\n      });\n    }\n\n    if (erroneousTransitions.length) {\n      const errors: string[] = [];\n      erroneousTransitions.forEach(instruction => {\n        errors.push(`@${instruction.triggerName} has failed due to:\\n`);\n        instruction.errors!.forEach(error => errors.push(`- ${error}\\n`));\n      });\n\n      allPlayers.forEach(player => player.destroy());\n      this.reportError(errors);\n    }\n\n    const allPreviousPlayersMap = new Map<any, TransitionAnimationPlayer[]>();\n    // this map works to tell which element in the DOM tree is contained by\n    // which animation. Further down below this map will get populated once\n    // the players are built and in doing so it can efficiently figure out\n    // if a sub player is skipped due to a parent player having priority.\n    const animationElementMap = new Map<any, any>();\n    queuedInstructions.forEach(entry => {\n      const element = entry.element;\n      if (subTimelines.has(element)) {\n        animationElementMap.set(element, element);\n        this._beforeAnimationBuild(\n            entry.player.namespaceId, entry.instruction, allPreviousPlayersMap);\n      }\n    });\n\n    skippedPlayers.forEach(player => {\n      const element = player.element;\n      const previousPlayers =\n          this._getPreviousPlayers(element, false, player.namespaceId, player.triggerName, null);\n      previousPlayers.forEach(prevPlayer => {\n        getOrSetAsInMap(allPreviousPlayersMap, element, []).push(prevPlayer);\n        prevPlayer.destroy();\n      });\n    });\n\n    // this is a special case for nodes that will be removed (either by)\n    // having their own leave animations or by being queried in a container\n    // that will be removed once a parent animation is complete. The idea\n    // here is that * styles must be identical to ! styles because of\n    // backwards compatibility (* is also filled in by default in many places).\n    // Otherwise * styles will return an empty value or auto since the element\n    // that is being getComputedStyle'd will not be visible (since * = destination)\n    const replaceNodes = allLeaveNodes.filter(node => {\n      return replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements);\n    });\n\n    // POST STAGE: fill the * styles\n    const postStylesMap = new Map<any, ɵStyleData>();\n    const allLeaveQueriedNodes = cloakAndComputeStyles(\n        postStylesMap, this.driver, leaveNodesWithoutAnimations, allPostStyleElements, AUTO_STYLE);\n\n    allLeaveQueriedNodes.forEach(node => {\n      if (replacePostStylesAsPre(node, allPreStyleElements, allPostStyleElements)) {\n        replaceNodes.push(node);\n      }\n    });\n\n    // PRE STAGE: fill the ! styles\n    const preStylesMap = new Map<any, ɵStyleData>();\n    enterNodeMap.forEach((nodes, root) => {\n      cloakAndComputeStyles(\n          preStylesMap, this.driver, new Set(nodes), allPreStyleElements, PRE_STYLE);\n    });\n\n    replaceNodes.forEach(node => {\n      const post = postStylesMap.get(node);\n      const pre = preStylesMap.get(node);\n      postStylesMap.set(node, {...post, ...pre} as any);\n    });\n\n    const rootPlayers: TransitionAnimationPlayer[] = [];\n    const subPlayers: TransitionAnimationPlayer[] = [];\n    const NO_PARENT_ANIMATION_ELEMENT_DETECTED = {};\n    queuedInstructions.forEach(entry => {\n      const {element, player, instruction} = entry;\n      // this means that it was never consumed by a parent animation which\n      // means that it is independent and therefore should be set for animation\n      if (subTimelines.has(element)) {\n        if (disabledElementsSet.has(element)) {\n          player.onDestroy(() => setStyles(element, instruction.toStyles));\n          player.disabled = true;\n          player.overrideTotalTime(instruction.totalTime);\n          skippedPlayers.push(player);\n          return;\n        }\n\n        // this will flow up the DOM and query the map to figure out\n        // if a parent animation has priority over it. In the situation\n        // that a parent is detected then it will cancel the loop. If\n        // nothing is detected, or it takes a few hops to find a parent,\n        // then it will fill in the missing nodes and signal them as having\n        // a detected parent (or a NO_PARENT value via a special constant).\n        let parentWithAnimation: any = NO_PARENT_ANIMATION_ELEMENT_DETECTED;\n        if (animationElementMap.size > 1) {\n          let elm = element;\n          const parentsToAdd: any[] = [];\n          while (elm = elm.parentNode) {\n            const detectedParent = animationElementMap.get(elm);\n            if (detectedParent) {\n              parentWithAnimation = detectedParent;\n              break;\n            }\n            parentsToAdd.push(elm);\n          }\n          parentsToAdd.forEach(parent => animationElementMap.set(parent, parentWithAnimation));\n        }\n\n        const innerPlayer = this._buildAnimation(\n            player.namespaceId, instruction, allPreviousPlayersMap, skippedPlayersMap, preStylesMap,\n            postStylesMap);\n\n        player.setRealPlayer(innerPlayer);\n\n        if (parentWithAnimation === NO_PARENT_ANIMATION_ELEMENT_DETECTED) {\n          rootPlayers.push(player);\n        } else {\n          const parentPlayers = this.playersByElement.get(parentWithAnimation);\n          if (parentPlayers && parentPlayers.length) {\n            player.parentPlayer = optimizeGroupPlayer(parentPlayers);\n          }\n          skippedPlayers.push(player);\n        }\n      } else {\n        eraseStyles(element, instruction.fromStyles);\n        player.onDestroy(() => setStyles(element, instruction.toStyles));\n        // there still might be a ancestor player animating this\n        // element therefore we will still add it as a sub player\n        // even if its animation may be disabled\n        subPlayers.push(player);\n        if (disabledElementsSet.has(element)) {\n          skippedPlayers.push(player);\n        }\n      }\n    });\n\n    // find all of the sub players' corresponding inner animation player\n    subPlayers.forEach(player => {\n      // even if any players are not found for a sub animation then it\n      // will still complete itself after the next tick since it's Noop\n      const playersForElement = skippedPlayersMap.get(player.element);\n      if (playersForElement && playersForElement.length) {\n        const innerPlayer = optimizeGroupPlayer(playersForElement);\n        player.setRealPlayer(innerPlayer);\n      }\n    });\n\n    // the reason why we don't actually play the animation is\n    // because all that a skipped player is designed to do is to\n    // fire the start/done transition callback events\n    skippedPlayers.forEach(player => {\n      if (player.parentPlayer) {\n        player.syncPlayerEvents(player.parentPlayer);\n      } else {\n        player.destroy();\n      }\n    });\n\n    // run through all of the queued removals and see if they\n    // were picked up by a query. If not then perform the removal\n    // operation right away unless a parent animation is ongoing.\n    for (let i = 0; i < allLeaveNodes.length; i++) {\n      const element = allLeaveNodes[i];\n      const details = element[REMOVAL_FLAG] as ElementAnimationState;\n      removeClass(element, LEAVE_CLASSNAME);\n\n      // this means the element has a removal animation that is being\n      // taken care of and therefore the inner elements will hang around\n      // until that animation is over (or the parent queried animation)\n      if (details && details.hasAnimation) continue;\n\n      let players: TransitionAnimationPlayer[] = [];\n\n      // if this element is queried or if it contains queried children\n      // then we want for the element not to be removed from the page\n      // until the queried animations have finished\n      if (queriedElements.size) {\n        let queriedPlayerResults = queriedElements.get(element);\n        if (queriedPlayerResults && queriedPlayerResults.length) {\n          players.push(...queriedPlayerResults);\n        }\n\n        let queriedInnerElements = this.driver.query(element, NG_ANIMATING_SELECTOR, true);\n        for (let j = 0; j < queriedInnerElements.length; j++) {\n          let queriedPlayers = queriedElements.get(queriedInnerElements[j]);\n          if (queriedPlayers && queriedPlayers.length) {\n            players.push(...queriedPlayers);\n          }\n        }\n      }\n\n      const activePlayers = players.filter(p => !p.destroyed);\n      if (activePlayers.length) {\n        removeNodesAfterAnimationDone(this, element, activePlayers);\n      } else {\n        this.processLeaveNode(element);\n      }\n    }\n\n    // this is required so the cleanup method doesn't remove them\n    allLeaveNodes.length = 0;\n\n    rootPlayers.forEach(player => {\n      this.players.push(player);\n      player.onDone(() => {\n        player.destroy();\n\n        const index = this.players.indexOf(player);\n        this.players.splice(index, 1);\n      });\n      player.play();\n    });\n\n    return rootPlayers;\n  }\n\n  elementContainsData(namespaceId: string, element: any) {\n    let containsData = false;\n    const details = element[REMOVAL_FLAG] as ElementAnimationState;\n    if (details && details.setForRemoval) containsData = true;\n    if (this.playersByElement.has(element)) containsData = true;\n    if (this.playersByQueriedElement.has(element)) containsData = true;\n    if (this.statesByElement.has(element)) containsData = true;\n    return this._fetchNamespace(namespaceId).elementContainsData(element) || containsData;\n  }\n\n  afterFlush(callback: () => any) {\n    this._flushFns.push(callback);\n  }\n\n  afterFlushAnimationsDone(callback: () => any) {\n    this._whenQuietFns.push(callback);\n  }\n\n  private _getPreviousPlayers(\n      element: string, isQueriedElement: boolean, namespaceId?: string, triggerName?: string,\n      toStateValue?: any): TransitionAnimationPlayer[] {\n    let players: TransitionAnimationPlayer[] = [];\n    if (isQueriedElement) {\n      const queriedElementPlayers = this.playersByQueriedElement.get(element);\n      if (queriedElementPlayers) {\n        players = queriedElementPlayers;\n      }\n    } else {\n      const elementPlayers = this.playersByElement.get(element);\n      if (elementPlayers) {\n        const isRemovalAnimation = !toStateValue || toStateValue == VOID_VALUE;\n        elementPlayers.forEach(player => {\n          if (player.queued) return;\n          if (!isRemovalAnimation && player.triggerName != triggerName) return;\n          players.push(player);\n        });\n      }\n    }\n    if (namespaceId || triggerName) {\n      players = players.filter(player => {\n        if (namespaceId && namespaceId != player.namespaceId) return false;\n        if (triggerName && triggerName != player.triggerName) return false;\n        return true;\n      });\n    }\n    return players;\n  }\n\n  private _beforeAnimationBuild(\n      namespaceId: string, instruction: AnimationTransitionInstruction,\n      allPreviousPlayersMap: Map<any, TransitionAnimationPlayer[]>) {\n    const triggerName = instruction.triggerName;\n    const rootElement = instruction.element;\n\n    // when a removal animation occurs, ALL previous players are collected\n    // and destroyed (even if they are outside of the current namespace)\n    const targetNameSpaceId: string|undefined =\n        instruction.isRemovalTransition ? undefined : namespaceId;\n    const targetTriggerName: string|undefined =\n        instruction.isRemovalTransition ? undefined : triggerName;\n\n    for (const timelineInstruction of instruction.timelines) {\n      const element = timelineInstruction.element;\n      const isQueriedElement = element !== rootElement;\n      const players = getOrSetAsInMap(allPreviousPlayersMap, element, []);\n      const previousPlayers = this._getPreviousPlayers(\n          element, isQueriedElement, targetNameSpaceId, targetTriggerName, instruction.toState);\n      previousPlayers.forEach(player => {\n        const realPlayer = (player as TransitionAnimationPlayer).getRealPlayer() as any;\n        if (realPlayer.beforeDestroy) {\n          realPlayer.beforeDestroy();\n        }\n        player.destroy();\n        players.push(player);\n      });\n    }\n\n    // this needs to be done so that the PRE/POST styles can be\n    // computed properly without interfering with the previous animation\n    eraseStyles(rootElement, instruction.fromStyles);\n  }\n\n  private _buildAnimation(\n      namespaceId: string, instruction: AnimationTransitionInstruction,\n      allPreviousPlayersMap: Map<any, TransitionAnimationPlayer[]>,\n      skippedPlayersMap: Map<any, AnimationPlayer[]>, preStylesMap: Map<any, ɵStyleData>,\n      postStylesMap: Map<any, ɵStyleData>): AnimationPlayer {\n    const triggerName = instruction.triggerName;\n    const rootElement = instruction.element;\n\n    // we first run this so that the previous animation player\n    // data can be passed into the successive animation players\n    const allQueriedPlayers: TransitionAnimationPlayer[] = [];\n    const allConsumedElements = new Set<any>();\n    const allSubElements = new Set<any>();\n    const allNewPlayers = instruction.timelines.map(timelineInstruction => {\n      const element = timelineInstruction.element;\n      allConsumedElements.add(element);\n\n      // FIXME (matsko): make sure to-be-removed animations are removed properly\n      const details = element[REMOVAL_FLAG];\n      if (details && details.removedBeforeQueried)\n        return new NoopAnimationPlayer(timelineInstruction.duration, timelineInstruction.delay);\n\n      const isQueriedElement = element !== rootElement;\n      const previousPlayers =\n          flattenGroupPlayers((allPreviousPlayersMap.get(element) || EMPTY_PLAYER_ARRAY)\n                                  .map(p => p.getRealPlayer()))\n              .filter(p => {\n                // the `element` is not apart of the AnimationPlayer definition, but\n                // Mock/WebAnimations\n                // use the element within their implementation. This will be added in Angular5 to\n                // AnimationPlayer\n                const pp = p as any;\n                return pp.element ? pp.element === element : false;\n              });\n\n      const preStyles = preStylesMap.get(element);\n      const postStyles = postStylesMap.get(element);\n      const keyframes = normalizeKeyframes(\n          this.driver, this._normalizer, element, timelineInstruction.keyframes, preStyles,\n          postStyles);\n      const player = this._buildPlayer(timelineInstruction, keyframes, previousPlayers);\n\n      // this means that this particular player belongs to a sub trigger. It is\n      // important that we match this player up with the corresponding (@trigger.listener)\n      if (timelineInstruction.subTimeline && skippedPlayersMap) {\n        allSubElements.add(element);\n      }\n\n      if (isQueriedElement) {\n        const wrappedPlayer = new TransitionAnimationPlayer(namespaceId, triggerName, element);\n        wrappedPlayer.setRealPlayer(player);\n        allQueriedPlayers.push(wrappedPlayer);\n      }\n\n      return player;\n    });\n\n    allQueriedPlayers.forEach(player => {\n      getOrSetAsInMap(this.playersByQueriedElement, player.element, []).push(player);\n      player.onDone(() => deleteOrUnsetInMap(this.playersByQueriedElement, player.element, player));\n    });\n\n    allConsumedElements.forEach(element => addClass(element, NG_ANIMATING_CLASSNAME));\n    const player = optimizeGroupPlayer(allNewPlayers);\n    player.onDestroy(() => {\n      allConsumedElements.forEach(element => removeClass(element, NG_ANIMATING_CLASSNAME));\n      setStyles(rootElement, instruction.toStyles);\n    });\n\n    // this basically makes all of the callbacks for sub element animations\n    // be dependent on the upper players for when they finish\n    allSubElements.forEach(element => {\n      getOrSetAsInMap(skippedPlayersMap, element, []).push(player);\n    });\n\n    return player;\n  }\n\n  private _buildPlayer(\n      instruction: AnimationTimelineInstruction, keyframes: ɵStyleData[],\n      previousPlayers: AnimationPlayer[]): AnimationPlayer {\n    if (keyframes.length > 0) {\n      return this.driver.animate(\n          instruction.element, keyframes, instruction.duration, instruction.delay,\n          instruction.easing, previousPlayers);\n    }\n\n    // special case for when an empty transition|definition is provided\n    // ... there is no point in rendering an empty animation\n    return new NoopAnimationPlayer(instruction.duration, instruction.delay);\n  }\n}\n\nexport class TransitionAnimationPlayer implements AnimationPlayer {\n  private _player: AnimationPlayer = new NoopAnimationPlayer();\n  private _containsRealPlayer = false;\n\n  private _queuedCallbacks: {[name: string]: (() => any)[]} = {};\n  public readonly destroyed = false;\n  // TODO(issue/24571): remove '!'.\n  public parentPlayer!: AnimationPlayer;\n\n  public markedForDestroy: boolean = false;\n  public disabled = false;\n\n  readonly queued: boolean = true;\n  public readonly totalTime: number = 0;\n\n  constructor(public namespaceId: string, public triggerName: string, public element: any) {}\n\n  setRealPlayer(player: AnimationPlayer) {\n    if (this._containsRealPlayer) return;\n\n    this._player = player;\n    Object.keys(this._queuedCallbacks).forEach(phase => {\n      this._queuedCallbacks[phase].forEach(\n          callback => listenOnPlayer(player, phase, undefined, callback));\n    });\n    this._queuedCallbacks = {};\n    this._containsRealPlayer = true;\n    this.overrideTotalTime(player.totalTime);\n    (this as {queued: boolean}).queued = false;\n  }\n\n  getRealPlayer() {\n    return this._player;\n  }\n\n  overrideTotalTime(totalTime: number) {\n    (this as any).totalTime = totalTime;\n  }\n\n  syncPlayerEvents(player: AnimationPlayer) {\n    const p = this._player as any;\n    if (p.triggerCallback) {\n      player.onStart(() => p.triggerCallback!('start'));\n    }\n    player.onDone(() => this.finish());\n    player.onDestroy(() => this.destroy());\n  }\n\n  private _queueEvent(name: string, callback: (event: any) => any): void {\n    getOrSetAsInMap(this._queuedCallbacks, name, []).push(callback);\n  }\n\n  onDone(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('done', fn);\n    }\n    this._player.onDone(fn);\n  }\n\n  onStart(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('start', fn);\n    }\n    this._player.onStart(fn);\n  }\n\n  onDestroy(fn: () => void): void {\n    if (this.queued) {\n      this._queueEvent('destroy', fn);\n    }\n    this._player.onDestroy(fn);\n  }\n\n  init(): void {\n    this._player.init();\n  }\n\n  hasStarted(): boolean {\n    return this.queued ? false : this._player.hasStarted();\n  }\n\n  play(): void {\n    !this.queued && this._player.play();\n  }\n\n  pause(): void {\n    !this.queued && this._player.pause();\n  }\n\n  restart(): void {\n    !this.queued && this._player.restart();\n  }\n\n  finish(): void {\n    this._player.finish();\n  }\n\n  destroy(): void {\n    (this as {destroyed: boolean}).destroyed = true;\n    this._player.destroy();\n  }\n\n  reset(): void {\n    !this.queued && this._player.reset();\n  }\n\n  setPosition(p: any): void {\n    if (!this.queued) {\n      this._player.setPosition(p);\n    }\n  }\n\n  getPosition(): number {\n    return this.queued ? 0 : this._player.getPosition();\n  }\n\n  /** @internal */\n  triggerCallback(phaseName: string): void {\n    const p = this._player as any;\n    if (p.triggerCallback) {\n      p.triggerCallback(phaseName);\n    }\n  }\n}\n\nfunction deleteOrUnsetInMap(map: Map<any, any[]>|{[key: string]: any}, key: any, value: any) {\n  let currentValues: any[]|null|undefined;\n  if (map instanceof Map) {\n    currentValues = map.get(key);\n    if (currentValues) {\n      if (currentValues.length) {\n        const index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n      if (currentValues.length == 0) {\n        map.delete(key);\n      }\n    }\n  } else {\n    currentValues = map[key];\n    if (currentValues) {\n      if (currentValues.length) {\n        const index = currentValues.indexOf(value);\n        currentValues.splice(index, 1);\n      }\n      if (currentValues.length == 0) {\n        delete map[key];\n      }\n    }\n  }\n  return currentValues;\n}\n\nfunction normalizeTriggerValue(value: any): any {\n  // we use `!= null` here because it's the most simple\n  // way to test against a \"falsy\" value without mixing\n  // in empty strings or a zero value. DO NOT OPTIMIZE.\n  return value != null ? value : null;\n}\n\nfunction isElementNode(node: any) {\n  return node && node['nodeType'] === 1;\n}\n\nfunction isTriggerEventValid(eventName: string): boolean {\n  return eventName == 'start' || eventName == 'done';\n}\n\nfunction cloakElement(element: any, value?: string) {\n  const oldValue = element.style.display;\n  element.style.display = value != null ? value : 'none';\n  return oldValue;\n}\n\nfunction cloakAndComputeStyles(\n    valuesMap: Map<any, ɵStyleData>, driver: AnimationDriver, elements: Set<any>,\n    elementPropsMap: Map<any, Set<string>>, defaultStyle: string): any[] {\n  const cloakVals: string[] = [];\n  elements.forEach(element => cloakVals.push(cloakElement(element)));\n\n  const failedElements: any[] = [];\n\n  elementPropsMap.forEach((props: Set<string>, element: any) => {\n    const styles: ɵStyleData = {};\n    props.forEach(prop => {\n      const value = styles[prop] = driver.computeStyle(element, prop, defaultStyle);\n\n      // there is no easy way to detect this because a sub element could be removed\n      // by a parent animation element being detached.\n      if (!value || value.length == 0) {\n        element[REMOVAL_FLAG] = NULL_REMOVED_QUERIED_STATE;\n        failedElements.push(element);\n      }\n    });\n    valuesMap.set(element, styles);\n  });\n\n  // we use a index variable here since Set.forEach(a, i) does not return\n  // an index value for the closure (but instead just the value)\n  let i = 0;\n  elements.forEach(element => cloakElement(element, cloakVals[i++]));\n\n  return failedElements;\n}\n\n/*\nSince the Angular renderer code will return a collection of inserted\nnodes in all areas of a DOM tree, it's up to this algorithm to figure\nout which nodes are roots for each animation @trigger.\n\nBy placing each inserted node into a Set and traversing upwards, it\nis possible to find the @trigger elements and well any direct *star\ninsertion nodes, if a @trigger root is found then the enter element\nis placed into the Map[@trigger] spot.\n */\nfunction buildRootMap(roots: any[], nodes: any[]): Map<any, any[]> {\n  const rootMap = new Map<any, any[]>();\n  roots.forEach(root => rootMap.set(root, []));\n\n  if (nodes.length == 0) return rootMap;\n\n  const NULL_NODE = 1;\n  const nodeSet = new Set(nodes);\n  const localRootMap = new Map<any, any>();\n\n  function getRoot(node: any): any {\n    if (!node) return NULL_NODE;\n\n    let root = localRootMap.get(node);\n    if (root) return root;\n\n    const parent = node.parentNode;\n    if (rootMap.has(parent)) {  // ngIf inside @trigger\n      root = parent;\n    } else if (nodeSet.has(parent)) {  // ngIf inside ngIf\n      root = NULL_NODE;\n    } else {  // recurse upwards\n      root = getRoot(parent);\n    }\n\n    localRootMap.set(node, root);\n    return root;\n  }\n\n  nodes.forEach(node => {\n    const root = getRoot(node);\n    if (root !== NULL_NODE) {\n      rootMap.get(root)!.push(node);\n    }\n  });\n\n  return rootMap;\n}\n\nconst CLASSES_CACHE_KEY = '$$classes';\nfunction containsClass(element: any, className: string): boolean {\n  if (element.classList) {\n    return element.classList.contains(className);\n  } else {\n    const classes = element[CLASSES_CACHE_KEY];\n    return classes && classes[className];\n  }\n}\n\nfunction addClass(element: any, className: string) {\n  if (element.classList) {\n    element.classList.add(className);\n  } else {\n    let classes: {[className: string]: boolean} = element[CLASSES_CACHE_KEY];\n    if (!classes) {\n      classes = element[CLASSES_CACHE_KEY] = {};\n    }\n    classes[className] = true;\n  }\n}\n\nfunction removeClass(element: any, className: string) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else {\n    let classes: {[className: string]: boolean} = element[CLASSES_CACHE_KEY];\n    if (classes) {\n      delete classes[className];\n    }\n  }\n}\n\nfunction removeNodesAfterAnimationDone(\n    engine: TransitionAnimationEngine, element: any, players: AnimationPlayer[]) {\n  optimizeGroupPlayer(players).onDone(() => engine.processLeaveNode(element));\n}\n\nfunction flattenGroupPlayers(players: AnimationPlayer[]): AnimationPlayer[] {\n  const finalPlayers: AnimationPlayer[] = [];\n  _flattenGroupPlayersRecur(players, finalPlayers);\n  return finalPlayers;\n}\n\nfunction _flattenGroupPlayersRecur(players: AnimationPlayer[], finalPlayers: AnimationPlayer[]) {\n  for (let i = 0; i < players.length; i++) {\n    const player = players[i];\n    if (player instanceof AnimationGroupPlayer) {\n      _flattenGroupPlayersRecur(player.players, finalPlayers);\n    } else {\n      finalPlayers.push(player);\n    }\n  }\n}\n\nfunction objEquals(a: {[key: string]: any}, b: {[key: string]: any}): boolean {\n  const k1 = Object.keys(a);\n  const k2 = Object.keys(b);\n  if (k1.length != k2.length) return false;\n  for (let i = 0; i < k1.length; i++) {\n    const prop = k1[i];\n    if (!b.hasOwnProperty(prop) || a[prop] !== b[prop]) return false;\n  }\n  return true;\n}\n\nfunction replacePostStylesAsPre(\n    element: any, allPreStyleElements: Map<any, Set<string>>,\n    allPostStyleElements: Map<any, Set<string>>): boolean {\n  const postEntry = allPostStyleElements.get(element);\n  if (!postEntry) return false;\n\n  let preEntry = allPreStyleElements.get(element);\n  if (preEntry) {\n    postEntry.forEach(data => preEntry!.add(data));\n  } else {\n    allPreStyleElements.set(element, postEntry);\n  }\n\n  allPostStyleElements.delete(element);\n  return true;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationMetadata, AnimationPlayer, AnimationTriggerMetadata} from '@angular/animations';\nimport {TriggerAst} from '../dsl/animation_ast';\nimport {buildAnimationAst} from '../dsl/animation_ast_builder';\nimport {AnimationTrigger, buildTrigger} from '../dsl/animation_trigger';\nimport {AnimationStyleNormalizer} from '../dsl/style_normalization/animation_style_normalizer';\n\nimport {AnimationDriver} from './animation_driver';\nimport {parseTimelineCommand} from './shared';\nimport {TimelineAnimationEngine} from './timeline_animation_engine';\nimport {TransitionAnimationEngine} from './transition_animation_engine';\n\nexport class AnimationEngine {\n  private _transitionEngine: TransitionAnimationEngine;\n  private _timelineEngine: TimelineAnimationEngine;\n\n  private _triggerCache: {[key: string]: AnimationTrigger} = {};\n\n  // this method is designed to be overridden by the code that uses this engine\n  public onRemovalComplete = (element: any, context: any) => {};\n\n  constructor(\n      private bodyNode: any, private _driver: AnimationDriver,\n      normalizer: AnimationStyleNormalizer) {\n    this._transitionEngine = new TransitionAnimationEngine(bodyNode, _driver, normalizer);\n    this._timelineEngine = new TimelineAnimationEngine(bodyNode, _driver, normalizer);\n\n    this._transitionEngine.onRemovalComplete = (element: any, context: any) =>\n        this.onRemovalComplete(element, context);\n  }\n\n  registerTrigger(\n      componentId: string, namespaceId: string, hostElement: any, name: string,\n      metadata: AnimationTriggerMetadata): void {\n    const cacheKey = componentId + '-' + name;\n    let trigger = this._triggerCache[cacheKey];\n    if (!trigger) {\n      const errors: any[] = [];\n      const ast =\n          buildAnimationAst(this._driver, metadata as AnimationMetadata, errors) as TriggerAst;\n      if (errors.length) {\n        throw new Error(`The animation trigger \"${\n            name}\" has failed to build due to the following errors:\\n - ${errors.join('\\n - ')}`);\n      }\n      trigger = buildTrigger(name, ast);\n      this._triggerCache[cacheKey] = trigger;\n    }\n    this._transitionEngine.registerTrigger(namespaceId, name, trigger);\n  }\n\n  register(namespaceId: string, hostElement: any) {\n    this._transitionEngine.register(namespaceId, hostElement);\n  }\n\n  destroy(namespaceId: string, context: any) {\n    this._transitionEngine.destroy(namespaceId, context);\n  }\n\n  onInsert(namespaceId: string, element: any, parent: any, insertBefore: boolean): void {\n    this._transitionEngine.insertNode(namespaceId, element, parent, insertBefore);\n  }\n\n  onRemove(namespaceId: string, element: any, context: any, isHostElement?: boolean): void {\n    this._transitionEngine.removeNode(namespaceId, element, isHostElement || false, context);\n  }\n\n  disableAnimations(element: any, disable: boolean) {\n    this._transitionEngine.markElementAsDisabled(element, disable);\n  }\n\n  process(namespaceId: string, element: any, property: string, value: any) {\n    if (property.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(property);\n      const args = value as any[];\n      this._timelineEngine.command(id, element, action, args);\n    } else {\n      this._transitionEngine.trigger(namespaceId, element, property, value);\n    }\n  }\n\n  listen(\n      namespaceId: string, element: any, eventName: string, eventPhase: string,\n      callback: (event: any) => any): () => any {\n    // @@listen\n    if (eventName.charAt(0) == '@') {\n      const [id, action] = parseTimelineCommand(eventName);\n      return this._timelineEngine.listen(id, element, action, callback);\n    }\n    return this._transitionEngine.listen(namespaceId, element, eventName, eventPhase, callback);\n  }\n\n  flush(microtaskId: number = -1): void {\n    this._transitionEngine.flush(microtaskId);\n  }\n\n  get players(): AnimationPlayer[] {\n    return (this._transitionEngine.players as AnimationPlayer[])\n        .concat(this._timelineEngine.players as AnimationPlayer[]);\n  }\n\n  whenRenderingDone(): Promise<any> {\n    return this._transitionEngine.whenRenderingDone();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {eraseStyles, setStyles} from '../util';\n\n/**\n * Returns an instance of `SpecialCasedStyles` if and when any special (non animateable) styles are\n * detected.\n *\n * In CSS there exist properties that cannot be animated within a keyframe animation\n * (whether it be via CSS keyframes or web-animations) and the animation implementation\n * will ignore them. This function is designed to detect those special cased styles and\n * return a container that will be executed at the start and end of the animation.\n *\n * @returns an instance of `SpecialCasedStyles` if any special styles are detected otherwise `null`\n */\nexport function packageNonAnimatableStyles(\n    element: any, styles: {[key: string]: any}|{[key: string]: any}[]): SpecialCasedStyles|null {\n  let startStyles: {[key: string]: any}|null = null;\n  let endStyles: {[key: string]: any}|null = null;\n  if (Array.isArray(styles) && styles.length) {\n    startStyles = filterNonAnimatableStyles(styles[0]);\n    if (styles.length > 1) {\n      endStyles = filterNonAnimatableStyles(styles[styles.length - 1]);\n    }\n  } else if (styles) {\n    startStyles = filterNonAnimatableStyles(styles);\n  }\n\n  return (startStyles || endStyles) ? new SpecialCasedStyles(element, startStyles, endStyles) :\n                                      null;\n}\n\n/**\n * Designed to be executed during a keyframe-based animation to apply any special-cased styles.\n *\n * When started (when the `start()` method is run) then the provided `startStyles`\n * will be applied. When finished (when the `finish()` method is called) the\n * `endStyles` will be applied as well any any starting styles. Finally when\n * `destroy()` is called then all styles will be removed.\n */\nexport class SpecialCasedStyles {\n  static initialStylesByElement = new WeakMap<any, {[key: string]: any}>();\n\n  private _state = SpecialCasedStylesState.Pending;\n  private _initialStyles!: {[key: string]: any};\n\n  constructor(\n      private _element: any, private _startStyles: {[key: string]: any}|null,\n      private _endStyles: {[key: string]: any}|null) {\n    let initialStyles = SpecialCasedStyles.initialStylesByElement.get(_element);\n    if (!initialStyles) {\n      SpecialCasedStyles.initialStylesByElement.set(_element, initialStyles = {});\n    }\n    this._initialStyles = initialStyles;\n  }\n\n  start() {\n    if (this._state < SpecialCasedStylesState.Started) {\n      if (this._startStyles) {\n        setStyles(this._element, this._startStyles, this._initialStyles);\n      }\n      this._state = SpecialCasedStylesState.Started;\n    }\n  }\n\n  finish() {\n    this.start();\n    if (this._state < SpecialCasedStylesState.Finished) {\n      setStyles(this._element, this._initialStyles);\n      if (this._endStyles) {\n        setStyles(this._element, this._endStyles);\n        this._endStyles = null;\n      }\n      this._state = SpecialCasedStylesState.Started;\n    }\n  }\n\n  destroy() {\n    this.finish();\n    if (this._state < SpecialCasedStylesState.Destroyed) {\n      SpecialCasedStyles.initialStylesByElement.delete(this._element);\n      if (this._startStyles) {\n        eraseStyles(this._element, this._startStyles);\n        this._endStyles = null;\n      }\n      if (this._endStyles) {\n        eraseStyles(this._element, this._endStyles);\n        this._endStyles = null;\n      }\n      setStyles(this._element, this._initialStyles);\n      this._state = SpecialCasedStylesState.Destroyed;\n    }\n  }\n}\n\n/**\n * An enum of states reflective of what the status of `SpecialCasedStyles` is.\n *\n * Depending on how `SpecialCasedStyles` is interacted with, the start and end\n * styles may not be applied in the same way. This enum ensures that if and when\n * the ending styles are applied then the starting styles are applied. It is\n * also used to reflect what the current status of the special cased styles are\n * which helps prevent the starting/ending styles not be applied twice. It is\n * also used to cleanup the styles once `SpecialCasedStyles` is destroyed.\n */\nconst enum SpecialCasedStylesState {\n  Pending = 0,\n  Started = 1,\n  Finished = 2,\n  Destroyed = 3,\n}\n\nfunction filterNonAnimatableStyles(styles: {[key: string]: any}) {\n  let result: {[key: string]: any}|null = null;\n  const props = Object.keys(styles);\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i];\n    if (isNonAnimatableStyle(prop)) {\n      result = result || {};\n      result[prop] = styles[prop];\n    }\n  }\n  return result;\n}\n\nfunction isNonAnimatableStyle(prop: string) {\n  return prop === 'display' || prop === 'position';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nconst ANIMATION_PROP = 'animation';\nconst ANIMATIONEND_EVENT = 'animationend';\nconst ONE_SECOND = 1000;\n\nexport class ElementAnimationStyleHandler {\n  private readonly _eventFn: (e: any) => any;\n  private _finished = false;\n  private _destroyed = false;\n  private _startTime = 0;\n  private _position = 0;\n\n  constructor(\n      private readonly _element: any, private readonly _name: string,\n      private readonly _duration: number, private readonly _delay: number,\n      private readonly _easing: string, private readonly _fillMode: ''|'both'|'forwards',\n      private readonly _onDoneFn: () => any) {\n    this._eventFn = (e) => this._handleCallback(e);\n  }\n\n  apply() {\n    applyKeyframeAnimation(\n        this._element,\n        `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${\n            this._name}`);\n    addRemoveAnimationEvent(this._element, this._eventFn, false);\n    this._startTime = Date.now();\n  }\n\n  pause() {\n    playPauseAnimation(this._element, this._name, 'paused');\n  }\n\n  resume() {\n    playPauseAnimation(this._element, this._name, 'running');\n  }\n\n  setPosition(position: number) {\n    const index = findIndexForAnimation(this._element, this._name);\n    this._position = position * this._duration;\n    setAnimationStyle(this._element, 'Delay', `-${this._position}ms`, index);\n  }\n\n  getPosition() {\n    return this._position;\n  }\n\n  private _handleCallback(event: any) {\n    const timestamp = event._ngTestManualTimestamp || Date.now();\n    const elapsedTime =\n        parseFloat(event.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES)) * ONE_SECOND;\n    if (event.animationName == this._name &&\n        Math.max(timestamp - this._startTime, 0) >= this._delay && elapsedTime >= this._duration) {\n      this.finish();\n    }\n  }\n\n  finish() {\n    if (this._finished) return;\n    this._finished = true;\n    this._onDoneFn();\n    addRemoveAnimationEvent(this._element, this._eventFn, true);\n  }\n\n  destroy() {\n    if (this._destroyed) return;\n    this._destroyed = true;\n    this.finish();\n    removeKeyframeAnimation(this._element, this._name);\n  }\n}\n\nfunction playPauseAnimation(element: any, name: string, status: 'running'|'paused') {\n  const index = findIndexForAnimation(element, name);\n  setAnimationStyle(element, 'PlayState', status, index);\n}\n\nfunction applyKeyframeAnimation(element: any, value: string): number {\n  const anim = getAnimationStyle(element, '').trim();\n  let index = 0;\n  if (anim.length) {\n    index = countChars(anim, ',') + 1;\n    value = `${anim}, ${value}`;\n  }\n  setAnimationStyle(element, '', value);\n  return index;\n}\n\nfunction removeKeyframeAnimation(element: any, name: string) {\n  const anim = getAnimationStyle(element, '');\n  const tokens = anim.split(',');\n  const index = findMatchingTokenIndex(tokens, name);\n  if (index >= 0) {\n    tokens.splice(index, 1);\n    const newValue = tokens.join(',');\n    setAnimationStyle(element, '', newValue);\n  }\n}\n\nfunction findIndexForAnimation(element: any, value: string) {\n  const anim = getAnimationStyle(element, '');\n  if (anim.indexOf(',') > 0) {\n    const tokens = anim.split(',');\n    return findMatchingTokenIndex(tokens, value);\n  }\n  return findMatchingTokenIndex([anim], value);\n}\n\nfunction findMatchingTokenIndex(tokens: string[], searchToken: string): number {\n  for (let i = 0; i < tokens.length; i++) {\n    if (tokens[i].indexOf(searchToken) >= 0) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction addRemoveAnimationEvent(element: any, fn: (e: any) => any, doRemove: boolean) {\n  doRemove ? element.removeEventListener(ANIMATIONEND_EVENT, fn) :\n             element.addEventListener(ANIMATIONEND_EVENT, fn);\n}\n\nfunction setAnimationStyle(element: any, name: string, value: string, index?: number) {\n  const prop = ANIMATION_PROP + name;\n  if (index != null) {\n    const oldValue = element.style[prop];\n    if (oldValue.length) {\n      const tokens = oldValue.split(',');\n      tokens[index] = value;\n      value = tokens.join(',');\n    }\n  }\n  element.style[prop] = value;\n}\n\nfunction getAnimationStyle(element: any, name: string) {\n  return element.style[ANIMATION_PROP + name];\n}\n\nfunction countChars(value: string, char: string): number {\n  let count = 0;\n  for (let i = 0; i < value.length; i++) {\n    const c = value.charAt(i);\n    if (c === char) count++;\n  }\n  return count;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer} from '@angular/animations';\n\nimport {computeStyle} from '../../util';\nimport {SpecialCasedStyles} from '../special_cased_styles';\nimport {ElementAnimationStyleHandler} from './element_animation_style_handler';\n\nconst DEFAULT_FILL_MODE = 'forwards';\nconst DEFAULT_EASING = 'linear';\n\nexport const enum AnimatorControlState {\n  INITIALIZED = 1,\n  STARTED = 2,\n  FINISHED = 3,\n  DESTROYED = 4\n}\n\nexport class CssKeyframesPlayer implements AnimationPlayer {\n  private _onDoneFns: Function[] = [];\n  private _onStartFns: Function[] = [];\n  private _onDestroyFns: Function[] = [];\n\n  private _started = false;\n  // TODO(issue/24571): remove '!'.\n  private _styler!: ElementAnimationStyleHandler;\n\n  // TODO(issue/24571): remove '!'.\n  public parentPlayer!: AnimationPlayer;\n  public readonly totalTime: number;\n  public readonly easing: string;\n  public currentSnapshot: {[key: string]: string} = {};\n\n  private _state: AnimatorControlState = 0;\n\n  constructor(\n      public readonly element: any, public readonly keyframes: {[key: string]: string|number}[],\n      public readonly animationName: string, private readonly _duration: number,\n      private readonly _delay: number, easing: string,\n      private readonly _finalStyles: {[key: string]: any},\n      private readonly _specialStyles?: SpecialCasedStyles|null) {\n    this.easing = easing || DEFAULT_EASING;\n    this.totalTime = _duration + _delay;\n    this._buildStyler();\n  }\n\n  onStart(fn: () => void): void {\n    this._onStartFns.push(fn);\n  }\n\n  onDone(fn: () => void): void {\n    this._onDoneFns.push(fn);\n  }\n\n  onDestroy(fn: () => void): void {\n    this._onDestroyFns.push(fn);\n  }\n\n  destroy() {\n    this.init();\n    if (this._state >= AnimatorControlState.DESTROYED) return;\n    this._state = AnimatorControlState.DESTROYED;\n    this._styler.destroy();\n    this._flushStartFns();\n    this._flushDoneFns();\n    if (this._specialStyles) {\n      this._specialStyles.destroy();\n    }\n    this._onDestroyFns.forEach(fn => fn());\n    this._onDestroyFns = [];\n  }\n\n  private _flushDoneFns() {\n    this._onDoneFns.forEach(fn => fn());\n    this._onDoneFns = [];\n  }\n\n  private _flushStartFns() {\n    this._onStartFns.forEach(fn => fn());\n    this._onStartFns = [];\n  }\n\n  finish() {\n    this.init();\n    if (this._state >= AnimatorControlState.FINISHED) return;\n    this._state = AnimatorControlState.FINISHED;\n    this._styler.finish();\n    this._flushStartFns();\n    if (this._specialStyles) {\n      this._specialStyles.finish();\n    }\n    this._flushDoneFns();\n  }\n\n  setPosition(value: number) {\n    this._styler.setPosition(value);\n  }\n\n  getPosition(): number {\n    return this._styler.getPosition();\n  }\n\n  hasStarted(): boolean {\n    return this._state >= AnimatorControlState.STARTED;\n  }\n  init(): void {\n    if (this._state >= AnimatorControlState.INITIALIZED) return;\n    this._state = AnimatorControlState.INITIALIZED;\n    const elm = this.element;\n    this._styler.apply();\n    if (this._delay) {\n      this._styler.pause();\n    }\n  }\n\n  play(): void {\n    this.init();\n    if (!this.hasStarted()) {\n      this._flushStartFns();\n      this._state = AnimatorControlState.STARTED;\n      if (this._specialStyles) {\n        this._specialStyles.start();\n      }\n    }\n    this._styler.resume();\n  }\n\n  pause(): void {\n    this.init();\n    this._styler.pause();\n  }\n  restart(): void {\n    this.reset();\n    this.play();\n  }\n  reset(): void {\n    this._styler.destroy();\n    this._buildStyler();\n    this._styler.apply();\n  }\n\n  private _buildStyler() {\n    this._styler = new ElementAnimationStyleHandler(\n        this.element, this.animationName, this._duration, this._delay, this.easing,\n        DEFAULT_FILL_MODE, () => this.finish());\n  }\n\n  /** @internal */\n  triggerCallback(phaseName: string): void {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n\n  beforeDestroy() {\n    this.init();\n    const styles: {[key: string]: string} = {};\n    if (this.hasStarted()) {\n      const finished = this._state >= AnimatorControlState.FINISHED;\n      Object.keys(this._finalStyles).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] = finished ? this._finalStyles[prop] : computeStyle(this.element, prop);\n        }\n      });\n    }\n    this.currentSnapshot = styles;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NoopAnimationPlayer} from '@angular/animations';\nimport {hypenatePropsObject} from '../shared';\n\nexport class DirectStylePlayer extends NoopAnimationPlayer {\n  private _startingStyles: {[key: string]: any}|null = {};\n  private __initialized = false;\n  private _styles: {[key: string]: any};\n\n  constructor(public element: any, styles: {[key: string]: any}) {\n    super();\n    this._styles = hypenatePropsObject(styles);\n  }\n\n  init() {\n    if (this.__initialized || !this._startingStyles) return;\n    this.__initialized = true;\n    Object.keys(this._styles).forEach(prop => {\n      this._startingStyles![prop] = this.element.style[prop];\n    });\n    super.init();\n  }\n\n  play() {\n    if (!this._startingStyles) return;\n    this.init();\n    Object.keys(this._styles)\n        .forEach(prop => this.element.style.setProperty(prop, this._styles[prop]));\n    super.play();\n  }\n\n  destroy() {\n    if (!this._startingStyles) return;\n    Object.keys(this._startingStyles).forEach(prop => {\n      const value = this._startingStyles![prop];\n      if (value) {\n        this.element.style.setProperty(prop, value);\n      } else {\n        this.element.style.removeProperty(prop);\n      }\n    });\n    this._startingStyles = null;\n    super.destroy();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {allowPreviousPlayerStylesMerge, balancePreviousStylesIntoKeyframes, computeStyle} from '../../util';\nimport {AnimationDriver} from '../animation_driver';\nimport {containsElement, hypenatePropsObject, invokeQuery, matchesElement, validateStyleProperty} from '../shared';\nimport {packageNonAnimatableStyles} from '../special_cased_styles';\n\nimport {CssKeyframesPlayer} from './css_keyframes_player';\nimport {DirectStylePlayer} from './direct_style_player';\n\nconst KEYFRAMES_NAME_PREFIX = 'gen_css_kf_';\nconst TAB_SPACE = ' ';\n\nexport class CssKeyframesDriver implements AnimationDriver {\n  private _count = 0;\n  private readonly _head: any = document.querySelector('head');\n  private _warningIssued = false;\n\n  validateStyleProperty(prop: string): boolean {\n    return validateStyleProperty(prop);\n  }\n\n  matchesElement(element: any, selector: string): boolean {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1: any, elm2: any): boolean {\n    return containsElement(elm1, elm2);\n  }\n\n  query(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return (window.getComputedStyle(element) as any)[prop] as string;\n  }\n\n  buildKeyframeElement(element: any, name: string, keyframes: {[key: string]: any}[]): any {\n    keyframes = keyframes.map(kf => hypenatePropsObject(kf));\n    let keyframeStr = `@keyframes ${name} {\\n`;\n    let tab = '';\n    keyframes.forEach(kf => {\n      tab = TAB_SPACE;\n      const offset = parseFloat(kf['offset']);\n      keyframeStr += `${tab}${offset * 100}% {\\n`;\n      tab += TAB_SPACE;\n      Object.keys(kf).forEach(prop => {\n        const value = kf[prop];\n        switch (prop) {\n          case 'offset':\n            return;\n          case 'easing':\n            if (value) {\n              keyframeStr += `${tab}animation-timing-function: ${value};\\n`;\n            }\n            return;\n          default:\n            keyframeStr += `${tab}${prop}: ${value};\\n`;\n            return;\n        }\n      });\n      keyframeStr += `${tab}}\\n`;\n    });\n    keyframeStr += `}\\n`;\n\n    const kfElm = document.createElement('style');\n    kfElm.innerHTML = keyframeStr;\n    return kfElm;\n  }\n\n  animate(\n      element: any, keyframes: ɵStyleData[], duration: number, delay: number, easing: string,\n      previousPlayers: AnimationPlayer[] = [], scrubberAccessRequested?: boolean): AnimationPlayer {\n    if (scrubberAccessRequested) {\n      this._notifyFaultyScrubber();\n    }\n\n    const previousCssKeyframePlayers = <CssKeyframesPlayer[]>previousPlayers.filter(\n        player => player instanceof CssKeyframesPlayer);\n\n    const previousStyles: {[key: string]: any} = {};\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousCssKeyframePlayers.forEach(player => {\n        let styles = player.currentSnapshot;\n        Object.keys(styles).forEach(prop => previousStyles[prop] = styles[prop]);\n      });\n    }\n\n    keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n    const finalStyles = flattenKeyframesIntoStyles(keyframes);\n\n    // if there is no animation then there is no point in applying\n    // styles and waiting for an event to get fired. This causes lag.\n    // It's better to just directly apply the styles to the element\n    // via the direct styling animation player.\n    if (duration == 0) {\n      return new DirectStylePlayer(element, finalStyles);\n    }\n\n    const animationName = `${KEYFRAMES_NAME_PREFIX}${this._count++}`;\n    const kfElm = this.buildKeyframeElement(element, animationName, keyframes);\n    document.querySelector('head')!.appendChild(kfElm);\n\n    const specialStyles = packageNonAnimatableStyles(element, keyframes);\n    const player = new CssKeyframesPlayer(\n        element, keyframes, animationName, duration, delay, easing, finalStyles, specialStyles);\n\n    player.onDestroy(() => removeElement(kfElm));\n    return player;\n  }\n\n  private _notifyFaultyScrubber() {\n    if (!this._warningIssued) {\n      console.warn(\n          '@angular/animations: please load the web-animations.js polyfill to allow programmatic access...\\n',\n          '  visit http://bit.ly/IWukam to learn more about using the web-animation-js polyfill.');\n      this._warningIssued = true;\n    }\n  }\n}\n\nfunction flattenKeyframesIntoStyles(keyframes: null|{[key: string]: any}|\n                                    {[key: string]: any}[]): {[key: string]: any} {\n  let flatKeyframes: {[key: string]: any} = {};\n  if (keyframes) {\n    const kfs = Array.isArray(keyframes) ? keyframes : [keyframes];\n    kfs.forEach(kf => {\n      Object.keys(kf).forEach(prop => {\n        if (prop == 'offset' || prop == 'easing') return;\n        flatKeyframes[prop] = kf[prop];\n      });\n    });\n  }\n  return flatKeyframes;\n}\n\nfunction removeElement(node: any) {\n  node.parentNode.removeChild(node);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer} from '@angular/animations';\n\nimport {computeStyle} from '../../util';\nimport {SpecialCasedStyles} from '../special_cased_styles';\n\nimport {DOMAnimation} from './dom_animation';\n\nexport class WebAnimationsPlayer implements AnimationPlayer {\n  private _onDoneFns: Function[] = [];\n  private _onStartFns: Function[] = [];\n  private _onDestroyFns: Function[] = [];\n  private _duration: number;\n  private _delay: number;\n  private _initialized = false;\n  private _finished = false;\n  private _started = false;\n  private _destroyed = false;\n  // TODO(issue/24571): remove '!'.\n  private _finalKeyframe!: {[key: string]: string|number};\n\n  // TODO(issue/24571): remove '!'.\n  public readonly domPlayer!: DOMAnimation;\n  public time = 0;\n\n  public parentPlayer: AnimationPlayer|null = null;\n  public currentSnapshot: {[styleName: string]: string|number} = {};\n\n  constructor(\n      public element: any, public keyframes: {[key: string]: string|number}[],\n      public options: {[key: string]: string|number},\n      private _specialStyles?: SpecialCasedStyles|null) {\n    this._duration = <number>options['duration'];\n    this._delay = <number>options['delay'] || 0;\n    this.time = this._duration + this._delay;\n  }\n\n  private _onFinish() {\n    if (!this._finished) {\n      this._finished = true;\n      this._onDoneFns.forEach(fn => fn());\n      this._onDoneFns = [];\n    }\n  }\n\n  init(): void {\n    this._buildPlayer();\n    this._preparePlayerBeforeStart();\n  }\n\n  private _buildPlayer(): void {\n    if (this._initialized) return;\n    this._initialized = true;\n\n    const keyframes = this.keyframes;\n    (this as {domPlayer: DOMAnimation}).domPlayer =\n        this._triggerWebAnimation(this.element, keyframes, this.options);\n    this._finalKeyframe = keyframes.length ? keyframes[keyframes.length - 1] : {};\n    this.domPlayer.addEventListener('finish', () => this._onFinish());\n  }\n\n  private _preparePlayerBeforeStart() {\n    // this is required so that the player doesn't start to animate right away\n    if (this._delay) {\n      this._resetDomPlayerState();\n    } else {\n      this.domPlayer.pause();\n    }\n  }\n\n  /** @internal */\n  _triggerWebAnimation(element: any, keyframes: any[], options: any): DOMAnimation {\n    // jscompiler doesn't seem to know animate is a native property because it's not fully\n    // supported yet across common browsers (we polyfill it for Edge/Safari) [CL #143630929]\n    return element['animate'](keyframes, options) as DOMAnimation;\n  }\n\n  onStart(fn: () => void): void {\n    this._onStartFns.push(fn);\n  }\n\n  onDone(fn: () => void): void {\n    this._onDoneFns.push(fn);\n  }\n\n  onDestroy(fn: () => void): void {\n    this._onDestroyFns.push(fn);\n  }\n\n  play(): void {\n    this._buildPlayer();\n    if (!this.hasStarted()) {\n      this._onStartFns.forEach(fn => fn());\n      this._onStartFns = [];\n      this._started = true;\n      if (this._specialStyles) {\n        this._specialStyles.start();\n      }\n    }\n    this.domPlayer.play();\n  }\n\n  pause(): void {\n    this.init();\n    this.domPlayer.pause();\n  }\n\n  finish(): void {\n    this.init();\n    if (this._specialStyles) {\n      this._specialStyles.finish();\n    }\n    this._onFinish();\n    this.domPlayer.finish();\n  }\n\n  reset(): void {\n    this._resetDomPlayerState();\n    this._destroyed = false;\n    this._finished = false;\n    this._started = false;\n  }\n\n  private _resetDomPlayerState() {\n    if (this.domPlayer) {\n      this.domPlayer.cancel();\n    }\n  }\n\n  restart(): void {\n    this.reset();\n    this.play();\n  }\n\n  hasStarted(): boolean {\n    return this._started;\n  }\n\n  destroy(): void {\n    if (!this._destroyed) {\n      this._destroyed = true;\n      this._resetDomPlayerState();\n      this._onFinish();\n      if (this._specialStyles) {\n        this._specialStyles.destroy();\n      }\n      this._onDestroyFns.forEach(fn => fn());\n      this._onDestroyFns = [];\n    }\n  }\n\n  setPosition(p: number): void {\n    this.domPlayer.currentTime = p * this.time;\n  }\n\n  getPosition(): number {\n    return this.domPlayer.currentTime / this.time;\n  }\n\n  get totalTime(): number {\n    return this._delay + this._duration;\n  }\n\n  beforeDestroy() {\n    const styles: {[key: string]: string|number} = {};\n    if (this.hasStarted()) {\n      Object.keys(this._finalKeyframe).forEach(prop => {\n        if (prop != 'offset') {\n          styles[prop] =\n              this._finished ? this._finalKeyframe[prop] : computeStyle(this.element, prop);\n        }\n      });\n    }\n    this.currentSnapshot = styles;\n  }\n\n  /** @internal */\n  triggerCallback(phaseName: string): void {\n    const methods = phaseName == 'start' ? this._onStartFns : this._onDoneFns;\n    methods.forEach(fn => fn());\n    methods.length = 0;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationPlayer, ɵStyleData} from '@angular/animations';\n\nimport {allowPreviousPlayerStylesMerge, balancePreviousStylesIntoKeyframes, copyStyles} from '../../util';\nimport {AnimationDriver} from '../animation_driver';\nimport {CssKeyframesDriver} from '../css_keyframes/css_keyframes_driver';\nimport {containsElement, invokeQuery, isBrowser, matchesElement, validateStyleProperty} from '../shared';\nimport {packageNonAnimatableStyles} from '../special_cased_styles';\n\nimport {WebAnimationsPlayer} from './web_animations_player';\n\nexport class WebAnimationsDriver implements AnimationDriver {\n  private _isNativeImpl = /\\{\\s*\\[native\\s+code\\]\\s*\\}/.test(getElementAnimateFn().toString());\n  private _cssKeyframesDriver = new CssKeyframesDriver();\n\n  validateStyleProperty(prop: string): boolean {\n    return validateStyleProperty(prop);\n  }\n\n  matchesElement(element: any, selector: string): boolean {\n    return matchesElement(element, selector);\n  }\n\n  containsElement(elm1: any, elm2: any): boolean {\n    return containsElement(elm1, elm2);\n  }\n\n  query(element: any, selector: string, multi: boolean): any[] {\n    return invokeQuery(element, selector, multi);\n  }\n\n  computeStyle(element: any, prop: string, defaultValue?: string): string {\n    return (window.getComputedStyle(element) as any)[prop] as string;\n  }\n\n  overrideWebAnimationsSupport(supported: boolean) {\n    this._isNativeImpl = supported;\n  }\n\n  animate(\n      element: any, keyframes: ɵStyleData[], duration: number, delay: number, easing: string,\n      previousPlayers: AnimationPlayer[] = [], scrubberAccessRequested?: boolean): AnimationPlayer {\n    const useKeyframes = !scrubberAccessRequested && !this._isNativeImpl;\n    if (useKeyframes) {\n      return this._cssKeyframesDriver.animate(\n          element, keyframes, duration, delay, easing, previousPlayers);\n    }\n\n    const fill = delay == 0 ? 'both' : 'forwards';\n    const playerOptions: {[key: string]: string|number} = {duration, delay, fill};\n    // we check for this to avoid having a null|undefined value be present\n    // for the easing (which results in an error for certain browsers #9752)\n    if (easing) {\n      playerOptions['easing'] = easing;\n    }\n\n    const previousStyles: {[key: string]: any} = {};\n    const previousWebAnimationPlayers = <WebAnimationsPlayer[]>previousPlayers.filter(\n        player => player instanceof WebAnimationsPlayer);\n\n    if (allowPreviousPlayerStylesMerge(duration, delay)) {\n      previousWebAnimationPlayers.forEach(player => {\n        let styles = player.currentSnapshot;\n        Object.keys(styles).forEach(prop => previousStyles[prop] = styles[prop]);\n      });\n    }\n\n    keyframes = keyframes.map(styles => copyStyles(styles, false));\n    keyframes = balancePreviousStylesIntoKeyframes(element, keyframes, previousStyles);\n    const specialStyles = packageNonAnimatableStyles(element, keyframes);\n    return new WebAnimationsPlayer(element, keyframes, playerOptions, specialStyles);\n  }\n}\n\nexport function supportsWebAnimations() {\n  return typeof getElementAnimateFn() === 'function';\n}\n\nfunction getElementAnimateFn(): any {\n  return (isBrowser() && (<any>Element).prototype['animate']) || {};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport {Animation as ɵAnimation} from './dsl/animation';\nexport {AnimationStyleNormalizer as ɵAnimationStyleNormalizer, NoopAnimationStyleNormalizer as ɵNoopAnimationStyleNormalizer} from './dsl/style_normalization/animation_style_normalizer';\nexport {WebAnimationsStyleNormalizer as ɵWebAnimationsStyleNormalizer} from './dsl/style_normalization/web_animations_style_normalizer';\nexport {NoopAnimationDriver as ɵNoopAnimationDriver} from './render/animation_driver';\nexport {AnimationEngine as ɵAnimationEngine} from './render/animation_engine_next';\nexport {CssKeyframesDriver as ɵCssKeyframesDriver} from './render/css_keyframes/css_keyframes_driver';\nexport {CssKeyframesPlayer as ɵCssKeyframesPlayer} from './render/css_keyframes/css_keyframes_player';\nexport {containsElement as ɵcontainsElement, invokeQuery as ɵinvokeQuery, matchesElement as ɵmatchesElement, validateStyleProperty as ɵvalidateStyleProperty} from './render/shared';\nexport {supportsWebAnimations as ɵsupportsWebAnimations, WebAnimationsDriver as ɵWebAnimationsDriver} from './render/web_animations/web_animations_driver';\nexport {WebAnimationsPlayer as ɵWebAnimationsPlayer} from './render/web_animations/web_animations_player';\nexport {allowPreviousPlayerStylesMerge as ɵallowPreviousPlayerStylesMerge} from './util';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\nexport {AnimationDriver} from './render/animation_driver';\nexport * from './private_export';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/browser';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verifcation. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {SpecialCasedStyles as ɵangular_packages_animations_browser_browser_a} from './src/render/special_cased_styles';"]},"metadata":{},"sourceType":"module"}